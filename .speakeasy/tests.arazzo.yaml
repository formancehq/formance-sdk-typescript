arazzo: 1.0.0
info:
  title: Test Suite
  summary: Created from /Users/flemzord/Projet/Formance/sdks/formance-sdk-typescript/.speakeasy/temp/output_ad4701.json
  version: 0.0.1
sourceDescriptions:
  - name: /Users/flemzord/Projet/Formance/sdks/formance-sdk-typescript/.speakeasy/temp/output_ad4701.json
    url: https://TBD.com
    type: openapi
workflows:
  - workflowId: getVersions
    steps:
      - stepId: test
        operationId: getVersions
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "env": "\u003cvalue\u003e",
                "region": "\u003cvalue\u003e",
                "versions": [
                  {
                    "health": true,
                    "name": "\u003cvalue\u003e",
                    "version": "\u003cvalue\u003e"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: SDK
  - workflowId: createClient
    steps:
      - stepId: test
        operationId: createClient
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: v1
  - workflowId: createSecret
    steps:
      - stepId: test
        operationId: createSecret
        parameters:
          - name: clientId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: v1
  - workflowId: deleteClient
    steps:
      - stepId: test
        operationId: deleteClient
        parameters:
          - name: clientId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: v1
  - workflowId: deleteSecret
    steps:
      - stepId: test
        operationId: deleteSecret
        parameters:
          - name: clientId
            in: path
            value: <id>
          - name: secretId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: v1
  - workflowId: getOIDCWellKnowns
    steps:
      - stepId: test
        operationId: getOIDCWellKnowns
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: v1
  - workflowId: getServerInfo
    steps:
      - stepId: test
        operationId: getServerInfo
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "\u003cvalue\u003e"
              }
            type: simple
    x-speakeasy-test-group: v1
  - workflowId: listClients
    steps:
      - stepId: test
        operationId: listClients
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: v1
  - workflowId: listUsers
    steps:
      - stepId: test
        operationId: listUsers
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": [
                  {
                    "email": "user1@orga1.com",
                    "id": "3bb03708-312f-48a0-821a-e765837dc2c4",
                    "subject": "Jane Doe"
                  },
                  {
                    "email": "user1@orga1.com",
                    "id": "3bb03708-312f-48a0-821a-e765837dc2c4",
                    "subject": "Jane Doe"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: v1
  - workflowId: readClient
    steps:
      - stepId: test
        operationId: readClient
        parameters:
          - name: clientId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: v1
  - workflowId: readUser
    steps:
      - stepId: test
        operationId: readUser
        parameters:
          - name: userId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "email": "user1@orga1.com",
                  "id": "3bb03708-312f-48a0-821a-e765837dc2c4",
                  "subject": "Jane Doe"
                }
              }
            type: simple
    x-speakeasy-test-group: v1
  - workflowId: updateClient
    steps:
      - stepId: test
        operationId: updateClient
        parameters:
          - name: clientId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: v1
  - workflowId: v2AddMetadataOnTransaction
    steps:
      - stepId: test
        operationId: v2AddMetadataOnTransaction
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: id
            in: path
            value: 1234
          - name: dryRun
            in: query
            value: true
        requestBody:
          contentType: application/json
          payload:
            admin: "true"
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: v2
  - workflowId: v2AddMetadataToAccount
    steps:
      - stepId: test
        operationId: v2AddMetadataToAccount
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: address
            in: path
            value: users:001
          - name: dryRun
            in: query
            value: true
        requestBody:
          contentType: application/json
          payload:
            admin: "true"
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: v2
  - workflowId: v2CountAccounts
    steps:
      - stepId: test
        operationId: v2CountAccounts
        parameters:
          - name: ledger
            in: path
            value: ledger001
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: v2
  - workflowId: v2CountTransactions
    steps:
      - stepId: test
        operationId: v2CountTransactions
        parameters:
          - name: ledger
            in: path
            value: ledger001
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: v2
  - workflowId: v2CreateBulk
    steps:
      - stepId: test
        operationId: v2CreateBulk
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: continueOnFailure
            in: query
            value: true
          - name: atomic
            in: query
            value: true
          - name: parallel
            in: query
            value: true
        requestBody:
          contentType: application/json
          payload:
            - action: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": [
                  {
                    "errorCode": "\u003cvalue\u003e",
                    "errorDescription": "\u003cvalue\u003e",
                    "logID": 314478,
                    "responseType": "\u003cvalue\u003e"
                  }
                ],
                "details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9",
                "errorCode": "VALIDATION",
                "errorMessage": "[VALIDATION] invalid 'cursor' query param"
              }
            type: simple
    x-speakeasy-test-group: v2
  - workflowId: v2CreateLedger
    steps:
      - stepId: test
        operationId: v2CreateLedger
        parameters:
          - name: ledger
            in: path
            value: ledger001
        requestBody:
          contentType: application/json
          payload:
            metadata:
              admin: "true"
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: v2
  - workflowId: v2CreateTransaction
    steps:
      - stepId: test
        operationId: v2CreateTransaction
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: dryRun
            in: query
            value: true
          - name: force
            in: query
            value: true
        requestBody:
          contentType: application/json
          payload:
            metadata:
              admin: "true"
            postings:
              - amount: 100
                asset: COIN
                destination: users:002
                source: users:001
              - amount: 100
                asset: COIN
                destination: users:002
                source: users:001
            reference: ref:001
            script:
              plain: |
                vars {
                account $user
                }
                send [COIN 10] (
                	source = @world
                	destination = $user
                )
              vars:
                user: users:042
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "id": 31495,
                  "metadata": {
                    "admin": "true"
                  },
                  "postCommitEffectiveVolumes": {
                    "orders:1": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    },
                    "orders:2": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    }
                  },
                  "postCommitVolumes": {
                    "orders:1": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    },
                    "orders:2": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    }
                  },
                  "postings": [],
                  "preCommitEffectiveVolumes": {
                    "orders:1": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    },
                    "orders:2": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    }
                  },
                  "preCommitVolumes": {
                    "orders:1": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    },
                    "orders:2": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    }
                  },
                  "reference": "ref:001",
                  "reverted": false,
                  "timestamp": "2025-09-22T01:21:07.537Z"
                }
              }
            type: simple
    x-speakeasy-test-group: v2
  - workflowId: v2DeleteAccountMetadata
    steps:
      - stepId: test
        operationId: v2DeleteAccountMetadata
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: address
            in: path
            value: 96609 Cummings Canyon
          - name: key
            in: path
            value: foo
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: v2
  - workflowId: v2DeleteLedgerMetadata
    steps:
      - stepId: test
        operationId: v2DeleteLedgerMetadata
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: key
            in: path
            value: foo
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: v2
  - workflowId: v2DeleteTransactionMetadata
    steps:
      - stepId: test
        operationId: v2DeleteTransactionMetadata
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: id
            in: path
            value: 1234
          - name: key
            in: path
            value: foo
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: v2
  - workflowId: v2ExportLogs
    steps:
      - stepId: test
        operationId: v2ExportLogs
        parameters:
          - name: ledger
            in: path
            value: ledger001
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: v2
  - workflowId: v2GetAccount
    steps:
      - stepId: test
        operationId: v2GetAccount
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: address
            in: path
            value: users:001
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "address": "users:001",
                  "effectiveVolumes": {
                    "USD": {
                      "balance": 80,
                      "input": 100,
                      "output": 20
                    },
                    "EUR": {
                      "balance": 80,
                      "input": 100,
                      "output": 20
                    }
                  },
                  "metadata": {
                    "admin": "true"
                  },
                  "volumes": {
                    "USD": {
                      "balance": 80,
                      "input": 100,
                      "output": 20
                    },
                    "EUR": {
                      "balance": 80,
                      "input": 100,
                      "output": 20
                    }
                  }
                }
              }
            type: simple
    x-speakeasy-test-group: v2
  - workflowId: v2GetBalancesAggregated
    steps:
      - stepId: test
        operationId: v2GetBalancesAggregated
        parameters:
          - name: ledger
            in: path
            value: ledger001
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "USD": 100,
                  "EUR": 12
                }
              }
            type: simple
    x-speakeasy-test-group: v2
  - workflowId: v2GetInfo
    steps:
      - stepId: test
        operationId: v2GetInfo
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "server": "\u003cvalue\u003e",
                "version": "\u003cvalue\u003e"
              }
            type: simple
    x-speakeasy-test-group: v2
  - workflowId: v2GetLedger
    steps:
      - stepId: test
        operationId: v2GetLedger
        parameters:
          - name: ledger
            in: path
            value: ledger001
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "addedAt": "2024-04-15T03:59:26.558Z",
                  "bucket": "\u003cvalue\u003e",
                  "metadata": {
                    "admin": "true"
                  },
                  "name": "\u003cvalue\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: v2
  - workflowId: v2GetLedgerInfo
    steps:
      - stepId: test
        operationId: v2GetLedgerInfo
        parameters:
          - name: ledger
            in: path
            value: ledger001
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "name": "ledger001",
                  "storage": {
                    "migrations": [
                      {
                        "name": "migrations:001",
                        "version": "11"
                      },
                      {
                        "name": "migrations:001",
                        "version": "11"
                      },
                      {
                        "name": "migrations:001",
                        "version": "11"
                      }
                    ]
                  }
                }
              }
            type: simple
    x-speakeasy-test-group: v2
  - workflowId: getMetrics
    steps:
      - stepId: test
        operationId: getMetrics
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "key": "\u003cvalue\u003e",
                "key1": "\u003cvalue\u003e"
              }
            type: simple
    x-speakeasy-test-group: v2
  - workflowId: v2GetTransaction
    steps:
      - stepId: test
        operationId: v2GetTransaction
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: id
            in: path
            value: 1234
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "id": 546228,
                  "metadata": {
                    "admin": "true"
                  },
                  "postCommitEffectiveVolumes": {
                    "orders:1": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    },
                    "orders:2": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    }
                  },
                  "postCommitVolumes": {
                    "orders:1": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    },
                    "orders:2": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    }
                  },
                  "postings": [],
                  "preCommitEffectiveVolumes": {
                    "orders:1": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    },
                    "orders:2": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    }
                  },
                  "preCommitVolumes": {
                    "orders:1": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    },
                    "orders:2": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    }
                  },
                  "reference": "ref:001",
                  "reverted": true,
                  "timestamp": "2024-01-04T04:51:12.769Z"
                }
              }
            type: simple
    x-speakeasy-test-group: v2
  - workflowId: v2GetVolumesWithBalances
    steps:
      - stepId: test
        operationId: v2GetVolumesWithBalances
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: pageSize
            in: query
            value: 100
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
          - name: groupBy
            in: query
            value: 3
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "account": "60079609",
                      "asset": "\u003cvalue\u003e",
                      "balance": 992275,
                      "input": 894289,
                      "output": 625394
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: v2
  - workflowId: v2ImportLogs
    steps:
      - stepId: test
        operationId: v2ImportLogs
        parameters:
          - name: ledger
            in: path
            value: ledger001
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: v2
  - workflowId: v2ListAccounts
    steps:
      - stepId: test
        operationId: v2ListAccounts
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: pageSize
            in: query
            value: 100
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: v2
  - workflowId: v2ListLedgers
    steps:
      - stepId: test
        operationId: v2ListLedgers
        parameters:
          - name: pageSize
            in: query
            value: 100
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "addedAt": "2025-08-18T14:16:25.795Z",
                      "bucket": "\u003cvalue\u003e",
                      "metadata": {
                        "admin": "true"
                      },
                      "name": "\u003cvalue\u003e"
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: v2
  - workflowId: v2ListLogs
    steps:
      - stepId: test
        operationId: v2ListLogs
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: pageSize
            in: query
            value: 100
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "data": {},
                      "date": "2024-06-27T07:17:46.078Z",
                      "hash": "9ee060170400f556b7e1575cb13f9db004f150a08355c7431c62bc639166431e",
                      "id": 1234,
                      "type": "REVERTED_TRANSACTION"
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: v2
  - workflowId: v2ListTransactions
    steps:
      - stepId: test
        operationId: v2ListTransactions
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: pageSize
            in: query
            value: 100
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: v2
  - workflowId: v2ReadStats
    steps:
      - stepId: test
        operationId: v2ReadStats
        parameters:
          - name: ledger
            in: path
            value: ledger001
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "accounts": 144691,
                  "transactions": 882277
                }
              }
            type: simple
    x-speakeasy-test-group: v2
  - workflowId: v2RevertTransaction
    steps:
      - stepId: test
        operationId: v2RevertTransaction
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: id
            in: path
            value: 1234
          - name: dryRun
            in: query
            value: true
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "id": 614792,
                  "metadata": {
                    "admin": "true"
                  },
                  "postCommitEffectiveVolumes": {
                    "orders:1": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    },
                    "orders:2": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    }
                  },
                  "postCommitVolumes": {
                    "orders:1": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    },
                    "orders:2": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    }
                  },
                  "postings": [],
                  "preCommitEffectiveVolumes": {
                    "orders:1": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    },
                    "orders:2": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    }
                  },
                  "preCommitVolumes": {
                    "orders:1": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    },
                    "orders:2": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    }
                  },
                  "reference": "ref:001",
                  "reverted": true,
                  "timestamp": "2024-12-23T06:12:13.815Z"
                }
              }
            type: simple
    x-speakeasy-test-group: v2
  - workflowId: v2UpdateLedgerMetadata
    steps:
      - stepId: test
        operationId: v2UpdateLedgerMetadata
        parameters:
          - name: ledger
            in: path
            value: ledger001
        requestBody:
          contentType: application/json
          payload:
            admin: "true"
        successCriteria:
          - condition: $statusCode == 5XX
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9",
                "errorCode": "VALIDATION",
                "errorMessage": "[VALIDATION] invalid 'cursor' query param"
              }
            type: simple
    x-speakeasy-test-group: v2
  - workflowId: CreateTransactions
    steps:
      - stepId: test
        operationId: CreateTransactions
        parameters:
          - name: ledger
            in: path
            value: ledger001
        requestBody:
          contentType: application/json
          payload:
            transactions:
              - postings:
                  - amount: 100
                    asset: COIN
                    destination: users:002
                    source: users:001
                  - amount: 100
                    asset: COIN
                    destination: users:002
                    source: users:001
                  - amount: 100
                    asset: COIN
                    destination: users:002
                    source: users:001
                reference: ref:001
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": [
                  {
                    "postCommitVolumes": {
                      "orders:1": {
                        "USD": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        },
                        "EUR": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        }
                      },
                      "orders:2": {
                        "USD": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        },
                        "EUR": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        }
                      }
                    },
                    "postings": [
                      {
                        "amount": 100,
                        "asset": "COIN",
                        "destination": "users:002",
                        "source": "users:001"
                      },
                      {
                        "amount": 100,
                        "asset": "COIN",
                        "destination": "users:002",
                        "source": "users:001"
                      }
                    ],
                    "preCommitVolumes": {
                      "orders:1": {
                        "USD": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        },
                        "EUR": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        }
                      },
                      "orders:2": {
                        "USD": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        },
                        "EUR": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        }
                      }
                    },
                    "reference": "ref:001",
                    "timestamp": "2024-03-05T12:58:17.302Z",
                    "txid": 969224
                  },
                  {
                    "postCommitVolumes": {
                      "orders:1": {
                        "USD": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        },
                        "EUR": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        }
                      },
                      "orders:2": {
                        "USD": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        },
                        "EUR": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        }
                      }
                    },
                    "postings": [],
                    "preCommitVolumes": {
                      "orders:1": {
                        "USD": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        },
                        "EUR": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        }
                      },
                      "orders:2": {
                        "USD": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        },
                        "EUR": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        }
                      }
                    },
                    "reference": "ref:001",
                    "timestamp": "2023-01-13T12:20:33.284Z",
                    "txid": 808159
                  },
                  {
                    "postCommitVolumes": {
                      "orders:1": {
                        "USD": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        },
                        "EUR": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        }
                      },
                      "orders:2": {
                        "USD": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        },
                        "EUR": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        }
                      }
                    },
                    "postings": [
                      {
                        "amount": 100,
                        "asset": "COIN",
                        "destination": "users:002",
                        "source": "users:001"
                      },
                      {
                        "amount": 100,
                        "asset": "COIN",
                        "destination": "users:002",
                        "source": "users:001"
                      }
                    ],
                    "preCommitVolumes": {
                      "orders:1": {
                        "USD": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        },
                        "EUR": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        }
                      },
                      "orders:2": {
                        "USD": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        },
                        "EUR": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        }
                      }
                    },
                    "reference": "ref:001",
                    "timestamp": "2025-12-27T01:08:16.828Z",
                    "txid": 117566
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: SDK_v1
  - workflowId: addMetadataOnTransaction
    steps:
      - stepId: test
        operationId: addMetadataOnTransaction
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: txid
            in: path
            value: 1234
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_v1
  - workflowId: addMetadataToAccount
    steps:
      - stepId: test
        operationId: addMetadataToAccount
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: address
            in: path
            value: users:001
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_v1
  - workflowId: countAccounts
    steps:
      - stepId: test
        operationId: countAccounts
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: address
            in: query
            value: users:.+
          - name: metadata
            in: query
            value:
              "0": m
              "1": e
              "2": t
              "3": a
              "4": d
              "5": a
              "6": t
              "7": a
              "8": '['
              "9": k
              "10": e
              "11": "y"
              "12": ']'
              "13": =
              "14": v
              "15": a
              "16": l
              "17": u
              "18": e
              "19": "1"
              "20": '&'
              "21": m
              "22": e
              "23": t
              "24": a
              "25": d
              "26": a
              "27": t
              "28": a
              "29": '['
              "30": a
              "31": .
              "32": "n"
              "33": e
              "34": s
              "35": t
              "36": e
              "37": d
              "38": .
              "39": k
              "40": e
              "41": "y"
              "42": ']'
              "43": =
              "44": v
              "45": a
              "46": l
              "47": u
              "48": e
              "49": "2"
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: SDK_v1
  - workflowId: countTransactions
    steps:
      - stepId: test
        operationId: countTransactions
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: reference
            in: query
            value: ref:001
          - name: account
            in: query
            value: users:001
          - name: source
            in: query
            value: users:001
          - name: destination
            in: query
            value: users:001
          - name: metadata
            in: query
            value: metadata[key]=value1&metadata[a.nested.key]=value2
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: SDK_v1
  - workflowId: createTransaction
    steps:
      - stepId: test
        operationId: createTransaction
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: preview
            in: query
            value: true
        requestBody:
          contentType: application/json
          payload:
            postings:
              - amount: 100
                asset: COIN
                destination: users:002
                source: users:001
              - amount: 100
                asset: COIN
                destination: users:002
                source: users:001
              - amount: 100
                asset: COIN
                destination: users:002
                source: users:001
            reference: ref:001
            script:
              plain: |
                vars {
                account $user
                }
                send [COIN 10] (
                	source = @world
                	destination = $user
                )
              vars:
                user: users:042
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": [
                  {
                    "postCommitVolumes": {
                      "orders:1": {
                        "USD": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        },
                        "EUR": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        }
                      },
                      "orders:2": {
                        "USD": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        },
                        "EUR": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        }
                      }
                    },
                    "postings": [
                      {
                        "amount": 100,
                        "asset": "COIN",
                        "destination": "users:002",
                        "source": "users:001"
                      }
                    ],
                    "preCommitVolumes": {
                      "orders:1": {
                        "USD": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        },
                        "EUR": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        }
                      },
                      "orders:2": {
                        "USD": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        },
                        "EUR": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        }
                      }
                    },
                    "reference": "ref:001",
                    "timestamp": "2025-10-22T08:35:30.999Z",
                    "txid": 339139
                  },
                  {
                    "postCommitVolumes": {
                      "orders:1": {
                        "USD": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        },
                        "EUR": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        }
                      },
                      "orders:2": {
                        "USD": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        },
                        "EUR": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        }
                      }
                    },
                    "postings": [
                      {
                        "amount": 100,
                        "asset": "COIN",
                        "destination": "users:002",
                        "source": "users:001"
                      },
                      {
                        "amount": 100,
                        "asset": "COIN",
                        "destination": "users:002",
                        "source": "users:001"
                      },
                      {
                        "amount": 100,
                        "asset": "COIN",
                        "destination": "users:002",
                        "source": "users:001"
                      }
                    ],
                    "preCommitVolumes": {
                      "orders:1": {
                        "USD": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        },
                        "EUR": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        }
                      },
                      "orders:2": {
                        "USD": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        },
                        "EUR": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        }
                      }
                    },
                    "reference": "ref:001",
                    "timestamp": "2023-04-14T18:14:42.519Z",
                    "txid": 159068
                  },
                  {
                    "postCommitVolumes": {
                      "orders:1": {
                        "USD": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        },
                        "EUR": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        }
                      },
                      "orders:2": {
                        "USD": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        },
                        "EUR": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        }
                      }
                    },
                    "postings": [
                      {
                        "amount": 100,
                        "asset": "COIN",
                        "destination": "users:002",
                        "source": "users:001"
                      },
                      {
                        "amount": 100,
                        "asset": "COIN",
                        "destination": "users:002",
                        "source": "users:001"
                      },
                      {
                        "amount": 100,
                        "asset": "COIN",
                        "destination": "users:002",
                        "source": "users:001"
                      }
                    ],
                    "preCommitVolumes": {
                      "orders:1": {
                        "USD": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        },
                        "EUR": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        }
                      },
                      "orders:2": {
                        "USD": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        },
                        "EUR": {
                          "balance": 80,
                          "input": 100,
                          "output": 20
                        }
                      }
                    },
                    "reference": "ref:001",
                    "timestamp": "2025-12-15T14:36:30.627Z",
                    "txid": 992364
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: SDK_v1
  - workflowId: getAccount
    steps:
      - stepId: test
        operationId: getAccount
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: address
            in: path
            value: users:001
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "address": "users:001",
                  "balances": {
                    "COIN": 100
                  },
                  "metadata": {
                    "admin": true,
                    "a": {
                      "nested": {
                        "key": "value"
                      }
                    }
                  },
                  "type": "virtual",
                  "volumes": {
                    "USD": {
                      "balance": 80,
                      "input": 100,
                      "output": 20
                    },
                    "EUR": {
                      "balance": 80,
                      "input": 100,
                      "output": 20
                    }
                  }
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_v1
  - workflowId: getBalances
    steps:
      - stepId: test
        operationId: getBalances
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: address
            in: query
            value: users:001
          - name: after
            in: query
            value: users:003
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "account1": {
                        "USD": 100,
                        "EUR": 23
                      },
                      "account2": {
                        "CAD": 20,
                        "JPY": 21
                      }
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_v1
  - workflowId: getBalancesAggregated
    steps:
      - stepId: test
        operationId: getBalancesAggregated
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: address
            in: query
            value: users:001
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "USD": 100,
                  "EUR": 12
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_v1
  - workflowId: getInfo
    steps:
      - stepId: test
        operationId: getInfo
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "config": {
                    "storage": {
                      "driver": "\u003cvalue\u003e",
                      "ledgers": [
                        "\u003cvalue\u003e",
                        "\u003cvalue\u003e"
                      ]
                    }
                  },
                  "server": "\u003cvalue\u003e",
                  "version": "\u003cvalue\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_v1
  - workflowId: getLedgerInfo
    steps:
      - stepId: test
        operationId: getLedgerInfo
        parameters:
          - name: ledger
            in: path
            value: ledger001
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "name": "ledger001",
                  "storage": {
                    "migrations": [
                      {
                        "name": "migrations:001",
                        "version": "11"
                      }
                    ]
                  }
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_v1
  - workflowId: getMapping
    steps:
      - stepId: test
        operationId: getMapping
        parameters:
          - name: ledger
            in: path
            value: ledger001
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "contracts": []
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_v1
  - workflowId: getTransaction
    steps:
      - stepId: test
        operationId: getTransaction
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: txid
            in: path
            value: 1234
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "postCommitVolumes": {
                    "orders:1": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    },
                    "orders:2": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    }
                  },
                  "postings": [
                    {
                      "amount": 100,
                      "asset": "COIN",
                      "destination": "users:002",
                      "source": "users:001"
                    }
                  ],
                  "preCommitVolumes": {
                    "orders:1": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    },
                    "orders:2": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    }
                  },
                  "reference": "ref:001",
                  "timestamp": "2024-01-23T03:49:23.782Z",
                  "txid": 921043
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_v1
  - workflowId: listAccounts
    steps:
      - stepId: test
        operationId: listAccounts
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: pageSize
            in: query
            value: 100
          - name: after
            in: query
            value: users:003
          - name: address
            in: query
            value: users:.+
          - name: metadata
            in: query
            value:
              "0": m
              "1": e
              "2": t
              "3": a
              "4": d
              "5": a
              "6": t
              "7": a
              "8": '['
              "9": k
              "10": e
              "11": "y"
              "12": ']'
              "13": =
              "14": v
              "15": a
              "16": l
              "17": u
              "18": e
              "19": "1"
              "20": '&'
              "21": m
              "22": e
              "23": t
              "24": a
              "25": d
              "26": a
              "27": t
              "28": a
              "29": '['
              "30": a
              "31": .
              "32": "n"
              "33": e
              "34": s
              "35": t
              "36": e
              "37": d
              "38": .
              "39": k
              "40": e
              "41": "y"
              "42": ']'
              "43": =
              "44": v
              "45": a
              "46": l
              "47": u
              "48": e
              "49": "2"
          - name: balance
            in: query
            value: 2400
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
          - name: pagination_token
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "address": "users:001",
                      "metadata": {
                        "admin": true,
                        "a": {
                          "nested": {
                            "key": "value"
                          }
                        }
                      },
                      "type": "virtual"
                    },
                    {
                      "address": "users:001",
                      "metadata": {
                        "admin": true,
                        "a": {
                          "nested": {
                            "key": "value"
                          }
                        }
                      },
                      "type": "virtual"
                    },
                    {
                      "address": "users:001",
                      "metadata": {
                        "admin": true,
                        "a": {
                          "nested": {
                            "key": "value"
                          }
                        }
                      },
                      "type": "virtual"
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_v1
  - workflowId: listLogs
    steps:
      - stepId: test
        operationId: listLogs
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: pageSize
            in: query
            value: 100
          - name: after
            in: query
            value: "1234"
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "data": {
                        "key": "\u003cvalue\u003e"
                      },
                      "date": "2023-01-03T01:52:56.946Z",
                      "hash": "9ee060170400f556b7e1575cb13f9db004f150a08355c7431c62bc639166431e",
                      "id": 1234,
                      "type": "SET_METADATA"
                    },
                    {
                      "data": {
                        "key": "\u003cvalue\u003e"
                      },
                      "date": "2025-08-25T01:03:57.835Z",
                      "hash": "9ee060170400f556b7e1575cb13f9db004f150a08355c7431c62bc639166431e",
                      "id": 1234,
                      "type": "NEW_TRANSACTION"
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_v1
  - workflowId: listTransactions
    steps:
      - stepId: test
        operationId: listTransactions
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: pageSize
            in: query
            value: 100
          - name: after
            in: query
            value: "1234"
          - name: reference
            in: query
            value: ref:001
          - name: account
            in: query
            value: users:001
          - name: source
            in: query
            value: users:001
          - name: destination
            in: query
            value: users:001
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "postCommitVolumes": {
                        "orders:1": {
                          "USD": {
                            "balance": 90,
                            "input": 100,
                            "output": 10
                          }
                        },
                        "orders:2": {
                          "USD": {
                            "balance": 90,
                            "input": 100,
                            "output": 10
                          }
                        }
                      },
                      "postings": [
                        {
                          "amount": 100,
                          "asset": "COIN",
                          "destination": "users:002",
                          "source": "users:001"
                        },
                        {
                          "amount": 100,
                          "asset": "COIN",
                          "destination": "users:002",
                          "source": "users:001"
                        }
                      ],
                      "preCommitVolumes": {
                        "orders:1": {
                          "USD": {
                            "balance": 90,
                            "input": 100,
                            "output": 10
                          }
                        },
                        "orders:2": {
                          "USD": {
                            "balance": 90,
                            "input": 100,
                            "output": 10
                          }
                        }
                      },
                      "reference": "ref:001",
                      "timestamp": "2023-03-19T19:47:16.768Z",
                      "txid": 533792
                    },
                    {
                      "postCommitVolumes": {
                        "orders:1": {
                          "USD": {
                            "balance": 90,
                            "input": 100,
                            "output": 10
                          }
                        },
                        "orders:2": {
                          "USD": {
                            "balance": 90,
                            "input": 100,
                            "output": 10
                          }
                        }
                      },
                      "postings": [
                        {
                          "amount": 100,
                          "asset": "COIN",
                          "destination": "users:002",
                          "source": "users:001"
                        },
                        {
                          "amount": 100,
                          "asset": "COIN",
                          "destination": "users:002",
                          "source": "users:001"
                        },
                        {
                          "amount": 100,
                          "asset": "COIN",
                          "destination": "users:002",
                          "source": "users:001"
                        }
                      ],
                      "preCommitVolumes": {
                        "orders:1": {
                          "USD": {
                            "balance": 90,
                            "input": 100,
                            "output": 10
                          }
                        },
                        "orders:2": {
                          "USD": {
                            "balance": 90,
                            "input": 100,
                            "output": 10
                          }
                        }
                      },
                      "reference": "ref:001",
                      "timestamp": "2025-01-29T15:40:15.458Z",
                      "txid": 711700
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_v1
  - workflowId: readStats
    steps:
      - stepId: test
        operationId: readStats
        parameters:
          - name: ledger
            in: path
            value: ledger001
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "accounts": 939446,
                  "transactions": 895732
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_v1
  - workflowId: revertTransaction
    steps:
      - stepId: test
        operationId: revertTransaction
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: txid
            in: path
            value: 1234
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "postCommitVolumes": {
                    "orders:1": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    },
                    "orders:2": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    }
                  },
                  "postings": [
                    {
                      "amount": 100,
                      "asset": "COIN",
                      "destination": "users:002",
                      "source": "users:001"
                    },
                    {
                      "amount": 100,
                      "asset": "COIN",
                      "destination": "users:002",
                      "source": "users:001"
                    },
                    {
                      "amount": 100,
                      "asset": "COIN",
                      "destination": "users:002",
                      "source": "users:001"
                    }
                  ],
                  "preCommitVolumes": {
                    "orders:1": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    },
                    "orders:2": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    }
                  },
                  "reference": "ref:001",
                  "timestamp": "2024-09-05T21:38:55.965Z",
                  "txid": 107968
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_v1
  - workflowId: runScript
    steps:
      - stepId: test
        operationId: runScript
        parameters:
          - name: ledger
            in: path
            value: ledger001
          - name: preview
            in: query
            value: true
        requestBody:
          contentType: application/json
          payload:
            plain: |
              vars {
              account $user
              }
              send [COIN 10] (
              	source = @world
              	destination = $user
              )
            reference: order_1234
            vars:
              user: users:042
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9",
                "errorCode": "INSUFFICIENT_FUND",
                "errorMessage": "account had insufficient funds",
                "transaction": {
                  "postCommitVolumes": {
                    "orders:1": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    },
                    "orders:2": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    }
                  },
                  "postings": [],
                  "preCommitVolumes": {
                    "orders:1": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    },
                    "orders:2": {
                      "USD": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      },
                      "EUR": {
                        "balance": 80,
                        "input": 100,
                        "output": 20
                      }
                    }
                  },
                  "reference": "ref:001",
                  "timestamp": "2024-11-04T15:22:00.380Z",
                  "txid": 737293
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_v1
  - workflowId: updateMapping
    steps:
      - stepId: test
        operationId: updateMapping
        parameters:
          - name: ledger
            in: path
            value: ledger001
        requestBody:
          contentType: application/json
          payload:
            contracts:
              - account: users:001
                expr: {}
              - account: users:001
                expr: {}
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "contracts": [
                    {
                      "account": "users:001",
                      "expr": {}
                    },
                    {
                      "account": "users:001",
                      "expr": {}
                    }
                  ]
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_v1
  - workflowId: cancelEvent
    steps:
      - stepId: test
        operationId: cancelEvent
        parameters:
          - name: instanceID
            in: path
            value: xxx
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_orchestration_v1
  - workflowId: createTrigger
    steps:
      - stepId: test
        operationId: createTrigger
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "createdAt": "2024-01-13T03:40:57.557Z",
                  "event": "\u003cvalue\u003e",
                  "id": "\u003cid\u003e",
                  "workflowID": "\u003cid\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_orchestration_v1
  - workflowId: createWorkflow
    steps:
      - stepId: test
        operationId: createWorkflow
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "config": {
                    "stages": [
                      {},
                      {
                        "key": "\u003cvalue\u003e",
                        "key1": "\u003cvalue\u003e"
                      },
                      {}
                    ]
                  },
                  "createdAt": "2025-08-28T15:20:54.999Z",
                  "id": "\u003cid\u003e",
                  "updatedAt": "2024-01-22T19:31:50.523Z"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_orchestration_v1
  - workflowId: deleteTrigger
    steps:
      - stepId: test
        operationId: deleteTrigger
        parameters:
          - name: triggerID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_orchestration_v1
  - workflowId: deleteWorkflow
    steps:
      - stepId: test
        operationId: deleteWorkflow
        parameters:
          - name: flowId
            in: path
            value: xxx
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_orchestration_v1
  - workflowId: getInstance
    steps:
      - stepId: test
        operationId: getInstance
        parameters:
          - name: instanceID
            in: path
            value: xxx
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "createdAt": "2025-12-22T05:06:37.217Z",
                  "id": "\u003cid\u003e",
                  "terminated": true,
                  "updatedAt": "2023-04-26T16:05:05.917Z",
                  "workflowID": "\u003cid\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_orchestration_v1
  - workflowId: getInstanceHistory
    steps:
      - stepId: test
        operationId: getInstanceHistory
        parameters:
          - name: instanceID
            in: path
            value: xxx
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": []
              }
            type: simple
    x-speakeasy-test-group: SDK_orchestration_v1
  - workflowId: getInstanceStageHistory
    steps:
      - stepId: test
        operationId: getInstanceStageHistory
        parameters:
          - name: instanceID
            in: path
            value: xxx
          - name: number
            in: path
            value: 0
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": [
                  {
                    "attempt": 1195,
                    "input": {
                      "CreateTransaction": {
                        "data": {
                          "metadata": {
                            "admin": "true"
                          },
                          "postings": [
                            {
                              "amount": 100,
                              "asset": "COIN",
                              "destination": "users:002",
                              "source": "users:001"
                            }
                          ],
                          "reference": "ref:001",
                          "script": {
                            "plain": "vars {\naccount $user\n}\nsend [COIN 10] (\n\tsource = @world\n\tdestination = $user\n)\n",
                            "vars": {
                              "user": "users:042"
                            }
                          }
                        }
                      },
                      "CreditWallet": {
                        "data": {
                          "amount": {
                            "amount": 100,
                            "asset": "USD/2"
                          },
                          "metadata": {
                            "key": ""
                          },
                          "sources": []
                        }
                      },
                      "DebitWallet": {
                        "data": {
                          "amount": {
                            "amount": 100,
                            "asset": "USD/2"
                          },
                          "metadata": {
                            "key": ""
                          },
                          "pending": true
                        }
                      },
                      "StripeTransfer": {
                        "amount": 100,
                        "asset": "USD",
                        "destination": "acct_1Gqj58KZcSIg2N2q",
                        "waitingValidation": false
                      }
                    },
                    "name": "\u003cvalue\u003e",
                    "output": {
                      "CreateTransaction": {
                        "data": {
                          "id": 789895,
                          "metadata": {
                            "admin": "true"
                          },
                          "postings": [],
                          "reference": "ref:001",
                          "reverted": true,
                          "timestamp": "2023-08-06T02:20:05.010Z"
                        }
                      },
                      "GetAccount": {
                        "data": {
                          "address": "users:001",
                          "effectiveVolumes": {
                            "USD": {
                              "balance": 90,
                              "input": 100,
                              "output": 10
                            },
                            "EUR": {
                              "balance": 90,
                              "input": 100,
                              "output": 10
                            }
                          },
                          "metadata": {
                            "admin": "true"
                          },
                          "volumes": {
                            "USD": {
                              "balance": 90,
                              "input": 100,
                              "output": 10
                            },
                            "EUR": {
                              "balance": 90,
                              "input": 100,
                              "output": 10
                            }
                          }
                        }
                      },
                      "GetPayment": {
                        "data": {
                          "adjustments": [
                            {
                              "absolute": false,
                              "amount": 100,
                              "date": "2025-04-08T02:48:47.425Z",
                              "raw": {},
                              "status": "CANCELLED"
                            },
                            {
                              "absolute": true,
                              "amount": 100,
                              "date": "2025-11-11T02:51:20.511Z",
                              "raw": {},
                              "status": "PENDING"
                            }
                          ],
                          "asset": "USD",
                          "connectorID": "\u003cid\u003e",
                          "createdAt": "2025-02-01T17:45:57.768Z",
                          "destinationAccountID": "\u003cid\u003e",
                          "id": "XXX",
                          "initialAmount": 100,
                          "metadata": {},
                          "raw": {},
                          "reference": "\u003cvalue\u003e",
                          "scheme": "google pay",
                          "sourceAccountID": "\u003cid\u003e",
                          "status": "TERMINATED",
                          "type": "PAY-IN"
                        }
                      },
                      "ListWallets": {
                        "cursor": {
                          "data": [
                            {
                              "createdAt": "2025-12-06T17:39:27.860Z",
                              "id": "ffbd66e8-3ce0-4c96-a10c-8f8e0fc37bf1",
                              "ledger": "\u003cvalue\u003e",
                              "metadata": {},
                              "name": "\u003cvalue\u003e"
                            },
                            {
                              "createdAt": "2023-10-08T10:30:27.460Z",
                              "id": "cc38d81a-72b4-44c3-9e12-1021e7d24c49",
                              "ledger": "\u003cvalue\u003e",
                              "metadata": {
                                "key": "\u003cvalue\u003e",
                                "key1": "\u003cvalue\u003e",
                                "key2": "\u003cvalue\u003e"
                              },
                              "name": "\u003cvalue\u003e"
                            },
                            {
                              "createdAt": "2023-08-19T00:05:57.472Z",
                              "id": "52b35c03-d99a-4510-8a1f-81f33c690889",
                              "ledger": "\u003cvalue\u003e",
                              "metadata": {},
                              "name": "\u003cvalue\u003e"
                            }
                          ],
                          "hasMore": false,
                          "next": "",
                          "pageSize": 15,
                          "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                        }
                      },
                      "RevertTransaction": {
                        "data": {
                          "id": 619586,
                          "metadata": {
                            "admin": "true"
                          },
                          "postings": [
                            {
                              "amount": 100,
                              "asset": "COIN",
                              "destination": "users:002",
                              "source": "users:001"
                            },
                            {
                              "amount": 100,
                              "asset": "COIN",
                              "destination": "users:002",
                              "source": "users:001"
                            }
                          ],
                          "reference": "ref:001",
                          "reverted": false,
                          "timestamp": "2023-05-29T15:10:35.259Z"
                        }
                      }
                    },
                    "startedAt": "2023-07-02T11:58:56.305Z",
                    "terminated": false
                  },
                  {
                    "attempt": 626222,
                    "input": {
                      "CreateTransaction": {
                        "data": {
                          "metadata": {
                            "admin": "true"
                          },
                          "postings": [
                            {
                              "amount": 100,
                              "asset": "COIN",
                              "destination": "users:002",
                              "source": "users:001"
                            },
                            {
                              "amount": 100,
                              "asset": "COIN",
                              "destination": "users:002",
                              "source": "users:001"
                            },
                            {
                              "amount": 100,
                              "asset": "COIN",
                              "destination": "users:002",
                              "source": "users:001"
                            }
                          ],
                          "reference": "ref:001",
                          "script": {
                            "plain": "vars {\naccount $user\n}\nsend [COIN 10] (\n\tsource = @world\n\tdestination = $user\n)\n",
                            "vars": {
                              "user": "users:042"
                            }
                          }
                        }
                      },
                      "CreditWallet": {
                        "data": {
                          "amount": {
                            "amount": 100,
                            "asset": "USD/2"
                          },
                          "metadata": {
                            "key": ""
                          },
                          "sources": []
                        }
                      },
                      "DebitWallet": {
                        "data": {
                          "amount": {
                            "amount": 100,
                            "asset": "USD/2"
                          },
                          "metadata": {
                            "key": ""
                          },
                          "pending": true
                        }
                      },
                      "StripeTransfer": {
                        "amount": 100,
                        "asset": "USD",
                        "destination": "acct_1Gqj58KZcSIg2N2q",
                        "waitingValidation": false
                      }
                    },
                    "name": "\u003cvalue\u003e",
                    "output": {
                      "CreateTransaction": {
                        "data": {
                          "id": 378579,
                          "metadata": {
                            "admin": "true"
                          },
                          "postings": [
                            {
                              "amount": 100,
                              "asset": "COIN",
                              "destination": "users:002",
                              "source": "users:001"
                            },
                            {
                              "amount": 100,
                              "asset": "COIN",
                              "destination": "users:002",
                              "source": "users:001"
                            },
                            {
                              "amount": 100,
                              "asset": "COIN",
                              "destination": "users:002",
                              "source": "users:001"
                            }
                          ],
                          "reference": "ref:001",
                          "reverted": false,
                          "timestamp": "2024-04-15T17:34:05.615Z"
                        }
                      },
                      "GetAccount": {
                        "data": {
                          "address": "users:001",
                          "effectiveVolumes": {
                            "USD": {
                              "balance": 90,
                              "input": 100,
                              "output": 10
                            },
                            "EUR": {
                              "balance": 90,
                              "input": 100,
                              "output": 10
                            }
                          },
                          "metadata": {
                            "admin": "true"
                          },
                          "volumes": {
                            "USD": {
                              "balance": 90,
                              "input": 100,
                              "output": 10
                            },
                            "EUR": {
                              "balance": 90,
                              "input": 100,
                              "output": 10
                            }
                          }
                        }
                      },
                      "GetPayment": {
                        "data": {
                          "adjustments": [
                            {
                              "absolute": true,
                              "amount": 100,
                              "date": "2023-09-29T18:17:48.825Z",
                              "raw": {},
                              "status": "FAILED"
                            },
                            {
                              "absolute": false,
                              "amount": 100,
                              "date": "2025-10-19T21:59:00.100Z",
                              "raw": {},
                              "status": "TERMINATED"
                            },
                            {
                              "absolute": true,
                              "amount": 100,
                              "date": "2024-08-27T16:14:46.808Z",
                              "raw": {},
                              "status": "TERMINATED"
                            }
                          ],
                          "asset": "USD",
                          "connectorID": "\u003cid\u003e",
                          "createdAt": "2025-01-07T21:12:58.328Z",
                          "destinationAccountID": "\u003cid\u003e",
                          "id": "XXX",
                          "initialAmount": 100,
                          "metadata": {},
                          "raw": {},
                          "reference": "\u003cvalue\u003e",
                          "scheme": "ach",
                          "sourceAccountID": "\u003cid\u003e",
                          "status": "PENDING",
                          "type": "TRANSFER"
                        }
                      },
                      "ListWallets": {
                        "cursor": {
                          "data": [
                            {
                              "createdAt": "2025-04-30T04:49:25.662Z",
                              "id": "3b1509a5-fe8d-4e70-9916-180485cfaa61",
                              "ledger": "\u003cvalue\u003e",
                              "metadata": {
                                "key": "\u003cvalue\u003e"
                              },
                              "name": "\u003cvalue\u003e"
                            },
                            {
                              "createdAt": "2025-06-23T23:43:36.792Z",
                              "id": "a6d8edb3-a103-4920-bfca-b898a403e10c",
                              "ledger": "\u003cvalue\u003e",
                              "metadata": {},
                              "name": "\u003cvalue\u003e"
                            }
                          ],
                          "hasMore": false,
                          "next": "",
                          "pageSize": 15,
                          "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                        }
                      },
                      "RevertTransaction": {
                        "data": {
                          "id": 155282,
                          "metadata": {
                            "admin": "true"
                          },
                          "postings": [
                            {
                              "amount": 100,
                              "asset": "COIN",
                              "destination": "users:002",
                              "source": "users:001"
                            },
                            {
                              "amount": 100,
                              "asset": "COIN",
                              "destination": "users:002",
                              "source": "users:001"
                            },
                            {
                              "amount": 100,
                              "asset": "COIN",
                              "destination": "users:002",
                              "source": "users:001"
                            }
                          ],
                          "reference": "ref:001",
                          "reverted": false,
                          "timestamp": "2023-12-07T07:38:05.268Z"
                        }
                      }
                    },
                    "startedAt": "2023-12-17T14:52:10.553Z",
                    "terminated": true
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: SDK_orchestration_v1
  - workflowId: getWorkflow
    steps:
      - stepId: test
        operationId: getWorkflow
        parameters:
          - name: flowId
            in: path
            value: xxx
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "config": {
                    "stages": [
                      {}
                    ]
                  },
                  "createdAt": "2025-03-16T03:14:12.617Z",
                  "id": "\u003cid\u003e",
                  "updatedAt": "2024-11-13T22:03:51.333Z"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_orchestration_v1
  - workflowId: listInstances
    steps:
      - stepId: test
        operationId: listInstances
        parameters:
          - name: workflowID
            in: query
            value: xxx
          - name: running
            in: query
            value: true
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": [
                  {
                    "createdAt": "2024-07-17T08:20:08.742Z",
                    "id": "\u003cid\u003e",
                    "terminated": true,
                    "updatedAt": "2023-05-04T22:49:25.313Z",
                    "workflowID": "\u003cid\u003e"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: SDK_orchestration_v1
  - workflowId: listTriggers
    steps:
      - stepId: test
        operationId: listTriggers
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": []
              }
            type: simple
    x-speakeasy-test-group: SDK_orchestration_v1
  - workflowId: listTriggersOccurrences
    steps:
      - stepId: test
        operationId: listTriggersOccurrences
        parameters:
          - name: triggerID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": [
                  {
                    "date": "2024-04-11T13:42:33.759Z",
                    "event": {
                      "key": "\u003cvalue\u003e",
                      "key1": "\u003cvalue\u003e"
                    },
                    "triggerID": "\u003cid\u003e"
                  },
                  {
                    "date": "2023-04-01T04:29:12.442Z",
                    "event": {
                      "key": "\u003cvalue\u003e",
                      "key1": "\u003cvalue\u003e",
                      "key2": "\u003cvalue\u003e"
                    },
                    "triggerID": "\u003cid\u003e"
                  },
                  {
                    "date": "2024-11-09T03:51:27.854Z",
                    "event": {},
                    "triggerID": "\u003cid\u003e"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: SDK_orchestration_v1
  - workflowId: listWorkflows
    steps:
      - stepId: test
        operationId: listWorkflows
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": []
              }
            type: simple
    x-speakeasy-test-group: SDK_orchestration_v1
  - workflowId: orchestrationgetServerInfo
    steps:
      - stepId: test
        operationId: orchestrationgetServerInfo
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "\u003cvalue\u003e"
              }
            type: simple
    x-speakeasy-test-group: SDK_orchestration_v1
  - workflowId: readTrigger
    steps:
      - stepId: test
        operationId: readTrigger
        parameters:
          - name: triggerID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "createdAt": "2024-08-27T14:30:14.944Z",
                  "event": "\u003cvalue\u003e",
                  "id": "\u003cid\u003e",
                  "workflowID": "\u003cid\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_orchestration_v1
  - workflowId: runWorkflow
    steps:
      - stepId: test
        operationId: runWorkflow
        parameters:
          - name: workflowID
            in: path
            value: xxx
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "createdAt": "2025-11-19T22:37:10.059Z",
                  "id": "\u003cid\u003e",
                  "terminated": false,
                  "updatedAt": "2025-04-08T02:25:10.274Z",
                  "workflowID": "\u003cid\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_orchestration_v1
  - workflowId: sendEvent
    steps:
      - stepId: test
        operationId: sendEvent
        parameters:
          - name: instanceID
            in: path
            value: xxx
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_orchestration_v1
  - workflowId: v2CancelEvent
    steps:
      - stepId: test
        operationId: v2CancelEvent
        parameters:
          - name: instanceID
            in: path
            value: xxx
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_v2
  - workflowId: v2CreateTrigger
    steps:
      - stepId: test
        operationId: v2CreateTrigger
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "createdAt": "2023-02-06T04:27:27.896Z",
                  "event": "\u003cvalue\u003e",
                  "id": "\u003cid\u003e",
                  "workflowID": "\u003cid\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_v2
  - workflowId: v2CreateWorkflow
    steps:
      - stepId: test
        operationId: v2CreateWorkflow
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "config": {
                    "stages": []
                  },
                  "createdAt": "2025-09-25T10:50:45.884Z",
                  "id": "\u003cid\u003e",
                  "updatedAt": "2024-03-06T13:06:20.711Z"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_v2
  - workflowId: v2DeleteTrigger
    steps:
      - stepId: test
        operationId: v2DeleteTrigger
        parameters:
          - name: triggerID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_v2
  - workflowId: v2DeleteWorkflow
    steps:
      - stepId: test
        operationId: v2DeleteWorkflow
        parameters:
          - name: flowId
            in: path
            value: xxx
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_v2
  - workflowId: v2GetInstance
    steps:
      - stepId: test
        operationId: v2GetInstance
        parameters:
          - name: instanceID
            in: path
            value: xxx
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "createdAt": "2025-05-27T18:06:07.805Z",
                  "id": "\u003cid\u003e",
                  "terminated": true,
                  "updatedAt": "2024-12-10T23:41:39.935Z",
                  "workflowID": "\u003cid\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_v2
  - workflowId: v2GetInstanceHistory
    steps:
      - stepId: test
        operationId: v2GetInstanceHistory
        parameters:
          - name: instanceID
            in: path
            value: xxx
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": [
                  {
                    "input": {},
                    "name": "\u003cvalue\u003e",
                    "startedAt": "2024-12-21T06:06:34.439Z",
                    "terminated": true
                  },
                  {
                    "input": {},
                    "name": "\u003cvalue\u003e",
                    "startedAt": "2023-03-31T15:11:10.794Z",
                    "terminated": true
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: SDK_v2
  - workflowId: v2GetInstanceStageHistory
    steps:
      - stepId: test
        operationId: v2GetInstanceStageHistory
        parameters:
          - name: instanceID
            in: path
            value: xxx
          - name: number
            in: path
            value: 0
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": [
                  {
                    "attempt": 814164,
                    "input": {
                      "CreateTransaction": {
                        "data": {
                          "metadata": {
                            "admin": "true"
                          },
                          "postings": [
                            {
                              "amount": 100,
                              "asset": "COIN",
                              "destination": "users:002",
                              "source": "users:001"
                            },
                            {
                              "amount": 100,
                              "asset": "COIN",
                              "destination": "users:002",
                              "source": "users:001"
                            },
                            {
                              "amount": 100,
                              "asset": "COIN",
                              "destination": "users:002",
                              "source": "users:001"
                            }
                          ],
                          "reference": "ref:001",
                          "script": {
                            "plain": "vars {\naccount $user\n}\nsend [COIN 10] (\n\tsource = @world\n\tdestination = $user\n)\n",
                            "vars": {
                              "user": "users:042"
                            }
                          }
                        }
                      },
                      "CreditWallet": {
                        "data": {
                          "amount": {
                            "amount": 100,
                            "asset": "USD/2"
                          },
                          "metadata": {
                            "key": ""
                          },
                          "sources": []
                        }
                      },
                      "DebitWallet": {
                        "data": {
                          "amount": {
                            "amount": 100,
                            "asset": "USD/2"
                          },
                          "metadata": {
                            "key": ""
                          },
                          "pending": true
                        }
                      },
                      "StripeTransfer": {
                        "amount": 100,
                        "asset": "USD",
                        "destination": "acct_1Gqj58KZcSIg2N2q",
                        "waitingValidation": false
                      }
                    },
                    "name": "\u003cvalue\u003e",
                    "output": {
                      "CreateTransaction": {
                        "data": [
                          {
                            "metadata": {
                              "admin": "true"
                            },
                            "postings": [
                              {
                                "amount": 100,
                                "asset": "COIN",
                                "destination": "users:002",
                                "source": "users:001"
                              },
                              {
                                "amount": 100,
                                "asset": "COIN",
                                "destination": "users:002",
                                "source": "users:001"
                              },
                              {
                                "amount": 100,
                                "asset": "COIN",
                                "destination": "users:002",
                                "source": "users:001"
                              }
                            ],
                            "reference": "ref:001",
                            "timestamp": "2024-02-25T08:16:25.611Z",
                            "txid": 193963
                          },
                          {
                            "metadata": {
                              "admin": "true"
                            },
                            "postings": [
                              {
                                "amount": 100,
                                "asset": "COIN",
                                "destination": "users:002",
                                "source": "users:001"
                              },
                              {
                                "amount": 100,
                                "asset": "COIN",
                                "destination": "users:002",
                                "source": "users:001"
                              },
                              {
                                "amount": 100,
                                "asset": "COIN",
                                "destination": "users:002",
                                "source": "users:001"
                              }
                            ],
                            "reference": "ref:001",
                            "timestamp": "2024-09-11T04:49:03.408Z",
                            "txid": 512399
                          },
                          {
                            "metadata": {
                              "admin": "true"
                            },
                            "postings": [
                              {
                                "amount": 100,
                                "asset": "COIN",
                                "destination": "users:002",
                                "source": "users:001"
                              },
                              {
                                "amount": 100,
                                "asset": "COIN",
                                "destination": "users:002",
                                "source": "users:001"
                              },
                              {
                                "amount": 100,
                                "asset": "COIN",
                                "destination": "users:002",
                                "source": "users:001"
                              }
                            ],
                            "reference": "ref:001",
                            "timestamp": "2025-12-08T02:58:44.541Z",
                            "txid": 505948
                          }
                        ]
                      },
                      "GetAccount": {
                        "data": {
                          "address": "users:001",
                          "effectiveVolumes": {
                            "USD": {
                              "balance": 90,
                              "input": 100,
                              "output": 10
                            },
                            "EUR": {
                              "balance": 90,
                              "input": 100,
                              "output": 10
                            }
                          },
                          "metadata": {
                            "admin": "true"
                          },
                          "volumes": {
                            "USD": {
                              "balance": 90,
                              "input": 100,
                              "output": 10
                            },
                            "EUR": {
                              "balance": 90,
                              "input": 100,
                              "output": 10
                            }
                          }
                        }
                      },
                      "GetPayment": {
                        "data": {
                          "adjustments": [
                            {
                              "absolute": false,
                              "amount": 100,
                              "date": "2024-07-15T14:04:10.735Z",
                              "raw": {},
                              "status": "FAILED"
                            },
                            {
                              "absolute": false,
                              "amount": 100,
                              "date": "2024-04-09T23:19:06.573Z",
                              "raw": {},
                              "status": "FAILED"
                            }
                          ],
                          "asset": "USD",
                          "connectorID": "\u003cid\u003e",
                          "createdAt": "2023-05-09T19:53:15.550Z",
                          "destinationAccountID": "\u003cid\u003e",
                          "id": "XXX",
                          "initialAmount": 100,
                          "metadata": {},
                          "raw": {},
                          "reference": "\u003cvalue\u003e",
                          "scheme": "amex",
                          "sourceAccountID": "\u003cid\u003e",
                          "status": "CANCELLED",
                          "type": "PAY-IN"
                        }
                      },
                      "ListWallets": {
                        "cursor": {
                          "data": [
                            {
                              "createdAt": "2025-11-27T02:08:52.827Z",
                              "id": "5d3894ae-ce7c-44b7-9c48-3e4cba69dcb9",
                              "ledger": "\u003cvalue\u003e",
                              "metadata": {},
                              "name": "\u003cvalue\u003e"
                            },
                            {
                              "createdAt": "2025-05-20T17:13:48.350Z",
                              "id": "f5d6610e-e457-43cc-b9c2-41fd8f61b492",
                              "ledger": "\u003cvalue\u003e",
                              "metadata": {},
                              "name": "\u003cvalue\u003e"
                            },
                            {
                              "createdAt": "2023-01-18T03:26:48.477Z",
                              "id": "26a0c2ea-29e8-484a-bef5-0fac9fda12cb",
                              "ledger": "\u003cvalue\u003e",
                              "metadata": {
                                "key": "\u003cvalue\u003e",
                                "key1": "\u003cvalue\u003e",
                                "key2": "\u003cvalue\u003e"
                              },
                              "name": "\u003cvalue\u003e"
                            }
                          ],
                          "hasMore": false,
                          "next": "",
                          "pageSize": 15,
                          "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                        }
                      }
                    },
                    "startedAt": "2023-11-06T21:00:32.040Z",
                    "terminated": false
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: SDK_v2
  - workflowId: v2GetServerInfo
    steps:
      - stepId: test
        operationId: v2GetServerInfo
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "\u003cvalue\u003e"
              }
            type: simple
    x-speakeasy-test-group: SDK_v2
  - workflowId: v2GetWorkflow
    steps:
      - stepId: test
        operationId: v2GetWorkflow
        parameters:
          - name: flowId
            in: path
            value: xxx
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "config": {
                    "stages": [
                      {
                        "key": "\u003cvalue\u003e"
                      },
                      {
                        "key": "\u003cvalue\u003e",
                        "key1": "\u003cvalue\u003e"
                      },
                      {}
                    ]
                  },
                  "createdAt": "2025-05-07T16:56:33.373Z",
                  "id": "\u003cid\u003e",
                  "updatedAt": "2023-01-19T02:43:34.985Z"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_v2
  - workflowId: v2ListInstances
    steps:
      - stepId: test
        operationId: v2ListInstances
        parameters:
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
          - name: pageSize
            in: query
            value: 100
          - name: workflowID
            in: query
            value: xxx
          - name: running
            in: query
            value: true
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_v2
  - workflowId: v2ListTriggers
    steps:
      - stepId: test
        operationId: v2ListTriggers
        parameters:
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
          - name: pageSize
            in: query
            value: 100
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "createdAt": "2024-09-09T22:34:30.799Z",
                      "event": "\u003cvalue\u003e",
                      "id": "\u003cid\u003e",
                      "workflowID": "\u003cid\u003e"
                    },
                    {
                      "createdAt": "2025-10-25T17:04:34.359Z",
                      "event": "\u003cvalue\u003e",
                      "id": "\u003cid\u003e",
                      "workflowID": "\u003cid\u003e"
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_v2
  - workflowId: v2ListTriggersOccurrences
    steps:
      - stepId: test
        operationId: v2ListTriggersOccurrences
        parameters:
          - name: triggerID
            in: path
            value: <id>
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
          - name: pageSize
            in: query
            value: 100
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "date": "2025-10-13T07:55:03.028Z",
                      "event": {
                        "key": "\u003cvalue\u003e",
                        "key1": "\u003cvalue\u003e"
                      },
                      "triggerID": "\u003cid\u003e"
                    },
                    {
                      "date": "2024-10-03T19:33:42.523Z",
                      "event": {},
                      "triggerID": "\u003cid\u003e"
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_v2
  - workflowId: v2ListWorkflows
    steps:
      - stepId: test
        operationId: v2ListWorkflows
        parameters:
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
          - name: pageSize
            in: query
            value: 100
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_v2
  - workflowId: v2ReadTrigger
    steps:
      - stepId: test
        operationId: v2ReadTrigger
        parameters:
          - name: triggerID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "createdAt": "2023-03-26T21:52:22.792Z",
                  "event": "\u003cvalue\u003e",
                  "id": "\u003cid\u003e",
                  "workflowID": "\u003cid\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_v2
  - workflowId: v2RunWorkflow
    steps:
      - stepId: test
        operationId: v2RunWorkflow
        parameters:
          - name: workflowID
            in: path
            value: xxx
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "createdAt": "2023-02-10T15:22:37.507Z",
                  "id": "\u003cid\u003e",
                  "terminated": false,
                  "updatedAt": "2024-10-27T10:56:23.429Z",
                  "workflowID": "\u003cid\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_v2
  - workflowId: v2SendEvent
    steps:
      - stepId: test
        operationId: v2SendEvent
        parameters:
          - name: instanceID
            in: path
            value: xxx
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_v2
  - workflowId: testTrigger
    steps:
      - stepId: test
        operationId: testTrigger
        parameters:
          - name: triggerID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {}
              }
            type: simple
    x-speakeasy-test-group: SDK_v2
  - workflowId: addAccountToPool
    steps:
      - stepId: test
        operationId: addAccountToPool
        parameters:
          - name: poolId
            in: path
            value: XXX
        requestBody:
          contentType: application/json
          payload:
            accountID: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: connectorsTransfer
    steps:
      - stepId: test
        operationId: connectorsTransfer
        parameters:
          - name: connector
            in: path
            value: BANKING-CIRCLE
        requestBody:
          contentType: application/json
          payload:
            amount: 100
            asset: USD
            destination: acct_1Gqj58KZcSIg2N2q
            source: acct_1Gqj58KZcSIg2N2q
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: createAccount
    steps:
      - stepId: test
        operationId: createAccount
        requestBody:
          contentType: application/json
          payload:
            connectorID: <id>
            createdAt: "2025-08-19T02:15:08.152Z"
            reference: <value>
            type: INTERNAL
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "accountName": "\u003cvalue\u003e",
                  "connectorID": "\u003cid\u003e",
                  "createdAt": "2023-04-28T00:06:23.447Z",
                  "defaultAsset": "\u003cvalue\u003e",
                  "defaultCurrency": "\u003cvalue\u003e",
                  "id": "\u003cid\u003e",
                  "metadata": {
                    "key": "\u003cvalue\u003e",
                    "key1": "\u003cvalue\u003e"
                  },
                  "raw": {},
                  "reference": "\u003cvalue\u003e",
                  "type": "INTERNAL"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: createBankAccount
    steps:
      - stepId: test
        operationId: createBankAccount
        requestBody:
          contentType: application/json
          payload:
            connectorID: <id>
            country: GB
            name: My account
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "country": "Holy See (Vatican City State)",
                  "createdAt": "2024-08-31T23:24:27.067Z",
                  "id": "\u003cid\u003e",
                  "name": "\u003cvalue\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: createPayment
    steps:
      - stepId: test
        operationId: createPayment
        requestBody:
          contentType: application/json
          payload:
            amount: 100
            asset: USD
            connectorID: <id>
            createdAt: "2025-11-09T01:03:21.011Z"
            reference: <value>
            scheme: molpay
            status: REFUNDED_FAILURE
            type: PAYOUT
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "adjustments": [],
                  "amount": 100,
                  "asset": "USD",
                  "connectorID": "\u003cid\u003e",
                  "createdAt": "2023-02-21T01:47:02.496Z",
                  "destinationAccountID": "\u003cid\u003e",
                  "id": "XXX",
                  "initialAmount": 100,
                  "metadata": {
                    "key": "\u003cvalue\u003e",
                    "key1": "\u003cvalue\u003e",
                    "key2": "\u003cvalue\u003e"
                  },
                  "raw": {},
                  "reference": "\u003cvalue\u003e",
                  "scheme": "cup",
                  "sourceAccountID": "\u003cid\u003e",
                  "status": "OTHER",
                  "type": "PAY-IN"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: createPool
    steps:
      - stepId: test
        operationId: createPool
        requestBody:
          contentType: application/json
          payload:
            accountIDs:
              - <value>
              - <value>
              - <value>
            name: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "accounts": [],
                  "id": "\u003cid\u003e",
                  "name": "\u003cvalue\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: createTransferInitiation
    steps:
      - stepId: test
        operationId: createTransferInitiation
        requestBody:
          contentType: application/json
          payload:
            amount: 256698
            asset: USD
            description: worthy pace vague ick liberalize between um
            destinationAccountID: <id>
            reference: XXX
            scheduledAt: "2025-05-02T09:50:03.622Z"
            sourceAccountID: <id>
            type: PAYOUT
            validated: true
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "amount": 422655,
                  "asset": "USD",
                  "connectorID": "\u003cid\u003e",
                  "createdAt": "2023-01-07T23:05:45.713Z",
                  "description": "jut profane apud newsstand printer fondly",
                  "destinationAccountID": "\u003cid\u003e",
                  "error": "\u003cvalue\u003e",
                  "id": "XXX",
                  "initialAmount": 923751,
                  "reference": "\u003cvalue\u003e",
                  "scheduledAt": "2023-01-12T11:17:22.320Z",
                  "sourceAccountID": "\u003cid\u003e",
                  "status": "PROCESSED",
                  "type": "PAYOUT"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: deletePool
    steps:
      - stepId: test
        operationId: deletePool
        parameters:
          - name: poolId
            in: path
            value: XXX
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: deleteTransferInitiation
    steps:
      - stepId: test
        operationId: deleteTransferInitiation
        parameters:
          - name: transferId
            in: path
            value: XXX
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: forwardBankAccount
    steps:
      - stepId: test
        operationId: forwardBankAccount
        parameters:
          - name: bankAccountId
            in: path
            value: XXX
        requestBody:
          contentType: application/json
          payload:
            connectorID: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "country": "Belize",
                  "createdAt": "2023-01-21T13:08:56.229Z",
                  "id": "\u003cid\u003e",
                  "name": "\u003cvalue\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: getAccountBalances
    steps:
      - stepId: test
        operationId: getAccountBalances
        parameters:
          - name: accountId
            in: path
            value: XXX
          - name: pageSize
            in: query
            value: 100
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
          - name: sort
            in: query
            value:
              - date:asc
              - status:desc
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "accountId": "\u003cid\u003e",
                      "asset": "\u003cvalue\u003e",
                      "balance": 125462,
                      "createdAt": "2024-01-30T03:48:20.670Z",
                      "currency": "Argentine Peso",
                      "lastUpdatedAt": "2025-07-01T14:03:15.166Z"
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: getBankAccount
    steps:
      - stepId: test
        operationId: getBankAccount
        parameters:
          - name: bankAccountId
            in: path
            value: XXX
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "country": "Colombia",
                  "createdAt": "2023-03-04T16:16:17.382Z",
                  "id": "\u003cid\u003e",
                  "name": "\u003cvalue\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: getConnectorTask
    steps:
      - stepId: test
        operationId: getConnectorTask
        parameters:
          - name: connector
            in: path
            value: ADYEN
          - name: taskId
            in: path
            value: task1
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "connectorID": "\u003cid\u003e",
                  "createdAt": "2025-02-08T17:39:38.418Z",
                  "descriptor": {},
                  "id": "8d4a71ba-4575-442a-9fdb-17eed3b13ec7",
                  "status": "PENDING",
                  "updatedAt": "2025-04-25T00:27:47.982Z"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: getConnectorTaskV1
    steps:
      - stepId: test
        operationId: getConnectorTaskV1
        parameters:
          - name: connector
            in: path
            value: BANKING-CIRCLE
          - name: connectorId
            in: path
            value: XXX
          - name: taskId
            in: path
            value: task1
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "connectorID": "\u003cid\u003e",
                  "createdAt": "2023-06-20T11:48:17.213Z",
                  "descriptor": {},
                  "id": "592c3a8b-a286-4c92-93fe-1c798f795cd7",
                  "status": "PENDING",
                  "updatedAt": "2025-11-10T01:58:07.691Z"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: getPayment
    steps:
      - stepId: test
        operationId: getPayment
        parameters:
          - name: paymentId
            in: path
            value: XXX
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "adjustments": [
                    {
                      "amount": 100,
                      "createdAt": "2025-11-19T01:14:15.129Z",
                      "raw": {},
                      "reference": "\u003cvalue\u003e",
                      "status": "EXPIRED"
                    }
                  ],
                  "amount": 100,
                  "asset": "USD",
                  "connectorID": "\u003cid\u003e",
                  "createdAt": "2024-02-18T17:18:36.576Z",
                  "destinationAccountID": "\u003cid\u003e",
                  "id": "XXX",
                  "initialAmount": 100,
                  "metadata": {
                    "key": "\u003cvalue\u003e",
                    "key1": "\u003cvalue\u003e"
                  },
                  "raw": {},
                  "reference": "\u003cvalue\u003e",
                  "scheme": "unionpay",
                  "sourceAccountID": "\u003cid\u003e",
                  "status": "DISPUTE",
                  "type": "TRANSFER"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: getPool
    steps:
      - stepId: test
        operationId: getPool
        parameters:
          - name: poolId
            in: path
            value: XXX
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "accounts": [],
                  "id": "\u003cid\u003e",
                  "name": "\u003cvalue\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: getPoolBalances
    steps:
      - stepId: test
        operationId: getPoolBalances
        parameters:
          - name: poolId
            in: path
            value: XXX
          - name: at
            in: query
            value: "2024-05-04T06:40:23.119Z"
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "balances": []
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: getTransferInitiation
    steps:
      - stepId: test
        operationId: getTransferInitiation
        parameters:
          - name: transferId
            in: path
            value: XXX
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "amount": 72812,
                  "asset": "USD",
                  "connectorID": "\u003cid\u003e",
                  "createdAt": "2023-06-13T16:04:12.992Z",
                  "description": "lack sick cheerfully minor",
                  "destinationAccountID": "\u003cid\u003e",
                  "error": "\u003cvalue\u003e",
                  "id": "XXX",
                  "initialAmount": 849995,
                  "reference": "\u003cvalue\u003e",
                  "scheduledAt": "2025-01-24T01:47:16.422Z",
                  "sourceAccountID": "\u003cid\u003e",
                  "status": "WAITING_FOR_VALIDATION",
                  "type": "PAYOUT"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: installConnector
    steps:
      - stepId: test
        operationId: installConnector
        parameters:
          - name: connector
            in: path
            value: ATLAR
        requestBody:
          contentType: application/json
          payload:
            apiKey: XXX
            name: My Stripe Account
            pageSize: 50
            pollingPeriod: 60s
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "connectorID": "\u003cid\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: listAllConnectors
    steps:
      - stepId: test
        operationId: listAllConnectors
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": [
                  {
                    "connectorID": "\u003cid\u003e",
                    "name": "\u003cvalue\u003e",
                    "provider": "MONEYCORP"
                  },
                  {
                    "connectorID": "\u003cid\u003e",
                    "name": "\u003cvalue\u003e",
                    "provider": "CURRENCY-CLOUD"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: listBankAccounts
    steps:
      - stepId: test
        operationId: listBankAccounts
        parameters:
          - name: pageSize
            in: query
            value: 100
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
          - name: sort
            in: query
            value:
              - date:asc
              - status:desc
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "country": "Bahrain",
                      "createdAt": "2023-02-23T22:10:49.411Z",
                      "id": "\u003cid\u003e",
                      "name": "\u003cvalue\u003e"
                    },
                    {
                      "country": "Myanmar",
                      "createdAt": "2023-12-30T23:44:22.122Z",
                      "id": "\u003cid\u003e",
                      "name": "\u003cvalue\u003e"
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: listConfigsAvailableConnectors
    steps:
      - stepId: test
        operationId: listConfigsAvailableConnectors
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "connector": {
                    "key": {
                      "dataType": "real",
                      "required": false
                    }
                  }
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: listConnectorTasks
    steps:
      - stepId: test
        operationId: listConnectorTasks
        parameters:
          - name: connector
            in: path
            value: MODULR
          - name: pageSize
            in: query
            value: 100
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "connectorID": "\u003cid\u003e",
                      "createdAt": "2024-03-30T15:06:52.730Z",
                      "descriptor": {},
                      "id": "943abad6-1f7a-4a0d-b991-cf9266dd4814",
                      "status": "STOPPED",
                      "updatedAt": "2024-10-15T18:08:06.313Z"
                    },
                    {
                      "connectorID": "\u003cid\u003e",
                      "createdAt": "2023-09-08T19:27:52.424Z",
                      "descriptor": {},
                      "id": "f678351b-c600-4cf3-beff-e2c5cad006d4",
                      "status": "FAILED",
                      "updatedAt": "2024-02-03T08:52:20.456Z"
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: listConnectorTasksV1
    steps:
      - stepId: test
        operationId: listConnectorTasksV1
        parameters:
          - name: connector
            in: path
            value: BANKING-CIRCLE
          - name: connectorId
            in: path
            value: XXX
          - name: pageSize
            in: query
            value: 100
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "connectorID": "\u003cid\u003e",
                      "createdAt": "2024-08-30T08:25:15.703Z",
                      "descriptor": {},
                      "id": "119bf1d7-7f0d-47a9-85f6-d1de55906fa5",
                      "status": "STOPPED",
                      "updatedAt": "2023-03-08T11:32:23.574Z"
                    },
                    {
                      "connectorID": "\u003cid\u003e",
                      "createdAt": "2024-12-26T08:45:38.166Z",
                      "descriptor": {},
                      "id": "636e772b-1d53-4e6e-b1a0-f8d94fbd4d08",
                      "status": "PENDING",
                      "updatedAt": "2025-04-25T04:53:52.895Z"
                    },
                    {
                      "connectorID": "\u003cid\u003e",
                      "createdAt": "2025-04-15T21:11:42.740Z",
                      "descriptor": {},
                      "id": "3d5edc7f-3fcd-42b1-a430-91094b0590aa",
                      "status": "STOPPED",
                      "updatedAt": "2023-02-23T06:58:36.788Z"
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: listPayments
    steps:
      - stepId: test
        operationId: listPayments
        parameters:
          - name: pageSize
            in: query
            value: 100
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
          - name: sort
            in: query
            value:
              - date:asc
              - status:desc
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: listPools
    steps:
      - stepId: test
        operationId: listPools
        parameters:
          - name: pageSize
            in: query
            value: 100
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
          - name: sort
            in: query
            value:
              - date:asc
              - status:desc
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "accounts": [
                        "\u003cvalue\u003e",
                        "\u003cvalue\u003e"
                      ],
                      "id": "\u003cid\u003e",
                      "name": "\u003cvalue\u003e"
                    },
                    {
                      "accounts": [
                        "\u003cvalue\u003e"
                      ],
                      "id": "\u003cid\u003e",
                      "name": "\u003cvalue\u003e"
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: listTransferInitiations
    steps:
      - stepId: test
        operationId: listTransferInitiations
        parameters:
          - name: pageSize
            in: query
            value: 100
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
          - name: sort
            in: query
            value:
              - date:asc
              - status:desc
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "amount": 27378,
                      "asset": "USD",
                      "connectorID": "\u003cid\u003e",
                      "createdAt": "2024-04-12T17:55:51.446Z",
                      "description": "shovel aw scrutinise delicious a machine provided thongs eek pfft",
                      "destinationAccountID": "\u003cid\u003e",
                      "error": "\u003cvalue\u003e",
                      "id": "XXX",
                      "initialAmount": 955636,
                      "reference": "\u003cvalue\u003e",
                      "scheduledAt": "2025-12-22T21:51:13.393Z",
                      "sourceAccountID": "\u003cid\u003e",
                      "status": "ASK_REVERSED",
                      "type": "TRANSFER"
                    },
                    {
                      "amount": 99452,
                      "asset": "USD",
                      "connectorID": "\u003cid\u003e",
                      "createdAt": "2024-05-14T08:21:14.101Z",
                      "description": "vice programme downchange lucky",
                      "destinationAccountID": "\u003cid\u003e",
                      "error": "\u003cvalue\u003e",
                      "id": "XXX",
                      "initialAmount": 418039,
                      "reference": "\u003cvalue\u003e",
                      "scheduledAt": "2024-05-12T21:20:56.584Z",
                      "sourceAccountID": "\u003cid\u003e",
                      "status": "PROCESSED",
                      "type": "TRANSFER"
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: paymentsgetAccount
    steps:
      - stepId: test
        operationId: paymentsgetAccount
        parameters:
          - name: accountId
            in: path
            value: XXX
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "accountName": "\u003cvalue\u003e",
                  "connectorID": "\u003cid\u003e",
                  "createdAt": "2024-11-12T03:25:46.461Z",
                  "defaultAsset": "\u003cvalue\u003e",
                  "defaultCurrency": "\u003cvalue\u003e",
                  "id": "\u003cid\u003e",
                  "metadata": {
                    "key": "\u003cvalue\u003e",
                    "key1": "\u003cvalue\u003e"
                  },
                  "raw": {},
                  "reference": "\u003cvalue\u003e",
                  "type": "UNKNOWN"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: paymentsgetServerInfo
    steps:
      - stepId: test
        operationId: paymentsgetServerInfo
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "\u003cvalue\u003e"
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: paymentslistAccounts
    steps:
      - stepId: test
        operationId: paymentslistAccounts
        parameters:
          - name: pageSize
            in: query
            value: 100
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
          - name: sort
            in: query
            value:
              - date:asc
              - status:desc
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: readConnectorConfig
    steps:
      - stepId: test
        operationId: readConnectorConfig
        parameters:
          - name: connector
            in: path
            value: GENERIC
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "accessKey": "XXX",
                  "baseUrl": "https://api.example.com",
                  "name": "My Atlar Account",
                  "pageSize": 50,
                  "pollingPeriod": "60s",
                  "secret": "XXX",
                  "transferInitiationStatusPollingPeriod": "60s"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: readConnectorConfigV1
    steps:
      - stepId: test
        operationId: readConnectorConfigV1
        parameters:
          - name: connector
            in: path
            value: CURRENCY-CLOUD
          - name: connectorId
            in: path
            value: XXX
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "apiKey": "XXX",
                  "apiSecret": "XXX",
                  "endpoint": "XXX",
                  "name": "My Modulr Account",
                  "pollingPeriod": "120s"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: removeAccountFromPool
    steps:
      - stepId: test
        operationId: removeAccountFromPool
        parameters:
          - name: poolId
            in: path
            value: XXX
          - name: accountId
            in: path
            value: XXX
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: resetConnector
    steps:
      - stepId: test
        operationId: resetConnector
        parameters:
          - name: connector
            in: path
            value: ATLAR
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: resetConnectorV1
    steps:
      - stepId: test
        operationId: resetConnectorV1
        parameters:
          - name: connector
            in: path
            value: GENERIC
          - name: connectorId
            in: path
            value: XXX
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: retryTransferInitiation
    steps:
      - stepId: test
        operationId: retryTransferInitiation
        parameters:
          - name: transferId
            in: path
            value: XXX
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: reverseTransferInitiation
    steps:
      - stepId: test
        operationId: reverseTransferInitiation
        parameters:
          - name: transferId
            in: path
            value: XXX
        requestBody:
          contentType: application/json
          payload:
            amount: 327549
            asset: USD
            description: till gosh how proselytise worriedly whoa
            metadata:
              key: <value>
            reference: XXX
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: udpateTransferInitiationStatus
    steps:
      - stepId: test
        operationId: udpateTransferInitiationStatus
        parameters:
          - name: transferId
            in: path
            value: XXX
        requestBody:
          contentType: application/json
          payload:
            status: VALIDATED
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: uninstallConnector
    steps:
      - stepId: test
        operationId: uninstallConnector
        parameters:
          - name: connector
            in: path
            value: MODULR
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: uninstallConnectorV1
    steps:
      - stepId: test
        operationId: uninstallConnectorV1
        parameters:
          - name: connector
            in: path
            value: GENERIC
          - name: connectorId
            in: path
            value: XXX
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: updateBankAccountMetadata
    steps:
      - stepId: test
        operationId: updateBankAccountMetadata
        parameters:
          - name: bankAccountId
            in: path
            value: XXX
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: updateConnectorConfigV1
    steps:
      - stepId: test
        operationId: updateConnectorConfigV1
        parameters:
          - name: connector
            in: path
            value: ADYEN
          - name: connectorId
            in: path
            value: XXX
        requestBody:
          contentType: application/json
          payload:
            apiKey: XXX
            name: My Stripe Account
            pageSize: 10
            pollingPeriod: 120s
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: updateMetadata
    steps:
      - stepId: test
        operationId: updateMetadata
        parameters:
          - name: paymentId
            in: path
            value: XXX
        requestBody:
          contentType: application/json
          payload:
            key: <value>
            key1: <value>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_payments_v1
  - workflowId: v3AddAccountToPool
    steps:
      - stepId: test
        operationId: v3AddAccountToPool
        parameters:
          - name: poolID
            in: path
            value: <id>
          - name: accountID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: v3
  - workflowId: v3ApprovePaymentInitiation
    steps:
      - stepId: test
        operationId: v3ApprovePaymentInitiation
        parameters:
          - name: paymentInitiationID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 202
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "taskID": "\u003cid\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3CreateAccount
    steps:
      - stepId: test
        operationId: v3CreateAccount
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "connectorID": "\u003cvalue\u003e",
                  "createdAt": "2023-08-09T11:34:36.410Z",
                  "id": "\u003cid\u003e",
                  "provider": "\u003cvalue\u003e",
                  "raw": {},
                  "reference": "\u003cvalue\u003e",
                  "type": "UNKNOWN"
                }
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3CreateBankAccount
    steps:
      - stepId: test
        operationId: v3CreateBankAccount
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": "\u003cvalue\u003e"
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3CreatePayment
    steps:
      - stepId: test
        operationId: v3CreatePayment
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "amount": 252554,
                  "asset": "\u003cvalue\u003e",
                  "connectorID": "\u003cvalue\u003e",
                  "createdAt": "2024-12-31T19:31:25.838Z",
                  "id": "\u003cid\u003e",
                  "initialAmount": 581056,
                  "provider": "\u003cvalue\u003e",
                  "reference": "\u003cvalue\u003e",
                  "scheme": "\u003cvalue\u003e",
                  "status": "REFUNDED_FAILURE",
                  "type": "UNKNOWN"
                }
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3CreatePool
    steps:
      - stepId: test
        operationId: v3CreatePool
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": "\u003cvalue\u003e"
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3DeletePaymentInitiation
    steps:
      - stepId: test
        operationId: v3DeletePaymentInitiation
        parameters:
          - name: paymentInitiationID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: v3
  - workflowId: v3DeletePool
    steps:
      - stepId: test
        operationId: v3DeletePool
        parameters:
          - name: poolID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: v3
  - workflowId: v3ForwardBankAccount
    steps:
      - stepId: test
        operationId: v3ForwardBankAccount
        parameters:
          - name: bankAccountID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 202
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "taskID": "\u003cid\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3GetAccount
    steps:
      - stepId: test
        operationId: v3GetAccount
        parameters:
          - name: accountID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "connectorID": "\u003cvalue\u003e",
                  "createdAt": "2023-06-03T07:35:25.500Z",
                  "id": "\u003cid\u003e",
                  "provider": "\u003cvalue\u003e",
                  "raw": {},
                  "reference": "\u003cvalue\u003e",
                  "type": "INTERNAL"
                }
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3GetAccountBalances
    steps:
      - stepId: test
        operationId: v3GetAccountBalances
        parameters:
          - name: accountID
            in: path
            value: <id>
          - name: pageSize
            in: query
            value: 100
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "accountID": "\u003cid\u003e",
                      "asset": "\u003cvalue\u003e",
                      "balance": 401303,
                      "createdAt": "2023-07-10T00:38:07.826Z",
                      "lastUpdatedAt": "2025-07-01T02:16:38.081Z"
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3GetBankAccount
    steps:
      - stepId: test
        operationId: v3GetBankAccount
        parameters:
          - name: bankAccountID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "createdAt": "2023-11-05T20:09:51.675Z",
                  "id": "\u003cid\u003e",
                  "name": "\u003cvalue\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3GetConnectorConfig
    steps:
      - stepId: test
        operationId: v3GetConnectorConfig
        parameters:
          - name: connectorID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "apiKey": "\u003cvalue\u003e",
                  "apiSecret": "\u003cvalue\u003e",
                  "endpoint": "\u003cvalue\u003e",
                  "name": "\u003cvalue\u003e",
                  "pageSize": "25",
                  "pollingPeriod": "2m"
                }
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3GetConnectorSchedule
    steps:
      - stepId: test
        operationId: v3GetConnectorSchedule
        parameters:
          - name: connectorID
            in: path
            value: <id>
          - name: scheduleID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "connectorID": "\u003cvalue\u003e",
                  "createdAt": "2023-12-11T20:45:37.151Z",
                  "id": "\u003cid\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3GetPayment
    steps:
      - stepId: test
        operationId: v3GetPayment
        parameters:
          - name: paymentID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "amount": 445486,
                  "asset": "\u003cvalue\u003e",
                  "connectorID": "\u003cvalue\u003e",
                  "createdAt": "2025-01-05T13:03:22.264Z",
                  "id": "\u003cid\u003e",
                  "initialAmount": 485409,
                  "provider": "\u003cvalue\u003e",
                  "reference": "\u003cvalue\u003e",
                  "scheme": "\u003cvalue\u003e",
                  "status": "DISPUTE",
                  "type": "PAYOUT"
                }
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3GetPaymentInitiation
    steps:
      - stepId: test
        operationId: v3GetPaymentInitiation
        parameters:
          - name: paymentInitiationID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "amount": 42625,
                  "asset": "\u003cvalue\u003e",
                  "connectorID": "\u003cvalue\u003e",
                  "createdAt": "2025-07-18T19:40:16.233Z",
                  "description": "off of between vacantly though instead gazebo",
                  "id": "\u003cid\u003e",
                  "reference": "\u003cvalue\u003e",
                  "scheduledAt": "2025-04-28T02:58:21.926Z",
                  "status": "REVERSE_FAILED",
                  "type": "TRANSFER"
                }
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3GetPool
    steps:
      - stepId: test
        operationId: v3GetPool
        parameters:
          - name: poolID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "createdAt": "2024-04-23T06:52:21.825Z",
                  "id": "\u003cid\u003e",
                  "name": "\u003cvalue\u003e",
                  "poolAccounts": [
                    "\u003cvalue\u003e"
                  ]
                }
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3GetPoolBalances
    steps:
      - stepId: test
        operationId: v3GetPoolBalances
        parameters:
          - name: poolID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": [
                  {
                    "amount": 857230,
                    "asset": "\u003cvalue\u003e"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3GetTask
    steps:
      - stepId: test
        operationId: v3GetTask
        parameters:
          - name: taskID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "createdAt": "2025-04-18T04:31:16.226Z",
                  "id": "\u003cid\u003e",
                  "status": "FAILED",
                  "updatedAt": "2023-03-17T17:53:01.920Z"
                }
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3InitiatePayment
    steps:
      - stepId: test
        operationId: v3InitiatePayment
        parameters:
          - name: noValidation
            in: query
            value: false
        successCriteria:
          - condition: $statusCode == 202
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {}
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3InstallConnector
    steps:
      - stepId: test
        operationId: v3InstallConnector
        parameters:
          - name: connector
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 202
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": "\u003cvalue\u003e"
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3ListAccounts
    steps:
      - stepId: test
        operationId: v3ListAccounts
        parameters:
          - name: pageSize
            in: query
            value: 100
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3ListBankAccounts
    steps:
      - stepId: test
        operationId: v3ListBankAccounts
        parameters:
          - name: pageSize
            in: query
            value: 100
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "createdAt": "2023-04-07T16:35:38.005Z",
                      "id": "\u003cid\u003e",
                      "name": "\u003cvalue\u003e"
                    },
                    {
                      "createdAt": "2024-07-11T05:58:56.792Z",
                      "id": "\u003cid\u003e",
                      "name": "\u003cvalue\u003e"
                    },
                    {
                      "createdAt": "2025-10-15T15:52:02.711Z",
                      "id": "\u003cid\u003e",
                      "name": "\u003cvalue\u003e"
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3ListConnectorConfigs
    steps:
      - stepId: test
        operationId: v3ListConnectorConfigs
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "connector": {
                    "key": {
                      "dataType": "set",
                      "required": false
                    }
                  }
                }
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3ListConnectorScheduleInstances
    steps:
      - stepId: test
        operationId: v3ListConnectorScheduleInstances
        parameters:
          - name: connectorID
            in: path
            value: <id>
          - name: scheduleID
            in: path
            value: <id>
          - name: pageSize
            in: query
            value: 100
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "connectorID": "\u003cvalue\u003e",
                      "createdAt": "2024-02-15T21:59:37.501Z",
                      "id": "\u003cid\u003e",
                      "scheduleID": "\u003cid\u003e",
                      "terminated": false
                    },
                    {
                      "connectorID": "\u003cvalue\u003e",
                      "createdAt": "2023-09-07T21:29:03.593Z",
                      "id": "\u003cid\u003e",
                      "scheduleID": "\u003cid\u003e",
                      "terminated": true
                    },
                    {
                      "connectorID": "\u003cvalue\u003e",
                      "createdAt": "2023-02-18T04:47:10.180Z",
                      "id": "\u003cid\u003e",
                      "scheduleID": "\u003cid\u003e",
                      "terminated": false
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3ListConnectorSchedules
    steps:
      - stepId: test
        operationId: v3ListConnectorSchedules
        parameters:
          - name: connectorID
            in: path
            value: <id>
          - name: pageSize
            in: query
            value: 100
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "connectorID": "\u003cvalue\u003e",
                      "createdAt": "2023-12-07T01:38:17.309Z",
                      "id": "\u003cid\u003e"
                    },
                    {
                      "connectorID": "\u003cvalue\u003e",
                      "createdAt": "2023-11-04T20:51:22.049Z",
                      "id": "\u003cid\u003e"
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3ListConnectors
    steps:
      - stepId: test
        operationId: v3ListConnectors
        parameters:
          - name: pageSize
            in: query
            value: 100
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "config": {},
                      "createdAt": "2025-09-02T22:23:44.264Z",
                      "id": "\u003cid\u003e",
                      "name": "\u003cvalue\u003e",
                      "provider": "\u003cvalue\u003e",
                      "reference": "\u003cvalue\u003e",
                      "scheduledForDeletion": false
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3ListPaymentInitiationAdjustments
    steps:
      - stepId: test
        operationId: v3ListPaymentInitiationAdjustments
        parameters:
          - name: paymentInitiationID
            in: path
            value: <id>
          - name: pageSize
            in: query
            value: 100
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "createdAt": "2023-08-26T07:31:32.403Z",
                      "id": "\u003cid\u003e",
                      "status": "PROCESSING"
                    },
                    {
                      "createdAt": "2025-06-06T23:22:17.845Z",
                      "id": "\u003cid\u003e",
                      "status": "FAILED"
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3ListPaymentInitiationRelatedPayments
    steps:
      - stepId: test
        operationId: v3ListPaymentInitiationRelatedPayments
        parameters:
          - name: paymentInitiationID
            in: path
            value: <id>
          - name: pageSize
            in: query
            value: 100
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "amount": 576099,
                      "asset": "\u003cvalue\u003e",
                      "connectorID": "\u003cvalue\u003e",
                      "createdAt": "2024-11-01T18:01:53.016Z",
                      "id": "\u003cid\u003e",
                      "initialAmount": 927729,
                      "provider": "\u003cvalue\u003e",
                      "reference": "\u003cvalue\u003e",
                      "scheme": "\u003cvalue\u003e",
                      "status": "CAPTURE_FAILED",
                      "type": "PAYOUT"
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3ListPaymentInitiations
    steps:
      - stepId: test
        operationId: v3ListPaymentInitiations
        parameters:
          - name: pageSize
            in: query
            value: 100
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "amount": 203475,
                      "asset": "\u003cvalue\u003e",
                      "connectorID": "\u003cvalue\u003e",
                      "createdAt": "2024-03-08T03:55:10.091Z",
                      "description": "inside pessimistic small adrenalin reach measly boohoo eek soap amid",
                      "id": "\u003cid\u003e",
                      "reference": "\u003cvalue\u003e",
                      "scheduledAt": "2025-11-27T20:49:45.578Z",
                      "status": "UNKNOWN",
                      "type": "TRANSFER"
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3ListPayments
    steps:
      - stepId: test
        operationId: v3ListPayments
        parameters:
          - name: pageSize
            in: query
            value: 100
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "amount": 229776,
                      "asset": "\u003cvalue\u003e",
                      "connectorID": "\u003cvalue\u003e",
                      "createdAt": "2025-01-18T18:30:54.062Z",
                      "id": "\u003cid\u003e",
                      "initialAmount": 182258,
                      "provider": "\u003cvalue\u003e",
                      "reference": "\u003cvalue\u003e",
                      "scheme": "\u003cvalue\u003e",
                      "status": "SUCCEEDED",
                      "type": "PAY-IN"
                    },
                    {
                      "amount": 284985,
                      "asset": "\u003cvalue\u003e",
                      "connectorID": "\u003cvalue\u003e",
                      "createdAt": "2024-11-11T08:40:21.314Z",
                      "id": "\u003cid\u003e",
                      "initialAmount": 529755,
                      "provider": "\u003cvalue\u003e",
                      "reference": "\u003cvalue\u003e",
                      "scheme": "\u003cvalue\u003e",
                      "status": "REFUNDED",
                      "type": "OTHER"
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3ListPools
    steps:
      - stepId: test
        operationId: v3ListPools
        parameters:
          - name: pageSize
            in: query
            value: 100
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "createdAt": "2025-02-08T15:23:10.325Z",
                      "id": "\u003cid\u003e",
                      "name": "\u003cvalue\u003e",
                      "poolAccounts": []
                    },
                    {
                      "createdAt": "2024-04-12T20:16:24.210Z",
                      "id": "\u003cid\u003e",
                      "name": "\u003cvalue\u003e",
                      "poolAccounts": [
                        "\u003cvalue\u003e"
                      ]
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3RejectPaymentInitiation
    steps:
      - stepId: test
        operationId: v3RejectPaymentInitiation
        parameters:
          - name: paymentInitiationID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: v3
  - workflowId: v3RemoveAccountFromPool
    steps:
      - stepId: test
        operationId: v3RemoveAccountFromPool
        parameters:
          - name: poolID
            in: path
            value: <id>
          - name: accountID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: v3
  - workflowId: v3ResetConnector
    steps:
      - stepId: test
        operationId: v3ResetConnector
        parameters:
          - name: connectorID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 202
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": "\u003cvalue\u003e"
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3RetryPaymentInitiation
    steps:
      - stepId: test
        operationId: v3RetryPaymentInitiation
        parameters:
          - name: paymentInitiationID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 202
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "taskID": "\u003cid\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3ReversePaymentInitiation
    steps:
      - stepId: test
        operationId: v3ReversePaymentInitiation
        parameters:
          - name: paymentInitiationID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 202
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {}
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3UninstallConnector
    steps:
      - stepId: test
        operationId: v3UninstallConnector
        parameters:
          - name: connectorID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 202
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "taskID": "\u003cid\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: v3
  - workflowId: v3UpdateBankAccountMetadata
    steps:
      - stepId: test
        operationId: v3UpdateBankAccountMetadata
        parameters:
          - name: bankAccountID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: v3
  - workflowId: v3UpdatePaymentMetadata
    steps:
      - stepId: test
        operationId: v3UpdatePaymentMetadata
        parameters:
          - name: paymentID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: v3
  - workflowId: createPolicy
    steps:
      - stepId: test
        operationId: createPolicy
        requestBody:
          contentType: application/json
          payload:
            ledgerName: default
            ledgerQuery:
              key: <value>
            name: XXX
            paymentsPoolID: XXX
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "createdAt": "2021-01-01T00:00:00.000Z",
                  "id": "XXX",
                  "ledgerName": "default",
                  "ledgerQuery": {
                    "key": "\u003cvalue\u003e"
                  },
                  "name": "XXX",
                  "paymentsPoolID": "XXX"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_reconciliation_v1
  - workflowId: deletePolicy
    steps:
      - stepId: test
        operationId: deletePolicy
        parameters:
          - name: policyID
            in: path
            value: XXX
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_reconciliation_v1
  - workflowId: getPolicy
    steps:
      - stepId: test
        operationId: getPolicy
        parameters:
          - name: policyID
            in: path
            value: XXX
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "createdAt": "2021-01-01T00:00:00.000Z",
                  "id": "XXX",
                  "ledgerName": "default",
                  "ledgerQuery": {},
                  "name": "XXX",
                  "paymentsPoolID": "XXX"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_reconciliation_v1
  - workflowId: getReconciliation
    steps:
      - stepId: test
        operationId: getReconciliation
        parameters:
          - name: reconciliationID
            in: path
            value: XXX
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "createdAt": "2021-01-01T00:00:00.000Z",
                  "driftBalances": {
                    "key": 20102
                  },
                  "id": "XXX",
                  "ledgerBalances": {
                    "key": 644430
                  },
                  "paymentsBalances": {
                    "key": 515705,
                    "key1": 559208,
                    "key2": 533533
                  },
                  "policyID": "XXX",
                  "reconciledAtLedger": "2021-01-01T00:00:00.000Z",
                  "reconciledAtPayments": "2021-01-01T00:00:00.000Z",
                  "status": "COMPLETED"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_reconciliation_v1
  - workflowId: listPolicies
    steps:
      - stepId: test
        operationId: listPolicies
        parameters:
          - name: pageSize
            in: query
            value: 100
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "createdAt": "2021-01-01T00:00:00.000Z",
                      "id": "XXX",
                      "ledgerName": "default",
                      "ledgerQuery": {
                        "key": "\u003cvalue\u003e",
                        "key1": "\u003cvalue\u003e",
                        "key2": "\u003cvalue\u003e"
                      },
                      "name": "XXX",
                      "paymentsPoolID": "XXX"
                    },
                    {
                      "createdAt": "2021-01-01T00:00:00.000Z",
                      "id": "XXX",
                      "ledgerName": "default",
                      "ledgerQuery": {
                        "key": "\u003cvalue\u003e",
                        "key1": "\u003cvalue\u003e"
                      },
                      "name": "XXX",
                      "paymentsPoolID": "XXX"
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_reconciliation_v1
  - workflowId: listReconciliations
    steps:
      - stepId: test
        operationId: listReconciliations
        parameters:
          - name: pageSize
            in: query
            value: 100
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "createdAt": "2021-01-01T00:00:00.000Z",
                      "driftBalances": {
                        "key": 241236
                      },
                      "id": "XXX",
                      "ledgerBalances": {
                        "key": 129090
                      },
                      "paymentsBalances": {},
                      "policyID": "XXX",
                      "reconciledAtLedger": "2021-01-01T00:00:00.000Z",
                      "reconciledAtPayments": "2021-01-01T00:00:00.000Z",
                      "status": "COMPLETED"
                    },
                    {
                      "createdAt": "2021-01-01T00:00:00.000Z",
                      "driftBalances": {
                        "key": 348338,
                        "key1": 435529
                      },
                      "id": "XXX",
                      "ledgerBalances": {
                        "key": 522670,
                        "key1": 92384
                      },
                      "paymentsBalances": {
                        "key": 973678
                      },
                      "policyID": "XXX",
                      "reconciledAtLedger": "2021-01-01T00:00:00.000Z",
                      "reconciledAtPayments": "2021-01-01T00:00:00.000Z",
                      "status": "COMPLETED"
                    },
                    {
                      "createdAt": "2021-01-01T00:00:00.000Z",
                      "driftBalances": {
                        "key": 428459,
                        "key1": 727,
                        "key2": 640782
                      },
                      "id": "XXX",
                      "ledgerBalances": {},
                      "paymentsBalances": {
                        "key": 119837
                      },
                      "policyID": "XXX",
                      "reconciledAtLedger": "2021-01-01T00:00:00.000Z",
                      "reconciledAtPayments": "2021-01-01T00:00:00.000Z",
                      "status": "COMPLETED"
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_reconciliation_v1
  - workflowId: reconcile
    steps:
      - stepId: test
        operationId: reconcile
        parameters:
          - name: policyID
            in: path
            value: XXX
        requestBody:
          contentType: application/json
          payload:
            reconciledAtLedger: "2021-01-01T00:00:00.000Z"
            reconciledAtPayments: "2021-01-01T00:00:00.000Z"
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "createdAt": "2021-01-01T00:00:00.000Z",
                  "driftBalances": {
                    "key": 971386
                  },
                  "id": "XXX",
                  "ledgerBalances": {
                    "key": 1060,
                    "key1": 30487,
                    "key2": 427345
                  },
                  "paymentsBalances": {
                    "key": 17991,
                    "key1": 837229
                  },
                  "policyID": "XXX",
                  "reconciledAtLedger": "2021-01-01T00:00:00.000Z",
                  "reconciledAtPayments": "2021-01-01T00:00:00.000Z",
                  "status": "COMPLETED"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_reconciliation_v1
  - workflowId: reconciliationgetServerInfo
    steps:
      - stepId: test
        operationId: reconciliationgetServerInfo
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "\u003cvalue\u003e"
              }
            type: simple
    x-speakeasy-test-group: SDK_reconciliation_v1
  - workflowId: search
    steps:
      - stepId: test
        operationId: search
        requestBody:
          contentType: application/json
          payload:
            after:
              - users:002
            cursor: YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol=
            ledgers:
              - quickstart
            policy: OR
            sort: id:asc
            terms:
              - destination=central_bank1
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "next": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol=",
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol=",
                  "total": {
                    "relation": "eq",
                    "value": 1
                  }
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_search_v1
  - workflowId: searchgetServerInfo
    steps:
      - stepId: test
        operationId: searchgetServerInfo
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "\u003cvalue\u003e"
              }
            type: simple
    x-speakeasy-test-group: SDK_search_v1
  - workflowId: confirmHold
    steps:
      - stepId: test
        operationId: confirmHold
        parameters:
          - name: hold_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            amount: 100
            final: true
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_wallets_v1
  - workflowId: createBalance
    steps:
      - stepId: test
        operationId: createBalance
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "name": "\u003cvalue\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_wallets_v1
  - workflowId: createWallet
    steps:
      - stepId: test
        operationId: createWallet
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "createdAt": "2024-08-07T07:13:48.961Z",
                  "id": "28d5e2b6-b532-4ea9-ac35-db845f4bcf19",
                  "ledger": "\u003cvalue\u003e",
                  "metadata": {
                    "key": "\u003cvalue\u003e"
                  },
                  "name": "\u003cvalue\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_wallets_v1
  - workflowId: creditWallet
    steps:
      - stepId: test
        operationId: creditWallet
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            amount:
              amount: 100
              asset: USD/2
            metadata:
              key: ""
            sources: []
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_wallets_v1
  - workflowId: debitWallet
    steps:
      - stepId: test
        operationId: debitWallet
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            amount:
              amount: 100
              asset: USD/2
            metadata:
              key: ""
            pending: true
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "description": "supposing any instead underachieve",
                  "id": "cb202f54-4467-4509-9820-d52190eb2ad6",
                  "metadata": {},
                  "walletID": "\u003cid\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_wallets_v1
  - workflowId: getBalance
    steps:
      - stepId: test
        operationId: getBalance
        parameters:
          - name: id
            in: path
            value: <id>
          - name: balanceName
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "assets": {
                    "key": 623534,
                    "key1": 686479,
                    "key2": 925894
                  },
                  "name": "\u003cvalue\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_wallets_v1
  - workflowId: getHold
    steps:
      - stepId: test
        operationId: getHold
        parameters:
          - name: holdID
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "description": "fooey lest vivaciously",
                  "id": "cd413999-17b3-47c4-95d9-940e9d32963a",
                  "metadata": {
                    "key": "\u003cvalue\u003e",
                    "key1": "\u003cvalue\u003e"
                  },
                  "originalAmount": 100,
                  "remaining": 10,
                  "walletID": "\u003cid\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_wallets_v1
  - workflowId: getHolds
    steps:
      - stepId: test
        operationId: getHolds
        parameters:
          - name: pageSize
            in: query
            value: 100
          - name: walletID
            in: query
            value: wallet1
          - name: metadata
            in: query
            value:
              admin: "true"
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "description": "anti all mmm thorough badly what once self-assured bitterly",
                      "id": "71f718aa-973f-455f-8164-685872daf907",
                      "metadata": {},
                      "walletID": "\u003cid\u003e"
                    },
                    {
                      "description": "veg before reservation an",
                      "id": "53a74377-2ea1-48a5-98b0-670a65f47f18",
                      "metadata": {
                        "key": "\u003cvalue\u003e",
                        "key1": "\u003cvalue\u003e",
                        "key2": "\u003cvalue\u003e"
                      },
                      "walletID": "\u003cid\u003e"
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_wallets_v1
  - workflowId: getTransactions
    steps:
      - stepId: test
        operationId: getTransactions
        parameters:
          - name: pageSize
            in: query
            value: 100
          - name: walletID
            in: query
            value: wallet1
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "id": 417503,
                      "metadata": {
                        "key": "\u003cvalue\u003e",
                        "key1": "\u003cvalue\u003e",
                        "key2": "\u003cvalue\u003e"
                      },
                      "postCommitVolumes": {
                        "key": {
                          "USD": {
                            "balance": 90,
                            "input": 100,
                            "output": 10
                          },
                          "EUR": {
                            "balance": 90,
                            "input": 100,
                            "output": 10
                          }
                        }
                      },
                      "postings": [],
                      "preCommitVolumes": {
                        "key": {
                          "USD": {
                            "balance": 90,
                            "input": 100,
                            "output": 10
                          },
                          "EUR": {
                            "balance": 90,
                            "input": 100,
                            "output": 10
                          }
                        },
                        "key1": {
                          "USD": {
                            "balance": 90,
                            "input": 100,
                            "output": 10
                          },
                          "EUR": {
                            "balance": 90,
                            "input": 100,
                            "output": 10
                          }
                        }
                      },
                      "reference": "ref:001",
                      "timestamp": "2025-04-16T13:08:57.024Z"
                    },
                    {
                      "id": 751740,
                      "metadata": {
                        "key": "\u003cvalue\u003e",
                        "key1": "\u003cvalue\u003e"
                      },
                      "postCommitVolumes": {
                        "key": {
                          "USD": {
                            "balance": 90,
                            "input": 100,
                            "output": 10
                          },
                          "EUR": {
                            "balance": 90,
                            "input": 100,
                            "output": 10
                          }
                        }
                      },
                      "postings": [
                        {
                          "amount": 100,
                          "asset": "COIN",
                          "destination": "users:002",
                          "source": "users:001"
                        },
                        {
                          "amount": 100,
                          "asset": "COIN",
                          "destination": "users:002",
                          "source": "users:001"
                        },
                        {
                          "amount": 100,
                          "asset": "COIN",
                          "destination": "users:002",
                          "source": "users:001"
                        }
                      ],
                      "preCommitVolumes": {
                        "key": {
                          "USD": {
                            "balance": 90,
                            "input": 100,
                            "output": 10
                          },
                          "EUR": {
                            "balance": 90,
                            "input": 100,
                            "output": 10
                          }
                        }
                      },
                      "reference": "ref:001",
                      "timestamp": "2023-04-29T22:11:40.809Z"
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_wallets_v1
  - workflowId: getWallet
    steps:
      - stepId: test
        operationId: getWallet
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "balances": {
                    "main": {
                      "assets": {
                        "key": 571864
                      }
                    }
                  },
                  "createdAt": "2024-11-13T05:25:13.185Z",
                  "id": "bec36009-93cb-484f-9620-8873422591bc",
                  "ledger": "\u003cvalue\u003e",
                  "metadata": {
                    "key": "\u003cvalue\u003e"
                  },
                  "name": "\u003cvalue\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_wallets_v1
  - workflowId: getWalletSummary
    steps:
      - stepId: test
        operationId: getWalletSummary
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "availableFunds": {
                    "key": 265270,
                    "key1": 425645
                  },
                  "balances": [
                    {
                      "assets": {},
                      "name": "\u003cvalue\u003e"
                    }
                  ],
                  "expirableFunds": {},
                  "expiredFunds": {
                    "key": 937378,
                    "key1": 696335,
                    "key2": 846984
                  },
                  "holdFunds": {
                    "key": 930990,
                    "key1": 132783,
                    "key2": 515347
                  }
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_wallets_v1
  - workflowId: listBalances
    steps:
      - stepId: test
        operationId: listBalances
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "name": "\u003cvalue\u003e"
                    },
                    {
                      "name": "\u003cvalue\u003e"
                    },
                    {
                      "name": "\u003cvalue\u003e"
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_wallets_v1
  - workflowId: listWallets
    steps:
      - stepId: test
        operationId: listWallets
        parameters:
          - name: name
            in: query
            value: wallet1
          - name: metadata
            in: query
            value:
              admin: "true"
          - name: pageSize
            in: query
            value: 100
          - name: cursor
            in: query
            value: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
          - name: expand
            in: query
            value: balances
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "createdAt": "2023-02-28T12:24:12.671Z",
                      "id": "acf390dc-7f51-40b9-8bec-968d375f0c57",
                      "ledger": "\u003cvalue\u003e",
                      "metadata": {
                        "key": "\u003cvalue\u003e",
                        "key1": "\u003cvalue\u003e"
                      },
                      "name": "\u003cvalue\u003e"
                    }
                  ],
                  "hasMore": false,
                  "next": "",
                  "pageSize": 15,
                  "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_wallets_v1
  - workflowId: updateWallet
    steps:
      - stepId: test
        operationId: updateWallet
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_wallets_v1
  - workflowId: voidHold
    steps:
      - stepId: test
        operationId: voidHold
        parameters:
          - name: hold_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: SDK_wallets_v1
  - workflowId: walletsgetServerInfo
    steps:
      - stepId: test
        operationId: walletsgetServerInfo
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "\u003cvalue\u003e"
              }
            type: simple
    x-speakeasy-test-group: SDK_wallets_v1
  - workflowId: activateConfig
    steps:
      - stepId: test
        operationId: activateConfig
        parameters:
          - name: id
            in: path
            value: 4997257d-dfb6-445b-929c-cbe2ab182818
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "active": true,
                  "createdAt": "2025-04-13T00:54:15.165Z",
                  "endpoint": "https://example.com",
                  "eventTypes": [
                    "TYPE1"
                  ],
                  "id": "614a5830-bda0-4680-b1ea-6090dd8532c6",
                  "secret": "V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3",
                  "updatedAt": "2023-07-24T14:37:40.680Z"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_webhooks_v1
  - workflowId: changeConfigSecret
    steps:
      - stepId: test
        operationId: changeConfigSecret
        parameters:
          - name: id
            in: path
            value: 4997257d-dfb6-445b-929c-cbe2ab182818
        requestBody:
          contentType: application/json
          payload:
            secret: V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "active": true,
                  "createdAt": "2023-12-07T06:10:53.379Z",
                  "endpoint": "https://example.com",
                  "eventTypes": [
                    "TYPE1"
                  ],
                  "id": "8470f220-7a70-4ef7-9be4-3432827b4f03",
                  "secret": "V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3",
                  "updatedAt": "2023-11-27T20:14:58.331Z"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_webhooks_v1
  - workflowId: deactivateConfig
    steps:
      - stepId: test
        operationId: deactivateConfig
        parameters:
          - name: id
            in: path
            value: 4997257d-dfb6-445b-929c-cbe2ab182818
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "active": true,
                  "createdAt": "2023-11-29T11:20:57.032Z",
                  "endpoint": "https://example.com",
                  "eventTypes": [
                    "TYPE1"
                  ],
                  "id": "85e5b25b-022b-4bd7-8c33-fbf5950d0f8f",
                  "secret": "V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3",
                  "updatedAt": "2024-05-26T16:43:50.510Z"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_webhooks_v1
  - workflowId: deleteConfig
    steps:
      - stepId: test
        operationId: deleteConfig
        parameters:
          - name: id
            in: path
            value: 4997257d-dfb6-445b-929c-cbe2ab182818
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: SDK_webhooks_v1
  - workflowId: getManyConfigs
    steps:
      - stepId: test
        operationId: getManyConfigs
        parameters:
          - name: id
            in: query
            value: 4997257d-dfb6-445b-929c-cbe2ab182818
          - name: endpoint
            in: query
            value: https://example.com
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "cursor": {
                  "data": [
                    {
                      "active": true,
                      "createdAt": "2023-10-03T21:24:00.401Z",
                      "endpoint": "https://example.com",
                      "eventTypes": [
                        "TYPE1"
                      ],
                      "id": "f1f67d72-d5d3-4e22-8f79-851fcbdc0d83",
                      "secret": "V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3",
                      "updatedAt": "2023-02-14T18:49:51.264Z"
                    }
                  ],
                  "hasMore": false
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_webhooks_v1
  - workflowId: insertConfig
    steps:
      - stepId: test
        operationId: insertConfig
        requestBody:
          contentType: application/json
          payload:
            endpoint: https://example.com
            eventTypes:
              - TYPE1
            name: customer_payment
            secret: V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "active": true,
                  "createdAt": "2025-08-30T14:01:19.887Z",
                  "endpoint": "https://example.com",
                  "eventTypes": [
                    "TYPE1"
                  ],
                  "id": "0f756b09-5b38-465b-b8f2-983f240d4f5c",
                  "secret": "V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3",
                  "updatedAt": "2024-08-09T10:29:51.537Z"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_webhooks_v1
  - workflowId: testConfig
    steps:
      - stepId: test
        operationId: testConfig
        parameters:
          - name: id
            in: path
            value: 4997257d-dfb6-445b-929c-cbe2ab182818
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "data": {
                  "config": {
                    "active": true,
                    "createdAt": "2024-05-29T09:53:58.891Z",
                    "endpoint": "https://example.com",
                    "eventTypes": [
                      "TYPE1"
                    ],
                    "id": "86054b6d-7f7e-4fb8-8f2f-b6a855cea0c7",
                    "secret": "V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3",
                    "updatedAt": "2023-04-25T07:02:46.380Z"
                  },
                  "createdAt": "2025-06-16T21:37:32.643Z",
                  "id": "c7827ed3-469f-4c48-a7d1-c853b7f1271e",
                  "payload": "{\"data\":\"test\"}",
                  "retryAttempt": 1,
                  "status": "success",
                  "statusCode": 200,
                  "updatedAt": "2024-10-18T10:47:20.940Z",
                  "webhookID": "05f47970-be91-4384-9266-38e01d5768d6"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK_webhooks_v1
  - workflowId: updateConfig
    steps:
      - stepId: test
        operationId: updateConfig
        parameters:
          - name: id
            in: path
            value: 4997257d-dfb6-445b-929c-cbe2ab182818
        requestBody:
          contentType: application/json
          payload:
            endpoint: https://example.com
            eventTypes:
              - TYPE1
            name: customer_payment
            secret: V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: SDK_webhooks_v1
