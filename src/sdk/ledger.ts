/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ledgerGetInfo } from "../funcs/ledgerGetInfo.js";
import { ledgerGetMetrics } from "../funcs/ledgerGetMetrics.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import { LedgerV1 } from "./ledgerv1.js";
import { LedgerV2 } from "./ledgerv2.js";
import * as operations from "./models/operations/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Ledger extends ClientSDK {
  private _v1?: LedgerV1;
  get v1(): LedgerV1 {
    return (this._v1 ??= new LedgerV1(this._options));
  }

  private _v2?: LedgerV2;
  get v2(): LedgerV2 {
    return (this._v2 ??= new LedgerV2(this._options));
  }

  /**
   * Show server information
   */
  async getInfo(
    options?: RequestOptions,
  ): Promise<operations.V2GetInfoResponse> {
    return unwrapAsync(ledgerGetInfo(
      this,
      options,
    ));
  }

  /**
   * Read in memory metrics
   */
  async getMetrics(
    options?: RequestOptions,
  ): Promise<operations.GetMetricsResponse> {
    return unwrapAsync(ledgerGetMetrics(
      this,
      options,
    ));
  }
}
