/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type ListBalancesRequest = {
    id: string;
};

export type ListBalancesResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * Balances list
     */
    listBalancesResponse?: shared.ListBalancesResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export const ListBalancesRequest$inboundSchema: z.ZodType<
    ListBalancesRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    id: z.string(),
});

/** @internal */
export type ListBalancesRequest$Outbound = {
    id: string;
};

/** @internal */
export const ListBalancesRequest$outboundSchema: z.ZodType<
    ListBalancesRequest$Outbound,
    z.ZodTypeDef,
    ListBalancesRequest
> = z.object({
    id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListBalancesRequest$ {
    /** @deprecated use `ListBalancesRequest$inboundSchema` instead. */
    export const inboundSchema = ListBalancesRequest$inboundSchema;
    /** @deprecated use `ListBalancesRequest$outboundSchema` instead. */
    export const outboundSchema = ListBalancesRequest$outboundSchema;
    /** @deprecated use `ListBalancesRequest$Outbound` instead. */
    export type Outbound = ListBalancesRequest$Outbound;
}

/** @internal */
export const ListBalancesResponse$inboundSchema: z.ZodType<
    ListBalancesResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        ContentType: z.string(),
        ListBalancesResponse: shared.ListBalancesResponse$inboundSchema.optional(),
        StatusCode: z.number().int(),
        RawResponse: z.instanceof(Response),
    })
    .transform((v) => {
        return remap$(v, {
            ContentType: "contentType",
            ListBalancesResponse: "listBalancesResponse",
            StatusCode: "statusCode",
            RawResponse: "rawResponse",
        });
    });

/** @internal */
export type ListBalancesResponse$Outbound = {
    ContentType: string;
    ListBalancesResponse?: shared.ListBalancesResponse$Outbound | undefined;
    StatusCode: number;
    RawResponse: never;
};

/** @internal */
export const ListBalancesResponse$outboundSchema: z.ZodType<
    ListBalancesResponse$Outbound,
    z.ZodTypeDef,
    ListBalancesResponse
> = z
    .object({
        contentType: z.string(),
        listBalancesResponse: shared.ListBalancesResponse$outboundSchema.optional(),
        statusCode: z.number().int(),
        rawResponse: z.instanceof(Response).transform(() => {
            throw new Error("Response cannot be serialized");
        }),
    })
    .transform((v) => {
        return remap$(v, {
            contentType: "ContentType",
            listBalancesResponse: "ListBalancesResponse",
            statusCode: "StatusCode",
            rawResponse: "RawResponse",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListBalancesResponse$ {
    /** @deprecated use `ListBalancesResponse$inboundSchema` instead. */
    export const inboundSchema = ListBalancesResponse$inboundSchema;
    /** @deprecated use `ListBalancesResponse$outboundSchema` instead. */
    export const outboundSchema = ListBalancesResponse$outboundSchema;
    /** @deprecated use `ListBalancesResponse$Outbound` instead. */
    export type Outbound = ListBalancesResponse$Outbound;
}
