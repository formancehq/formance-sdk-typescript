/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../shared";
import * as z from "zod";

export type UpdateMappingRequest = {
    /**
     * Name of the ledger.
     */
    ledger: string;
    mapping: shared.Mapping | null;
};

/** @internal */
export namespace UpdateMappingRequest$ {
    export const inboundSchema: z.ZodType<UpdateMappingRequest, z.ZodTypeDef, unknown> = z
        .object({
            ledger: z.string(),
            Mapping: z.nullable(shared.Mapping$.inboundSchema),
        })
        .transform((v) => {
            return {
                ledger: v.ledger,
                mapping: v.Mapping,
            };
        });

    export type Outbound = {
        ledger: string;
        Mapping: shared.Mapping$.Outbound | null;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateMappingRequest> = z
        .object({
            ledger: z.string(),
            mapping: z.nullable(shared.Mapping$.outboundSchema),
        })
        .transform((v) => {
            return {
                ledger: v.ledger,
                Mapping: v.mapping,
            };
        });
}
