/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type SendEventRequestBody = {
    name: string;
};

export type SendEventRequest = {
    /**
     * The instance id
     */
    instanceID: string;
    requestBody?: SendEventRequestBody | undefined;
};

export type SendEventResponse = {};

/** @internal */
export namespace SendEventRequestBody$ {
    export const inboundSchema: z.ZodType<SendEventRequestBody, z.ZodTypeDef, unknown> = z
        .object({
            name: z.string(),
        })
        .transform((v) => {
            return {
                name: v.name,
            };
        });

    export type Outbound = {
        name: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SendEventRequestBody> = z
        .object({
            name: z.string(),
        })
        .transform((v) => {
            return {
                name: v.name,
            };
        });
}

/** @internal */
export namespace SendEventRequest$ {
    export const inboundSchema: z.ZodType<SendEventRequest, z.ZodTypeDef, unknown> = z
        .object({
            instanceID: z.string(),
            RequestBody: z.lazy(() => SendEventRequestBody$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                instanceID: v.instanceID,
                ...(v.RequestBody === undefined ? null : { requestBody: v.RequestBody }),
            };
        });

    export type Outbound = {
        instanceID: string;
        RequestBody?: SendEventRequestBody$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SendEventRequest> = z
        .object({
            instanceID: z.string(),
            requestBody: z.lazy(() => SendEventRequestBody$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                instanceID: v.instanceID,
                ...(v.requestBody === undefined ? null : { RequestBody: v.requestBody }),
            };
        });
}

/** @internal */
export namespace SendEventResponse$ {
    export const inboundSchema: z.ZodType<SendEventResponse, z.ZodTypeDef, unknown> = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SendEventResponse> = z.object(
        {}
    );
}
