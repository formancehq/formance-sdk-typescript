/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";

export type RevertTransactionRequest = {
  /**
   * Allow to disable balances checks
   */
  disableChecks?: boolean | undefined;
  /**
   * Name of the ledger.
   */
  ledger: string;
  /**
   * Transaction ID.
   */
  txid: bigint;
};

export type RevertTransactionResponse = {
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
  /**
   * OK
   */
  transactionResponse?: shared.TransactionResponse | undefined;
};

/** @internal */
export const RevertTransactionRequest$inboundSchema: z.ZodType<
  RevertTransactionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  disableChecks: z.boolean().optional(),
  ledger: z.string(),
  txid: z.number().transform(v => BigInt(v)),
});

/** @internal */
export type RevertTransactionRequest$Outbound = {
  disableChecks?: boolean | undefined;
  ledger: string;
  txid: number;
};

/** @internal */
export const RevertTransactionRequest$outboundSchema: z.ZodType<
  RevertTransactionRequest$Outbound,
  z.ZodTypeDef,
  RevertTransactionRequest
> = z.object({
  disableChecks: z.boolean().optional(),
  ledger: z.string(),
  txid: z.bigint().transform(v => Number(v)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RevertTransactionRequest$ {
  /** @deprecated use `RevertTransactionRequest$inboundSchema` instead. */
  export const inboundSchema = RevertTransactionRequest$inboundSchema;
  /** @deprecated use `RevertTransactionRequest$outboundSchema` instead. */
  export const outboundSchema = RevertTransactionRequest$outboundSchema;
  /** @deprecated use `RevertTransactionRequest$Outbound` instead. */
  export type Outbound = RevertTransactionRequest$Outbound;
}

/** @internal */
export const RevertTransactionResponse$inboundSchema: z.ZodType<
  RevertTransactionResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  StatusCode: z.number().int(),
  RawResponse: z.instanceof(Response),
  TransactionResponse: shared.TransactionResponse$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "ContentType": "contentType",
    "StatusCode": "statusCode",
    "RawResponse": "rawResponse",
    "TransactionResponse": "transactionResponse",
  });
});

/** @internal */
export type RevertTransactionResponse$Outbound = {
  ContentType: string;
  StatusCode: number;
  RawResponse: never;
  TransactionResponse?: shared.TransactionResponse$Outbound | undefined;
};

/** @internal */
export const RevertTransactionResponse$outboundSchema: z.ZodType<
  RevertTransactionResponse$Outbound,
  z.ZodTypeDef,
  RevertTransactionResponse
> = z.object({
  contentType: z.string(),
  statusCode: z.number().int(),
  rawResponse: z.instanceof(Response).transform(() => {
    throw new Error("Response cannot be serialized");
  }),
  transactionResponse: shared.TransactionResponse$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    contentType: "ContentType",
    statusCode: "StatusCode",
    rawResponse: "RawResponse",
    transactionResponse: "TransactionResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RevertTransactionResponse$ {
  /** @deprecated use `RevertTransactionResponse$inboundSchema` instead. */
  export const inboundSchema = RevertTransactionResponse$inboundSchema;
  /** @deprecated use `RevertTransactionResponse$outboundSchema` instead. */
  export const outboundSchema = RevertTransactionResponse$outboundSchema;
  /** @deprecated use `RevertTransactionResponse$Outbound` instead. */
  export type Outbound = RevertTransactionResponse$Outbound;
}
