/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type GetWalletRequest = {
    id: string;
};

export type GetWalletResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * Wallet
     */
    getWalletResponse?: shared.GetWalletResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export const GetWalletRequest$inboundSchema: z.ZodType<GetWalletRequest, z.ZodTypeDef, unknown> =
    z.object({
        id: z.string(),
    });

/** @internal */
export type GetWalletRequest$Outbound = {
    id: string;
};

/** @internal */
export const GetWalletRequest$outboundSchema: z.ZodType<
    GetWalletRequest$Outbound,
    z.ZodTypeDef,
    GetWalletRequest
> = z.object({
    id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetWalletRequest$ {
    /** @deprecated use `GetWalletRequest$inboundSchema` instead. */
    export const inboundSchema = GetWalletRequest$inboundSchema;
    /** @deprecated use `GetWalletRequest$outboundSchema` instead. */
    export const outboundSchema = GetWalletRequest$outboundSchema;
    /** @deprecated use `GetWalletRequest$Outbound` instead. */
    export type Outbound = GetWalletRequest$Outbound;
}

/** @internal */
export const GetWalletResponse$inboundSchema: z.ZodType<GetWalletResponse, z.ZodTypeDef, unknown> =
    z
        .object({
            ContentType: z.string(),
            GetWalletResponse: shared.GetWalletResponse$inboundSchema.optional(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
        })
        .transform((v) => {
            return remap$(v, {
                ContentType: "contentType",
                GetWalletResponse: "getWalletResponse",
                StatusCode: "statusCode",
                RawResponse: "rawResponse",
            });
        });

/** @internal */
export type GetWalletResponse$Outbound = {
    ContentType: string;
    GetWalletResponse?: shared.GetWalletResponse$Outbound | undefined;
    StatusCode: number;
    RawResponse: never;
};

/** @internal */
export const GetWalletResponse$outboundSchema: z.ZodType<
    GetWalletResponse$Outbound,
    z.ZodTypeDef,
    GetWalletResponse
> = z
    .object({
        contentType: z.string(),
        getWalletResponse: shared.GetWalletResponse$outboundSchema.optional(),
        statusCode: z.number().int(),
        rawResponse: z.instanceof(Response).transform(() => {
            throw new Error("Response cannot be serialized");
        }),
    })
    .transform((v) => {
        return remap$(v, {
            contentType: "ContentType",
            getWalletResponse: "GetWalletResponse",
            statusCode: "StatusCode",
            rawResponse: "RawResponse",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetWalletResponse$ {
    /** @deprecated use `GetWalletResponse$inboundSchema` instead. */
    export const inboundSchema = GetWalletResponse$inboundSchema;
    /** @deprecated use `GetWalletResponse$outboundSchema` instead. */
    export const outboundSchema = GetWalletResponse$outboundSchema;
    /** @deprecated use `GetWalletResponse$Outbound` instead. */
    export type Outbound = GetWalletResponse$Outbound;
}
