/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type RetryTransferInitiationRequest = {
    /**
     * The transfer ID.
     */
    transferId: string;
};

export type RetryTransferInitiationResponse = {};

/** @internal */
export namespace RetryTransferInitiationRequest$ {
    export const inboundSchema: z.ZodType<RetryTransferInitiationRequest, z.ZodTypeDef, unknown> = z
        .object({
            transferId: z.string(),
        })
        .transform((v) => {
            return {
                transferId: v.transferId,
            };
        });

    export type Outbound = {
        transferId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RetryTransferInitiationRequest> =
        z
            .object({
                transferId: z.string(),
            })
            .transform((v) => {
                return {
                    transferId: v.transferId,
                };
            });
}

/** @internal */
export namespace RetryTransferInitiationResponse$ {
    export const inboundSchema: z.ZodType<RetryTransferInitiationResponse, z.ZodTypeDef, unknown> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        RetryTransferInitiationResponse
    > = z.object({});
}
