/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type DeleteClientRequest = {
    /**
     * Client ID
     */
    clientId: string;
};

export type DeleteClientResponse = {};

/** @internal */
export namespace DeleteClientRequest$ {
    export const inboundSchema: z.ZodType<DeleteClientRequest, z.ZodTypeDef, unknown> = z
        .object({
            clientId: z.string(),
        })
        .transform((v) => {
            return {
                clientId: v.clientId,
            };
        });

    export type Outbound = {
        clientId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeleteClientRequest> = z
        .object({
            clientId: z.string(),
        })
        .transform((v) => {
            return {
                clientId: v.clientId,
            };
        });
}

/** @internal */
export namespace DeleteClientResponse$ {
    export const inboundSchema: z.ZodType<DeleteClientResponse, z.ZodTypeDef, unknown> = z.object(
        {}
    );

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeleteClientResponse> = z.object(
        {}
    );
}
