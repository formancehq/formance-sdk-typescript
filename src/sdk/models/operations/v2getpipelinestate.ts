/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

export type V2GetPipelineStateRequest = {
  /**
   * Name of the ledger.
   */
  ledger: string;
  /**
   * The pipeline id
   */
  pipelineID: string;
};

/**
 * Pipeline information
 */
export type V2GetPipelineStateResponseBody = {
  data: shared.V2Pipeline;
};

export type V2GetPipelineStateResponse = {
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
  /**
   * Pipeline information
   */
  object?: V2GetPipelineStateResponseBody | undefined;
};

/** @internal */
export const V2GetPipelineStateRequest$inboundSchema: z.ZodType<
  V2GetPipelineStateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  ledger: z.string(),
  pipelineID: z.string(),
});

/** @internal */
export type V2GetPipelineStateRequest$Outbound = {
  ledger: string;
  pipelineID: string;
};

/** @internal */
export const V2GetPipelineStateRequest$outboundSchema: z.ZodType<
  V2GetPipelineStateRequest$Outbound,
  z.ZodTypeDef,
  V2GetPipelineStateRequest
> = z.object({
  ledger: z.string(),
  pipelineID: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V2GetPipelineStateRequest$ {
  /** @deprecated use `V2GetPipelineStateRequest$inboundSchema` instead. */
  export const inboundSchema = V2GetPipelineStateRequest$inboundSchema;
  /** @deprecated use `V2GetPipelineStateRequest$outboundSchema` instead. */
  export const outboundSchema = V2GetPipelineStateRequest$outboundSchema;
  /** @deprecated use `V2GetPipelineStateRequest$Outbound` instead. */
  export type Outbound = V2GetPipelineStateRequest$Outbound;
}

export function v2GetPipelineStateRequestToJSON(
  v2GetPipelineStateRequest: V2GetPipelineStateRequest,
): string {
  return JSON.stringify(
    V2GetPipelineStateRequest$outboundSchema.parse(v2GetPipelineStateRequest),
  );
}

export function v2GetPipelineStateRequestFromJSON(
  jsonString: string,
): SafeParseResult<V2GetPipelineStateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V2GetPipelineStateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V2GetPipelineStateRequest' from JSON`,
  );
}

/** @internal */
export const V2GetPipelineStateResponseBody$inboundSchema: z.ZodType<
  V2GetPipelineStateResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: shared.V2Pipeline$inboundSchema,
});

/** @internal */
export type V2GetPipelineStateResponseBody$Outbound = {
  data: shared.V2Pipeline$Outbound;
};

/** @internal */
export const V2GetPipelineStateResponseBody$outboundSchema: z.ZodType<
  V2GetPipelineStateResponseBody$Outbound,
  z.ZodTypeDef,
  V2GetPipelineStateResponseBody
> = z.object({
  data: shared.V2Pipeline$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V2GetPipelineStateResponseBody$ {
  /** @deprecated use `V2GetPipelineStateResponseBody$inboundSchema` instead. */
  export const inboundSchema = V2GetPipelineStateResponseBody$inboundSchema;
  /** @deprecated use `V2GetPipelineStateResponseBody$outboundSchema` instead. */
  export const outboundSchema = V2GetPipelineStateResponseBody$outboundSchema;
  /** @deprecated use `V2GetPipelineStateResponseBody$Outbound` instead. */
  export type Outbound = V2GetPipelineStateResponseBody$Outbound;
}

export function v2GetPipelineStateResponseBodyToJSON(
  v2GetPipelineStateResponseBody: V2GetPipelineStateResponseBody,
): string {
  return JSON.stringify(
    V2GetPipelineStateResponseBody$outboundSchema.parse(
      v2GetPipelineStateResponseBody,
    ),
  );
}

export function v2GetPipelineStateResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<V2GetPipelineStateResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V2GetPipelineStateResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V2GetPipelineStateResponseBody' from JSON`,
  );
}

/** @internal */
export const V2GetPipelineStateResponse$inboundSchema: z.ZodType<
  V2GetPipelineStateResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  StatusCode: z.number().int(),
  RawResponse: z.instanceof(Response),
  object: z.lazy(() => V2GetPipelineStateResponseBody$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "ContentType": "contentType",
    "StatusCode": "statusCode",
    "RawResponse": "rawResponse",
  });
});

/** @internal */
export type V2GetPipelineStateResponse$Outbound = {
  ContentType: string;
  StatusCode: number;
  RawResponse: never;
  object?: V2GetPipelineStateResponseBody$Outbound | undefined;
};

/** @internal */
export const V2GetPipelineStateResponse$outboundSchema: z.ZodType<
  V2GetPipelineStateResponse$Outbound,
  z.ZodTypeDef,
  V2GetPipelineStateResponse
> = z.object({
  contentType: z.string(),
  statusCode: z.number().int(),
  rawResponse: z.instanceof(Response).transform(() => {
    throw new Error("Response cannot be serialized");
  }),
  object: z.lazy(() => V2GetPipelineStateResponseBody$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    contentType: "ContentType",
    statusCode: "StatusCode",
    rawResponse: "RawResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V2GetPipelineStateResponse$ {
  /** @deprecated use `V2GetPipelineStateResponse$inboundSchema` instead. */
  export const inboundSchema = V2GetPipelineStateResponse$inboundSchema;
  /** @deprecated use `V2GetPipelineStateResponse$outboundSchema` instead. */
  export const outboundSchema = V2GetPipelineStateResponse$outboundSchema;
  /** @deprecated use `V2GetPipelineStateResponse$Outbound` instead. */
  export type Outbound = V2GetPipelineStateResponse$Outbound;
}

export function v2GetPipelineStateResponseToJSON(
  v2GetPipelineStateResponse: V2GetPipelineStateResponse,
): string {
  return JSON.stringify(
    V2GetPipelineStateResponse$outboundSchema.parse(v2GetPipelineStateResponse),
  );
}

export function v2GetPipelineStateResponseFromJSON(
  jsonString: string,
): SafeParseResult<V2GetPipelineStateResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V2GetPipelineStateResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V2GetPipelineStateResponse' from JSON`,
  );
}
