/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type UpdateMetadataRequest = {
    /**
     * The payment ID.
     */
    paymentId: string;
    requestBody: Record<string, string> | null;
};

export type UpdateMetadataResponse = {};

/** @internal */
export namespace UpdateMetadataRequest$ {
    export const inboundSchema: z.ZodType<UpdateMetadataRequest, z.ZodTypeDef, unknown> = z
        .object({
            paymentId: z.string(),
            RequestBody: z.nullable(z.record(z.string())),
        })
        .transform((v) => {
            return {
                paymentId: v.paymentId,
                requestBody: v.RequestBody,
            };
        });

    export type Outbound = {
        paymentId: string;
        RequestBody: Record<string, string> | null;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateMetadataRequest> = z
        .object({
            paymentId: z.string(),
            requestBody: z.nullable(z.record(z.string())),
        })
        .transform((v) => {
            return {
                paymentId: v.paymentId,
                RequestBody: v.requestBody,
            };
        });
}

/** @internal */
export namespace UpdateMetadataResponse$ {
    export const inboundSchema: z.ZodType<UpdateMetadataResponse, z.ZodTypeDef, unknown> = z.object(
        {}
    );

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateMetadataResponse> =
        z.object({});
}
