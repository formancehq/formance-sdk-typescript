/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type UpdateBankAccountMetadataRequest = {
    updateBankAccountMetadataRequest: shared.UpdateBankAccountMetadataRequest;
    /**
     * The bank account ID.
     */
    bankAccountId: string;
};

export type UpdateBankAccountMetadataResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export const UpdateBankAccountMetadataRequest$inboundSchema: z.ZodType<
    UpdateBankAccountMetadataRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        UpdateBankAccountMetadataRequest: shared.UpdateBankAccountMetadataRequest$inboundSchema,
        bankAccountId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            UpdateBankAccountMetadataRequest: "updateBankAccountMetadataRequest",
        });
    });

/** @internal */
export type UpdateBankAccountMetadataRequest$Outbound = {
    UpdateBankAccountMetadataRequest: shared.UpdateBankAccountMetadataRequest$Outbound;
    bankAccountId: string;
};

/** @internal */
export const UpdateBankAccountMetadataRequest$outboundSchema: z.ZodType<
    UpdateBankAccountMetadataRequest$Outbound,
    z.ZodTypeDef,
    UpdateBankAccountMetadataRequest
> = z
    .object({
        updateBankAccountMetadataRequest: shared.UpdateBankAccountMetadataRequest$outboundSchema,
        bankAccountId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            updateBankAccountMetadataRequest: "UpdateBankAccountMetadataRequest",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateBankAccountMetadataRequest$ {
    /** @deprecated use `UpdateBankAccountMetadataRequest$inboundSchema` instead. */
    export const inboundSchema = UpdateBankAccountMetadataRequest$inboundSchema;
    /** @deprecated use `UpdateBankAccountMetadataRequest$outboundSchema` instead. */
    export const outboundSchema = UpdateBankAccountMetadataRequest$outboundSchema;
    /** @deprecated use `UpdateBankAccountMetadataRequest$Outbound` instead. */
    export type Outbound = UpdateBankAccountMetadataRequest$Outbound;
}

/** @internal */
export const UpdateBankAccountMetadataResponse$inboundSchema: z.ZodType<
    UpdateBankAccountMetadataResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        ContentType: z.string(),
        StatusCode: z.number().int(),
        RawResponse: z.instanceof(Response),
    })
    .transform((v) => {
        return remap$(v, {
            ContentType: "contentType",
            StatusCode: "statusCode",
            RawResponse: "rawResponse",
        });
    });

/** @internal */
export type UpdateBankAccountMetadataResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
};

/** @internal */
export const UpdateBankAccountMetadataResponse$outboundSchema: z.ZodType<
    UpdateBankAccountMetadataResponse$Outbound,
    z.ZodTypeDef,
    UpdateBankAccountMetadataResponse
> = z
    .object({
        contentType: z.string(),
        statusCode: z.number().int(),
        rawResponse: z.instanceof(Response).transform(() => {
            throw new Error("Response cannot be serialized");
        }),
    })
    .transform((v) => {
        return remap$(v, {
            contentType: "ContentType",
            statusCode: "StatusCode",
            rawResponse: "RawResponse",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateBankAccountMetadataResponse$ {
    /** @deprecated use `UpdateBankAccountMetadataResponse$inboundSchema` instead. */
    export const inboundSchema = UpdateBankAccountMetadataResponse$inboundSchema;
    /** @deprecated use `UpdateBankAccountMetadataResponse$outboundSchema` instead. */
    export const outboundSchema = UpdateBankAccountMetadataResponse$outboundSchema;
    /** @deprecated use `UpdateBankAccountMetadataResponse$Outbound` instead. */
    export type Outbound = UpdateBankAccountMetadataResponse$Outbound;
}
