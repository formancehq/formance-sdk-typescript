/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../../../sdk/models/shared";
import { z } from "zod";

export type UpdateBankAccountMetadataRequest = {
    updateBankAccountMetadataRequest: shared.UpdateBankAccountMetadataRequest;
    /**
     * The bank account ID.
     */
    bankAccountId: string;
};

export type UpdateBankAccountMetadataResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export namespace UpdateBankAccountMetadataRequest$ {
    export type Inbound = {
        UpdateBankAccountMetadataRequest: shared.UpdateBankAccountMetadataRequest$.Inbound;
        bankAccountId: string;
    };

    export const inboundSchema: z.ZodType<UpdateBankAccountMetadataRequest, z.ZodTypeDef, Inbound> =
        z
            .object({
                UpdateBankAccountMetadataRequest:
                    shared.UpdateBankAccountMetadataRequest$.inboundSchema,
                bankAccountId: z.string(),
            })
            .transform((v) => {
                return {
                    updateBankAccountMetadataRequest: v.UpdateBankAccountMetadataRequest,
                    bankAccountId: v.bankAccountId,
                };
            });

    export type Outbound = {
        UpdateBankAccountMetadataRequest: shared.UpdateBankAccountMetadataRequest$.Outbound;
        bankAccountId: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        UpdateBankAccountMetadataRequest
    > = z
        .object({
            updateBankAccountMetadataRequest:
                shared.UpdateBankAccountMetadataRequest$.outboundSchema,
            bankAccountId: z.string(),
        })
        .transform((v) => {
            return {
                UpdateBankAccountMetadataRequest: v.updateBankAccountMetadataRequest,
                bankAccountId: v.bankAccountId,
            };
        });
}

/** @internal */
export namespace UpdateBankAccountMetadataResponse$ {
    export type Inbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: Response;
    };

    export const inboundSchema: z.ZodType<
        UpdateBankAccountMetadataResponse,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            ContentType: z.string(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
        })
        .transform((v) => {
            return {
                contentType: v.ContentType,
                statusCode: v.StatusCode,
                rawResponse: v.RawResponse,
            };
        });

    export type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        UpdateBankAccountMetadataResponse
    > = z
        .object({
            contentType: z.string(),
            statusCode: z.number().int(),
            rawResponse: z.instanceof(Response).transform(() => {
                throw new Error("Response cannot be serialized");
            }),
        })
        .transform((v) => {
            return {
                ContentType: v.contentType,
                StatusCode: v.statusCode,
                RawResponse: v.rawResponse,
            };
        });
}
