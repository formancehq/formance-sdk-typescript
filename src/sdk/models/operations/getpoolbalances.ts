/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type GetPoolBalancesRequest = {
    /**
     * Filter balances by date.
     *
     * @remarks
     *
     */
    at: Date;
    /**
     * The pool ID.
     */
    poolId: string;
};

export type GetPoolBalancesResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * OK
     */
    poolBalancesResponse?: shared.PoolBalancesResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export const GetPoolBalancesRequest$inboundSchema: z.ZodType<
    GetPoolBalancesRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    at: z
        .string()
        .datetime({ offset: true })
        .transform((v) => new Date(v)),
    poolId: z.string(),
});

/** @internal */
export type GetPoolBalancesRequest$Outbound = {
    at: string;
    poolId: string;
};

/** @internal */
export const GetPoolBalancesRequest$outboundSchema: z.ZodType<
    GetPoolBalancesRequest$Outbound,
    z.ZodTypeDef,
    GetPoolBalancesRequest
> = z.object({
    at: z.date().transform((v) => v.toISOString()),
    poolId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPoolBalancesRequest$ {
    /** @deprecated use `GetPoolBalancesRequest$inboundSchema` instead. */
    export const inboundSchema = GetPoolBalancesRequest$inboundSchema;
    /** @deprecated use `GetPoolBalancesRequest$outboundSchema` instead. */
    export const outboundSchema = GetPoolBalancesRequest$outboundSchema;
    /** @deprecated use `GetPoolBalancesRequest$Outbound` instead. */
    export type Outbound = GetPoolBalancesRequest$Outbound;
}

/** @internal */
export const GetPoolBalancesResponse$inboundSchema: z.ZodType<
    GetPoolBalancesResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        ContentType: z.string(),
        PoolBalancesResponse: shared.PoolBalancesResponse$inboundSchema.optional(),
        StatusCode: z.number().int(),
        RawResponse: z.instanceof(Response),
    })
    .transform((v) => {
        return remap$(v, {
            ContentType: "contentType",
            PoolBalancesResponse: "poolBalancesResponse",
            StatusCode: "statusCode",
            RawResponse: "rawResponse",
        });
    });

/** @internal */
export type GetPoolBalancesResponse$Outbound = {
    ContentType: string;
    PoolBalancesResponse?: shared.PoolBalancesResponse$Outbound | undefined;
    StatusCode: number;
    RawResponse: never;
};

/** @internal */
export const GetPoolBalancesResponse$outboundSchema: z.ZodType<
    GetPoolBalancesResponse$Outbound,
    z.ZodTypeDef,
    GetPoolBalancesResponse
> = z
    .object({
        contentType: z.string(),
        poolBalancesResponse: shared.PoolBalancesResponse$outboundSchema.optional(),
        statusCode: z.number().int(),
        rawResponse: z.instanceof(Response).transform(() => {
            throw new Error("Response cannot be serialized");
        }),
    })
    .transform((v) => {
        return remap$(v, {
            contentType: "ContentType",
            poolBalancesResponse: "PoolBalancesResponse",
            statusCode: "StatusCode",
            rawResponse: "RawResponse",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPoolBalancesResponse$ {
    /** @deprecated use `GetPoolBalancesResponse$inboundSchema` instead. */
    export const inboundSchema = GetPoolBalancesResponse$inboundSchema;
    /** @deprecated use `GetPoolBalancesResponse$outboundSchema` instead. */
    export const outboundSchema = GetPoolBalancesResponse$outboundSchema;
    /** @deprecated use `GetPoolBalancesResponse$Outbound` instead. */
    export type Outbound = GetPoolBalancesResponse$Outbound;
}
