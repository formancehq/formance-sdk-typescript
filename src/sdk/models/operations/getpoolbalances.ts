/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type GetPoolBalancesRequest = {
    /**
     * The pool ID.
     */
    poolId: string;
    /**
     * Filter balances by date.
     *
     * @remarks
     *
     */
    at: Date;
};

/** @internal */
export namespace GetPoolBalancesRequest$ {
    export const inboundSchema: z.ZodType<GetPoolBalancesRequest, z.ZodTypeDef, unknown> = z
        .object({
            poolId: z.string(),
            at: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v)),
        })
        .transform((v) => {
            return {
                poolId: v.poolId,
                at: v.at,
            };
        });

    export type Outbound = {
        poolId: string;
        at: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetPoolBalancesRequest> = z
        .object({
            poolId: z.string(),
            at: z.date().transform((v) => v.toISOString()),
        })
        .transform((v) => {
            return {
                poolId: v.poolId,
                at: v.at,
            };
        });
}
