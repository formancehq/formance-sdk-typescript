/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type GetBankAccountRequest = {
    /**
     * The bank account ID.
     */
    bankAccountId: string;
};

export type GetBankAccountResponse = {
    /**
     * OK
     */
    bankAccountResponse?: shared.BankAccountResponse | undefined;
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export const GetBankAccountRequest$inboundSchema: z.ZodType<
    GetBankAccountRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    bankAccountId: z.string(),
});

/** @internal */
export type GetBankAccountRequest$Outbound = {
    bankAccountId: string;
};

/** @internal */
export const GetBankAccountRequest$outboundSchema: z.ZodType<
    GetBankAccountRequest$Outbound,
    z.ZodTypeDef,
    GetBankAccountRequest
> = z.object({
    bankAccountId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBankAccountRequest$ {
    /** @deprecated use `GetBankAccountRequest$inboundSchema` instead. */
    export const inboundSchema = GetBankAccountRequest$inboundSchema;
    /** @deprecated use `GetBankAccountRequest$outboundSchema` instead. */
    export const outboundSchema = GetBankAccountRequest$outboundSchema;
    /** @deprecated use `GetBankAccountRequest$Outbound` instead. */
    export type Outbound = GetBankAccountRequest$Outbound;
}

/** @internal */
export const GetBankAccountResponse$inboundSchema: z.ZodType<
    GetBankAccountResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        BankAccountResponse: shared.BankAccountResponse$inboundSchema.optional(),
        ContentType: z.string(),
        StatusCode: z.number().int(),
        RawResponse: z.instanceof(Response),
    })
    .transform((v) => {
        return remap$(v, {
            BankAccountResponse: "bankAccountResponse",
            ContentType: "contentType",
            StatusCode: "statusCode",
            RawResponse: "rawResponse",
        });
    });

/** @internal */
export type GetBankAccountResponse$Outbound = {
    BankAccountResponse?: shared.BankAccountResponse$Outbound | undefined;
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
};

/** @internal */
export const GetBankAccountResponse$outboundSchema: z.ZodType<
    GetBankAccountResponse$Outbound,
    z.ZodTypeDef,
    GetBankAccountResponse
> = z
    .object({
        bankAccountResponse: shared.BankAccountResponse$outboundSchema.optional(),
        contentType: z.string(),
        statusCode: z.number().int(),
        rawResponse: z.instanceof(Response).transform(() => {
            throw new Error("Response cannot be serialized");
        }),
    })
    .transform((v) => {
        return remap$(v, {
            bankAccountResponse: "BankAccountResponse",
            contentType: "ContentType",
            statusCode: "StatusCode",
            rawResponse: "RawResponse",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBankAccountResponse$ {
    /** @deprecated use `GetBankAccountResponse$inboundSchema` instead. */
    export const inboundSchema = GetBankAccountResponse$inboundSchema;
    /** @deprecated use `GetBankAccountResponse$outboundSchema` instead. */
    export const outboundSchema = GetBankAccountResponse$outboundSchema;
    /** @deprecated use `GetBankAccountResponse$Outbound` instead. */
    export type Outbound = GetBankAccountResponse$Outbound;
}
