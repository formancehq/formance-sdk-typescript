/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type V2GetInfoResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * OK
     */
    v2ConfigInfoResponse?: shared.V2ConfigInfoResponse | undefined;
};

/** @internal */
export const V2GetInfoResponse$inboundSchema: z.ZodType<V2GetInfoResponse, z.ZodTypeDef, unknown> =
    z
        .object({
            ContentType: z.string(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
            V2ConfigInfoResponse: shared.V2ConfigInfoResponse$inboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                ContentType: "contentType",
                StatusCode: "statusCode",
                RawResponse: "rawResponse",
                V2ConfigInfoResponse: "v2ConfigInfoResponse",
            });
        });

/** @internal */
export type V2GetInfoResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    V2ConfigInfoResponse?: shared.V2ConfigInfoResponse$Outbound | undefined;
};

/** @internal */
export const V2GetInfoResponse$outboundSchema: z.ZodType<
    V2GetInfoResponse$Outbound,
    z.ZodTypeDef,
    V2GetInfoResponse
> = z
    .object({
        contentType: z.string(),
        statusCode: z.number().int(),
        rawResponse: z.instanceof(Response).transform(() => {
            throw new Error("Response cannot be serialized");
        }),
        v2ConfigInfoResponse: shared.V2ConfigInfoResponse$outboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            contentType: "ContentType",
            statusCode: "StatusCode",
            rawResponse: "RawResponse",
            v2ConfigInfoResponse: "V2ConfigInfoResponse",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V2GetInfoResponse$ {
    /** @deprecated use `V2GetInfoResponse$inboundSchema` instead. */
    export const inboundSchema = V2GetInfoResponse$inboundSchema;
    /** @deprecated use `V2GetInfoResponse$outboundSchema` instead. */
    export const outboundSchema = V2GetInfoResponse$outboundSchema;
    /** @deprecated use `V2GetInfoResponse$Outbound` instead. */
    export type Outbound = V2GetInfoResponse$Outbound;
}
