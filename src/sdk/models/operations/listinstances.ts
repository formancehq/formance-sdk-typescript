/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type ListInstancesRequest = {
    /**
     * Filter running instances
     */
    running?: boolean | undefined;
    /**
     * A workflow id
     */
    workflowID?: string | undefined;
};

export type ListInstancesResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * List of workflow instances
     */
    listRunsResponse?: shared.ListRunsResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export const ListInstancesRequest$inboundSchema: z.ZodType<
    ListInstancesRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    running: z.boolean().optional(),
    workflowID: z.string().optional(),
});

/** @internal */
export type ListInstancesRequest$Outbound = {
    running?: boolean | undefined;
    workflowID?: string | undefined;
};

/** @internal */
export const ListInstancesRequest$outboundSchema: z.ZodType<
    ListInstancesRequest$Outbound,
    z.ZodTypeDef,
    ListInstancesRequest
> = z.object({
    running: z.boolean().optional(),
    workflowID: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListInstancesRequest$ {
    /** @deprecated use `ListInstancesRequest$inboundSchema` instead. */
    export const inboundSchema = ListInstancesRequest$inboundSchema;
    /** @deprecated use `ListInstancesRequest$outboundSchema` instead. */
    export const outboundSchema = ListInstancesRequest$outboundSchema;
    /** @deprecated use `ListInstancesRequest$Outbound` instead. */
    export type Outbound = ListInstancesRequest$Outbound;
}

/** @internal */
export const ListInstancesResponse$inboundSchema: z.ZodType<
    ListInstancesResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        ContentType: z.string(),
        ListRunsResponse: shared.ListRunsResponse$inboundSchema.optional(),
        StatusCode: z.number().int(),
        RawResponse: z.instanceof(Response),
    })
    .transform((v) => {
        return remap$(v, {
            ContentType: "contentType",
            ListRunsResponse: "listRunsResponse",
            StatusCode: "statusCode",
            RawResponse: "rawResponse",
        });
    });

/** @internal */
export type ListInstancesResponse$Outbound = {
    ContentType: string;
    ListRunsResponse?: shared.ListRunsResponse$Outbound | undefined;
    StatusCode: number;
    RawResponse: never;
};

/** @internal */
export const ListInstancesResponse$outboundSchema: z.ZodType<
    ListInstancesResponse$Outbound,
    z.ZodTypeDef,
    ListInstancesResponse
> = z
    .object({
        contentType: z.string(),
        listRunsResponse: shared.ListRunsResponse$outboundSchema.optional(),
        statusCode: z.number().int(),
        rawResponse: z.instanceof(Response).transform(() => {
            throw new Error("Response cannot be serialized");
        }),
    })
    .transform((v) => {
        return remap$(v, {
            contentType: "ContentType",
            listRunsResponse: "ListRunsResponse",
            statusCode: "StatusCode",
            rawResponse: "RawResponse",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListInstancesResponse$ {
    /** @deprecated use `ListInstancesResponse$inboundSchema` instead. */
    export const inboundSchema = ListInstancesResponse$inboundSchema;
    /** @deprecated use `ListInstancesResponse$outboundSchema` instead. */
    export const outboundSchema = ListInstancesResponse$outboundSchema;
    /** @deprecated use `ListInstancesResponse$Outbound` instead. */
    export type Outbound = ListInstancesResponse$Outbound;
}
