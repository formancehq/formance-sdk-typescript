/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../shared";
import * as z from "zod";

export type ReadConnectorConfigRequest = {
    /**
     * The name of the connector.
     */
    connector: shared.Connector;
};

/** @internal */
export namespace ReadConnectorConfigRequest$ {
    export const inboundSchema: z.ZodType<ReadConnectorConfigRequest, z.ZodTypeDef, unknown> = z
        .object({
            connector: shared.Connector$.inboundSchema,
        })
        .transform((v) => {
            return {
                connector: v.connector,
            };
        });

    export type Outbound = {
        connector: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ReadConnectorConfigRequest> = z
        .object({
            connector: shared.Connector$.outboundSchema,
        })
        .transform((v) => {
            return {
                connector: v.connector,
            };
        });
}
