/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../shared";
import * as z from "zod";

export type V2CreateLedgerRequest = {
    /**
     * Name of the ledger.
     */
    ledger: string;
    v2CreateLedgerRequest?: shared.V2CreateLedgerRequest | undefined;
};

export type V2CreateLedgerResponse = {};

/** @internal */
export namespace V2CreateLedgerRequest$ {
    export const inboundSchema: z.ZodType<V2CreateLedgerRequest, z.ZodTypeDef, unknown> = z
        .object({
            ledger: z.string(),
            V2CreateLedgerRequest: shared.V2CreateLedgerRequest$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ledger: v.ledger,
                ...(v.V2CreateLedgerRequest === undefined
                    ? null
                    : { v2CreateLedgerRequest: v.V2CreateLedgerRequest }),
            };
        });

    export type Outbound = {
        ledger: string;
        V2CreateLedgerRequest?: shared.V2CreateLedgerRequest$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2CreateLedgerRequest> = z
        .object({
            ledger: z.string(),
            v2CreateLedgerRequest: shared.V2CreateLedgerRequest$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ledger: v.ledger,
                ...(v.v2CreateLedgerRequest === undefined
                    ? null
                    : { V2CreateLedgerRequest: v.v2CreateLedgerRequest }),
            };
        });
}

/** @internal */
export namespace V2CreateLedgerResponse$ {
    export const inboundSchema: z.ZodType<V2CreateLedgerResponse, z.ZodTypeDef, unknown> = z.object(
        {}
    );

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2CreateLedgerResponse> =
        z.object({});
}
