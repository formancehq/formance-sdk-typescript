/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type V2DeleteTransactionMetadataRequest = {
    /**
     * Name of the ledger.
     */
    ledger: string;
    /**
     * Transaction ID.
     */
    id: bigint;
    /**
     * The key to remove.
     */
    key: string;
};

export type V2DeleteTransactionMetadataResponse = {};

/** @internal */
export namespace V2DeleteTransactionMetadataRequest$ {
    export const inboundSchema: z.ZodType<
        V2DeleteTransactionMetadataRequest,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            ledger: z.string(),
            id: z.number().transform((v) => BigInt(v)),
            key: z.string(),
        })
        .transform((v) => {
            return {
                ledger: v.ledger,
                id: v.id,
                key: v.key,
            };
        });

    export type Outbound = {
        ledger: string;
        id: number;
        key: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        V2DeleteTransactionMetadataRequest
    > = z
        .object({
            ledger: z.string(),
            id: z.bigint().transform((v) => Number(v)),
            key: z.string(),
        })
        .transform((v) => {
            return {
                ledger: v.ledger,
                id: v.id,
                key: v.key,
            };
        });
}

/** @internal */
export namespace V2DeleteTransactionMetadataResponse$ {
    export const inboundSchema: z.ZodType<
        V2DeleteTransactionMetadataResponse,
        z.ZodTypeDef,
        unknown
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        V2DeleteTransactionMetadataResponse
    > = z.object({});
}
