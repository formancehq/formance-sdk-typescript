/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../shared";
import * as z from "zod";

export type ForwardBankAccountRequest = {
    /**
     * The bank account ID.
     */
    bankAccountId: string;
    forwardBankAccountRequest: shared.ForwardBankAccountRequest;
};

/** @internal */
export namespace ForwardBankAccountRequest$ {
    export const inboundSchema: z.ZodType<ForwardBankAccountRequest, z.ZodTypeDef, unknown> = z
        .object({
            bankAccountId: z.string(),
            ForwardBankAccountRequest: shared.ForwardBankAccountRequest$.inboundSchema,
        })
        .transform((v) => {
            return {
                bankAccountId: v.bankAccountId,
                forwardBankAccountRequest: v.ForwardBankAccountRequest,
            };
        });

    export type Outbound = {
        bankAccountId: string;
        ForwardBankAccountRequest: shared.ForwardBankAccountRequest$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ForwardBankAccountRequest> = z
        .object({
            bankAccountId: z.string(),
            forwardBankAccountRequest: shared.ForwardBankAccountRequest$.outboundSchema,
        })
        .transform((v) => {
            return {
                bankAccountId: v.bankAccountId,
                ForwardBankAccountRequest: v.forwardBankAccountRequest,
            };
        });
}
