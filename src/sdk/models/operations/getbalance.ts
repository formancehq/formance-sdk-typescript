/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

export type GetBalanceRequest = {
  balanceName: string;
  id: string;
};

export type GetBalanceResponse = {
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * Balance summary
   */
  getBalanceResponse?: shared.GetBalanceResponse | undefined;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
};

/** @internal */
export const GetBalanceRequest$inboundSchema: z.ZodType<
  GetBalanceRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  balanceName: z.string(),
  id: z.string(),
});

/** @internal */
export type GetBalanceRequest$Outbound = {
  balanceName: string;
  id: string;
};

/** @internal */
export const GetBalanceRequest$outboundSchema: z.ZodType<
  GetBalanceRequest$Outbound,
  z.ZodTypeDef,
  GetBalanceRequest
> = z.object({
  balanceName: z.string(),
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBalanceRequest$ {
  /** @deprecated use `GetBalanceRequest$inboundSchema` instead. */
  export const inboundSchema = GetBalanceRequest$inboundSchema;
  /** @deprecated use `GetBalanceRequest$outboundSchema` instead. */
  export const outboundSchema = GetBalanceRequest$outboundSchema;
  /** @deprecated use `GetBalanceRequest$Outbound` instead. */
  export type Outbound = GetBalanceRequest$Outbound;
}

export function getBalanceRequestToJSON(
  getBalanceRequest: GetBalanceRequest,
): string {
  return JSON.stringify(
    GetBalanceRequest$outboundSchema.parse(getBalanceRequest),
  );
}

export function getBalanceRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetBalanceRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetBalanceRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetBalanceRequest' from JSON`,
  );
}

/** @internal */
export const GetBalanceResponse$inboundSchema: z.ZodType<
  GetBalanceResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  GetBalanceResponse: shared.GetBalanceResponse$inboundSchema.optional(),
  StatusCode: z.number().int(),
  RawResponse: z.instanceof(Response),
}).transform((v) => {
  return remap$(v, {
    "ContentType": "contentType",
    "GetBalanceResponse": "getBalanceResponse",
    "StatusCode": "statusCode",
    "RawResponse": "rawResponse",
  });
});

/** @internal */
export type GetBalanceResponse$Outbound = {
  ContentType: string;
  GetBalanceResponse?: shared.GetBalanceResponse$Outbound | undefined;
  StatusCode: number;
  RawResponse: never;
};

/** @internal */
export const GetBalanceResponse$outboundSchema: z.ZodType<
  GetBalanceResponse$Outbound,
  z.ZodTypeDef,
  GetBalanceResponse
> = z.object({
  contentType: z.string(),
  getBalanceResponse: shared.GetBalanceResponse$outboundSchema.optional(),
  statusCode: z.number().int(),
  rawResponse: z.instanceof(Response).transform(() => {
    throw new Error("Response cannot be serialized");
  }),
}).transform((v) => {
  return remap$(v, {
    contentType: "ContentType",
    getBalanceResponse: "GetBalanceResponse",
    statusCode: "StatusCode",
    rawResponse: "RawResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBalanceResponse$ {
  /** @deprecated use `GetBalanceResponse$inboundSchema` instead. */
  export const inboundSchema = GetBalanceResponse$inboundSchema;
  /** @deprecated use `GetBalanceResponse$outboundSchema` instead. */
  export const outboundSchema = GetBalanceResponse$outboundSchema;
  /** @deprecated use `GetBalanceResponse$Outbound` instead. */
  export type Outbound = GetBalanceResponse$Outbound;
}

export function getBalanceResponseToJSON(
  getBalanceResponse: GetBalanceResponse,
): string {
  return JSON.stringify(
    GetBalanceResponse$outboundSchema.parse(getBalanceResponse),
  );
}

export function getBalanceResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetBalanceResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetBalanceResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetBalanceResponse' from JSON`,
  );
}
