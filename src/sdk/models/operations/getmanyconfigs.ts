/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type GetManyConfigsRequest = {
    /**
     * Optional filter by Config ID
     */
    id?: string | undefined;
    /**
     * Optional filter by endpoint URL
     */
    endpoint?: string | undefined;
};

/** @internal */
export namespace GetManyConfigsRequest$ {
    export const inboundSchema: z.ZodType<GetManyConfigsRequest, z.ZodTypeDef, unknown> = z
        .object({
            id: z.string().optional(),
            endpoint: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.endpoint === undefined ? null : { endpoint: v.endpoint }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        endpoint?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetManyConfigsRequest> = z
        .object({
            id: z.string().optional(),
            endpoint: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.endpoint === undefined ? null : { endpoint: v.endpoint }),
            };
        });
}
