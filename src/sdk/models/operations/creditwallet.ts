/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../shared";
import * as z from "zod";

export type CreditWalletRequest = {
    id: string;
    creditWalletRequest?: shared.CreditWalletRequest | undefined;
};

export type CreditWalletResponse = {};

/** @internal */
export namespace CreditWalletRequest$ {
    export const inboundSchema: z.ZodType<CreditWalletRequest, z.ZodTypeDef, unknown> = z
        .object({
            id: z.string(),
            CreditWalletRequest: shared.CreditWalletRequest$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                id: v.id,
                ...(v.CreditWalletRequest === undefined
                    ? null
                    : { creditWalletRequest: v.CreditWalletRequest }),
            };
        });

    export type Outbound = {
        id: string;
        CreditWalletRequest?: shared.CreditWalletRequest$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreditWalletRequest> = z
        .object({
            id: z.string(),
            creditWalletRequest: shared.CreditWalletRequest$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                id: v.id,
                ...(v.creditWalletRequest === undefined
                    ? null
                    : { CreditWalletRequest: v.creditWalletRequest }),
            };
        });
}

/** @internal */
export namespace CreditWalletResponse$ {
    export const inboundSchema: z.ZodType<CreditWalletResponse, z.ZodTypeDef, unknown> = z.object(
        {}
    );

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreditWalletResponse> = z.object(
        {}
    );
}
