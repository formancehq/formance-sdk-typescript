/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type DeletePolicyRequest = {
    /**
     * The policy ID.
     */
    policyID: string;
};

export type DeletePolicyResponse = {};

/** @internal */
export namespace DeletePolicyRequest$ {
    export const inboundSchema: z.ZodType<DeletePolicyRequest, z.ZodTypeDef, unknown> = z
        .object({
            policyID: z.string(),
        })
        .transform((v) => {
            return {
                policyID: v.policyID,
            };
        });

    export type Outbound = {
        policyID: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeletePolicyRequest> = z
        .object({
            policyID: z.string(),
        })
        .transform((v) => {
            return {
                policyID: v.policyID,
            };
        });
}

/** @internal */
export namespace DeletePolicyResponse$ {
    export const inboundSchema: z.ZodType<DeletePolicyResponse, z.ZodTypeDef, unknown> = z.object(
        {}
    );

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeletePolicyResponse> = z.object(
        {}
    );
}
