/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type V2RevertTransactionRequest = {
    /**
     * Name of the ledger.
     */
    ledger: string;
    /**
     * Transaction ID.
     */
    id: bigint;
    /**
     * Force revert
     */
    force?: boolean | undefined;
    /**
     * Revert transaction at effective date of the original tx
     */
    atEffectiveDate?: boolean | undefined;
};

/** @internal */
export namespace V2RevertTransactionRequest$ {
    export const inboundSchema: z.ZodType<V2RevertTransactionRequest, z.ZodTypeDef, unknown> = z
        .object({
            ledger: z.string(),
            id: z.number().transform((v) => BigInt(v)),
            force: z.boolean().optional(),
            atEffectiveDate: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ledger: v.ledger,
                id: v.id,
                ...(v.force === undefined ? null : { force: v.force }),
                ...(v.atEffectiveDate === undefined
                    ? null
                    : { atEffectiveDate: v.atEffectiveDate }),
            };
        });

    export type Outbound = {
        ledger: string;
        id: number;
        force?: boolean | undefined;
        atEffectiveDate?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2RevertTransactionRequest> = z
        .object({
            ledger: z.string(),
            id: z.bigint().transform((v) => Number(v)),
            force: z.boolean().optional(),
            atEffectiveDate: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ledger: v.ledger,
                id: v.id,
                ...(v.force === undefined ? null : { force: v.force }),
                ...(v.atEffectiveDate === undefined
                    ? null
                    : { atEffectiveDate: v.atEffectiveDate }),
            };
        });
}
