/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type V2DeleteTriggerRequest = {
    /**
     * The trigger id
     */
    triggerID: string;
};

export type V2DeleteTriggerResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export const V2DeleteTriggerRequest$inboundSchema: z.ZodType<
    V2DeleteTriggerRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    triggerID: z.string(),
});

/** @internal */
export type V2DeleteTriggerRequest$Outbound = {
    triggerID: string;
};

/** @internal */
export const V2DeleteTriggerRequest$outboundSchema: z.ZodType<
    V2DeleteTriggerRequest$Outbound,
    z.ZodTypeDef,
    V2DeleteTriggerRequest
> = z.object({
    triggerID: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V2DeleteTriggerRequest$ {
    /** @deprecated use `V2DeleteTriggerRequest$inboundSchema` instead. */
    export const inboundSchema = V2DeleteTriggerRequest$inboundSchema;
    /** @deprecated use `V2DeleteTriggerRequest$outboundSchema` instead. */
    export const outboundSchema = V2DeleteTriggerRequest$outboundSchema;
    /** @deprecated use `V2DeleteTriggerRequest$Outbound` instead. */
    export type Outbound = V2DeleteTriggerRequest$Outbound;
}

/** @internal */
export const V2DeleteTriggerResponse$inboundSchema: z.ZodType<
    V2DeleteTriggerResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        ContentType: z.string(),
        StatusCode: z.number().int(),
        RawResponse: z.instanceof(Response),
    })
    .transform((v) => {
        return remap$(v, {
            ContentType: "contentType",
            StatusCode: "statusCode",
            RawResponse: "rawResponse",
        });
    });

/** @internal */
export type V2DeleteTriggerResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
};

/** @internal */
export const V2DeleteTriggerResponse$outboundSchema: z.ZodType<
    V2DeleteTriggerResponse$Outbound,
    z.ZodTypeDef,
    V2DeleteTriggerResponse
> = z
    .object({
        contentType: z.string(),
        statusCode: z.number().int(),
        rawResponse: z.instanceof(Response).transform(() => {
            throw new Error("Response cannot be serialized");
        }),
    })
    .transform((v) => {
        return remap$(v, {
            contentType: "ContentType",
            statusCode: "StatusCode",
            rawResponse: "RawResponse",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V2DeleteTriggerResponse$ {
    /** @deprecated use `V2DeleteTriggerResponse$inboundSchema` instead. */
    export const inboundSchema = V2DeleteTriggerResponse$inboundSchema;
    /** @deprecated use `V2DeleteTriggerResponse$outboundSchema` instead. */
    export const outboundSchema = V2DeleteTriggerResponse$outboundSchema;
    /** @deprecated use `V2DeleteTriggerResponse$Outbound` instead. */
    export type Outbound = V2DeleteTriggerResponse$Outbound;
}
