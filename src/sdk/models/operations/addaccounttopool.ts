/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../shared";
import * as z from "zod";

export type AddAccountToPoolRequest = {
    /**
     * The pool ID.
     */
    poolId: string;
    addAccountToPoolRequest: shared.AddAccountToPoolRequest;
};

export type AddAccountToPoolResponse = {};

/** @internal */
export namespace AddAccountToPoolRequest$ {
    export const inboundSchema: z.ZodType<AddAccountToPoolRequest, z.ZodTypeDef, unknown> = z
        .object({
            poolId: z.string(),
            AddAccountToPoolRequest: shared.AddAccountToPoolRequest$.inboundSchema,
        })
        .transform((v) => {
            return {
                poolId: v.poolId,
                addAccountToPoolRequest: v.AddAccountToPoolRequest,
            };
        });

    export type Outbound = {
        poolId: string;
        AddAccountToPoolRequest: shared.AddAccountToPoolRequest$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddAccountToPoolRequest> = z
        .object({
            poolId: z.string(),
            addAccountToPoolRequest: shared.AddAccountToPoolRequest$.outboundSchema,
        })
        .transform((v) => {
            return {
                poolId: v.poolId,
                AddAccountToPoolRequest: v.addAccountToPoolRequest,
            };
        });
}

/** @internal */
export namespace AddAccountToPoolResponse$ {
    export const inboundSchema: z.ZodType<AddAccountToPoolResponse, z.ZodTypeDef, unknown> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddAccountToPoolResponse> =
        z.object({});
}
