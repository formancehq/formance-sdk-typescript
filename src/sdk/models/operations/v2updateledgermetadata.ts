/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type V2UpdateLedgerMetadataRequest = {
    /**
     * Name of the ledger.
     */
    ledger: string;
    requestBody?: Record<string, string> | undefined;
};

export type V2UpdateLedgerMetadataResponse = {};

/** @internal */
export namespace V2UpdateLedgerMetadataRequest$ {
    export const inboundSchema: z.ZodType<V2UpdateLedgerMetadataRequest, z.ZodTypeDef, unknown> = z
        .object({
            ledger: z.string(),
            RequestBody: z.record(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ledger: v.ledger,
                ...(v.RequestBody === undefined ? null : { requestBody: v.RequestBody }),
            };
        });

    export type Outbound = {
        ledger: string;
        RequestBody?: Record<string, string> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2UpdateLedgerMetadataRequest> =
        z
            .object({
                ledger: z.string(),
                requestBody: z.record(z.string()).optional(),
            })
            .transform((v) => {
                return {
                    ledger: v.ledger,
                    ...(v.requestBody === undefined ? null : { RequestBody: v.requestBody }),
                };
            });
}

/** @internal */
export namespace V2UpdateLedgerMetadataResponse$ {
    export const inboundSchema: z.ZodType<V2UpdateLedgerMetadataResponse, z.ZodTypeDef, unknown> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2UpdateLedgerMetadataResponse> =
        z.object({});
}
