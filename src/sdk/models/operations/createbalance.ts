/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type CreateBalanceRequest = {
    createBalanceRequest?: shared.CreateBalanceRequest | undefined;
    /**
     * Use an idempotency key
     */
    idempotencyKey?: string | undefined;
    id: string;
};

export type CreateBalanceResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * Created balance
     */
    createBalanceResponse?: shared.CreateBalanceResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export const CreateBalanceRequest$inboundSchema: z.ZodType<
    CreateBalanceRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        CreateBalanceRequest: shared.CreateBalanceRequest$inboundSchema.optional(),
        "Idempotency-Key": z.string().optional(),
        id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            CreateBalanceRequest: "createBalanceRequest",
            "Idempotency-Key": "idempotencyKey",
        });
    });

/** @internal */
export type CreateBalanceRequest$Outbound = {
    CreateBalanceRequest?: shared.CreateBalanceRequest$Outbound | undefined;
    "Idempotency-Key"?: string | undefined;
    id: string;
};

/** @internal */
export const CreateBalanceRequest$outboundSchema: z.ZodType<
    CreateBalanceRequest$Outbound,
    z.ZodTypeDef,
    CreateBalanceRequest
> = z
    .object({
        createBalanceRequest: shared.CreateBalanceRequest$outboundSchema.optional(),
        idempotencyKey: z.string().optional(),
        id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            createBalanceRequest: "CreateBalanceRequest",
            idempotencyKey: "Idempotency-Key",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateBalanceRequest$ {
    /** @deprecated use `CreateBalanceRequest$inboundSchema` instead. */
    export const inboundSchema = CreateBalanceRequest$inboundSchema;
    /** @deprecated use `CreateBalanceRequest$outboundSchema` instead. */
    export const outboundSchema = CreateBalanceRequest$outboundSchema;
    /** @deprecated use `CreateBalanceRequest$Outbound` instead. */
    export type Outbound = CreateBalanceRequest$Outbound;
}

/** @internal */
export const CreateBalanceResponse$inboundSchema: z.ZodType<
    CreateBalanceResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        ContentType: z.string(),
        CreateBalanceResponse: shared.CreateBalanceResponse$inboundSchema.optional(),
        StatusCode: z.number().int(),
        RawResponse: z.instanceof(Response),
    })
    .transform((v) => {
        return remap$(v, {
            ContentType: "contentType",
            CreateBalanceResponse: "createBalanceResponse",
            StatusCode: "statusCode",
            RawResponse: "rawResponse",
        });
    });

/** @internal */
export type CreateBalanceResponse$Outbound = {
    ContentType: string;
    CreateBalanceResponse?: shared.CreateBalanceResponse$Outbound | undefined;
    StatusCode: number;
    RawResponse: never;
};

/** @internal */
export const CreateBalanceResponse$outboundSchema: z.ZodType<
    CreateBalanceResponse$Outbound,
    z.ZodTypeDef,
    CreateBalanceResponse
> = z
    .object({
        contentType: z.string(),
        createBalanceResponse: shared.CreateBalanceResponse$outboundSchema.optional(),
        statusCode: z.number().int(),
        rawResponse: z.instanceof(Response).transform(() => {
            throw new Error("Response cannot be serialized");
        }),
    })
    .transform((v) => {
        return remap$(v, {
            contentType: "ContentType",
            createBalanceResponse: "CreateBalanceResponse",
            statusCode: "StatusCode",
            rawResponse: "RawResponse",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateBalanceResponse$ {
    /** @deprecated use `CreateBalanceResponse$inboundSchema` instead. */
    export const inboundSchema = CreateBalanceResponse$inboundSchema;
    /** @deprecated use `CreateBalanceResponse$outboundSchema` instead. */
    export const outboundSchema = CreateBalanceResponse$outboundSchema;
    /** @deprecated use `CreateBalanceResponse$Outbound` instead. */
    export type Outbound = CreateBalanceResponse$Outbound;
}
