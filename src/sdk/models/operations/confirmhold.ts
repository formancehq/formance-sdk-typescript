/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../shared";
import * as z from "zod";

export type ConfirmHoldRequest = {
    holdId: string;
    confirmHoldRequest?: shared.ConfirmHoldRequest | undefined;
};

export type ConfirmHoldResponse = {};

/** @internal */
export namespace ConfirmHoldRequest$ {
    export const inboundSchema: z.ZodType<ConfirmHoldRequest, z.ZodTypeDef, unknown> = z
        .object({
            hold_id: z.string(),
            ConfirmHoldRequest: shared.ConfirmHoldRequest$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                holdId: v.hold_id,
                ...(v.ConfirmHoldRequest === undefined
                    ? null
                    : { confirmHoldRequest: v.ConfirmHoldRequest }),
            };
        });

    export type Outbound = {
        hold_id: string;
        ConfirmHoldRequest?: shared.ConfirmHoldRequest$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ConfirmHoldRequest> = z
        .object({
            holdId: z.string(),
            confirmHoldRequest: shared.ConfirmHoldRequest$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                hold_id: v.holdId,
                ...(v.confirmHoldRequest === undefined
                    ? null
                    : { ConfirmHoldRequest: v.confirmHoldRequest }),
            };
        });
}

/** @internal */
export namespace ConfirmHoldResponse$ {
    export const inboundSchema: z.ZodType<ConfirmHoldResponse, z.ZodTypeDef, unknown> = z.object(
        {}
    );

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ConfirmHoldResponse> = z.object(
        {}
    );
}
