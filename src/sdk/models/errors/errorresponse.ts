/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyMetadata } from "../../../internal/utils";
import { ErrorsEnum } from "./errorsenum";
import { classToPlain, Expose } from "class-transformer";

export class ErrorResponse extends Error {
    @SpeakeasyMetadata()
    @Expose({ name: "details" })
    details?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "errorCode" })
    errorCode: ErrorsEnum;

    @SpeakeasyMetadata()
    @Expose({ name: "errorMessage" })
    errorMessage: string;

    constructor(err?: ErrorResponse) {
        super();
        if (err) {
            Object.assign(this, err);
            this.message = JSON.stringify(
                classToPlain(err, { exposeUnsetFields: false, excludeExtraneousValues: true })
            );
        }

        this.name = "ErrorResponse";
        Object.setPrototypeOf(this, ErrorResponse.prototype);
    }
}
