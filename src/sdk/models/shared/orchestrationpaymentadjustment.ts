/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OrchestrationPaymentStatus } from "./orchestrationpaymentstatus";
import { Expose, Transform, Type } from "class-transformer";

export class OrchestrationPaymentAdjustmentRaw extends SpeakeasyBase {}

export class OrchestrationPaymentAdjustment extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "absolute" })
    absolute: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "amount" })
    amount: number;

    @SpeakeasyMetadata()
    @Expose({ name: "date" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    date: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "raw" })
    @Type(() => OrchestrationPaymentAdjustmentRaw)
    raw: OrchestrationPaymentAdjustmentRaw;

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status: OrchestrationPaymentStatus;
}
