/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    WorkflowInstanceHistoryStage,
    WorkflowInstanceHistoryStage$,
} from "./workflowinstancehistorystage";
import * as z from "zod";

export type GetWorkflowInstanceHistoryStageResponse = {
    data: Array<WorkflowInstanceHistoryStage>;
};

/** @internal */
export namespace GetWorkflowInstanceHistoryStageResponse$ {
    export type Inbound = {
        data: Array<WorkflowInstanceHistoryStage$.Inbound>;
    };

    export const inboundSchema: z.ZodType<
        GetWorkflowInstanceHistoryStageResponse,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            data: z.array(WorkflowInstanceHistoryStage$.inboundSchema),
        })
        .transform((v) => {
            return {
                data: v.data,
            };
        });

    export type Outbound = {
        data: Array<WorkflowInstanceHistoryStage$.Outbound>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetWorkflowInstanceHistoryStageResponse
    > = z
        .object({
            data: z.array(WorkflowInstanceHistoryStage$.outboundSchema),
        })
        .transform((v) => {
            return {
                data: v.data,
            };
        });
}
