/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    Transaction,
    Transaction$inboundSchema,
    Transaction$Outbound,
    Transaction$outboundSchema,
} from "./transaction.js";
import * as z from "zod";

export type TransactionResponse = {
    data: Transaction;
};

/** @internal */
export const TransactionResponse$inboundSchema: z.ZodType<
    TransactionResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    data: Transaction$inboundSchema,
});

/** @internal */
export type TransactionResponse$Outbound = {
    data: Transaction$Outbound;
};

/** @internal */
export const TransactionResponse$outboundSchema: z.ZodType<
    TransactionResponse$Outbound,
    z.ZodTypeDef,
    TransactionResponse
> = z.object({
    data: Transaction$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TransactionResponse$ {
    /** @deprecated use `TransactionResponse$inboundSchema` instead. */
    export const inboundSchema = TransactionResponse$inboundSchema;
    /** @deprecated use `TransactionResponse$outboundSchema` instead. */
    export const outboundSchema = TransactionResponse$outboundSchema;
    /** @deprecated use `TransactionResponse$Outbound` instead. */
    export type Outbound = TransactionResponse$Outbound;
}
