/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type StageSendDestinationAccount = {
  id: string;
  ledger?: string | undefined;
};

/** @internal */
export const StageSendDestinationAccount$inboundSchema: z.ZodType<
  StageSendDestinationAccount,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  ledger: z.string().optional(),
});

/** @internal */
export type StageSendDestinationAccount$Outbound = {
  id: string;
  ledger?: string | undefined;
};

/** @internal */
export const StageSendDestinationAccount$outboundSchema: z.ZodType<
  StageSendDestinationAccount$Outbound,
  z.ZodTypeDef,
  StageSendDestinationAccount
> = z.object({
  id: z.string(),
  ledger: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StageSendDestinationAccount$ {
  /** @deprecated use `StageSendDestinationAccount$inboundSchema` instead. */
  export const inboundSchema = StageSendDestinationAccount$inboundSchema;
  /** @deprecated use `StageSendDestinationAccount$outboundSchema` instead. */
  export const outboundSchema = StageSendDestinationAccount$outboundSchema;
  /** @deprecated use `StageSendDestinationAccount$Outbound` instead. */
  export type Outbound = StageSendDestinationAccount$Outbound;
}

export function stageSendDestinationAccountToJSON(
  stageSendDestinationAccount: StageSendDestinationAccount,
): string {
  return JSON.stringify(
    StageSendDestinationAccount$outboundSchema.parse(
      stageSendDestinationAccount,
    ),
  );
}

export function stageSendDestinationAccountFromJSON(
  jsonString: string,
): SafeParseResult<StageSendDestinationAccount, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => StageSendDestinationAccount$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'StageSendDestinationAccount' from JSON`,
  );
}
