/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type CreateWalletRequest = {
    /**
     * Custom metadata to attach to this wallet.
     */
    metadata: Record<string, string>;
    name: string;
};

/** @internal */
export namespace CreateWalletRequest$ {
    export type Inbound = {
        metadata: Record<string, string>;
        name: string;
    };

    export const inboundSchema: z.ZodType<CreateWalletRequest, z.ZodTypeDef, Inbound> = z
        .object({
            metadata: z.record(z.string()),
            name: z.string(),
        })
        .transform((v) => {
            return {
                metadata: v.metadata,
                name: v.name,
            };
        });

    export type Outbound = {
        metadata: Record<string, string>;
        name: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateWalletRequest> = z
        .object({
            metadata: z.record(z.string()),
            name: z.string(),
        })
        .transform((v) => {
            return {
                metadata: v.metadata,
                name: v.name,
            };
        });
}
