/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V2AssetHolder = {
  assets: { [k: string]: bigint };
};

/** @internal */
export const V2AssetHolder$inboundSchema: z.ZodType<
  V2AssetHolder,
  z.ZodTypeDef,
  unknown
> = z.object({
  assets: z.record(z.number().transform(v => BigInt(v))),
});

/** @internal */
export type V2AssetHolder$Outbound = {
  assets: { [k: string]: number };
};

/** @internal */
export const V2AssetHolder$outboundSchema: z.ZodType<
  V2AssetHolder$Outbound,
  z.ZodTypeDef,
  V2AssetHolder
> = z.object({
  assets: z.record(z.bigint().transform(v => Number(v))),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V2AssetHolder$ {
  /** @deprecated use `V2AssetHolder$inboundSchema` instead. */
  export const inboundSchema = V2AssetHolder$inboundSchema;
  /** @deprecated use `V2AssetHolder$outboundSchema` instead. */
  export const outboundSchema = V2AssetHolder$outboundSchema;
  /** @deprecated use `V2AssetHolder$Outbound` instead. */
  export type Outbound = V2AssetHolder$Outbound;
}

export function v2AssetHolderToJSON(v2AssetHolder: V2AssetHolder): string {
  return JSON.stringify(V2AssetHolder$outboundSchema.parse(v2AssetHolder));
}

export function v2AssetHolderFromJSON(
  jsonString: string,
): SafeParseResult<V2AssetHolder, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V2AssetHolder$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V2AssetHolder' from JSON`,
  );
}
