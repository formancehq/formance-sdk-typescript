/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    ConfigInfo,
    ConfigInfo$inboundSchema,
    ConfigInfo$Outbound,
    ConfigInfo$outboundSchema,
} from "./configinfo.js";
import * as z from "zod";

export type ConfigInfoResponse = {
    data: ConfigInfo;
};

/** @internal */
export const ConfigInfoResponse$inboundSchema: z.ZodType<
    ConfigInfoResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    data: ConfigInfo$inboundSchema,
});

/** @internal */
export type ConfigInfoResponse$Outbound = {
    data: ConfigInfo$Outbound;
};

/** @internal */
export const ConfigInfoResponse$outboundSchema: z.ZodType<
    ConfigInfoResponse$Outbound,
    z.ZodTypeDef,
    ConfigInfoResponse
> = z.object({
    data: ConfigInfo$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConfigInfoResponse$ {
    /** @deprecated use `ConfigInfoResponse$inboundSchema` instead. */
    export const inboundSchema = ConfigInfoResponse$inboundSchema;
    /** @deprecated use `ConfigInfoResponse$outboundSchema` instead. */
    export const outboundSchema = ConfigInfoResponse$outboundSchema;
    /** @deprecated use `ConfigInfoResponse$Outbound` instead. */
    export type Outbound = ConfigInfoResponse$Outbound;
}
