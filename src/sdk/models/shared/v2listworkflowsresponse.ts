/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { V2Workflow, V2Workflow$ } from "./v2workflow";
import * as z from "zod";

export type V2ListWorkflowsResponseCursor = {
    data: Array<V2Workflow>;
    hasMore: boolean;
    next?: string | undefined;
    pageSize: number;
    previous?: string | undefined;
};

export type V2ListWorkflowsResponse = {
    cursor: V2ListWorkflowsResponseCursor;
};

/** @internal */
export namespace V2ListWorkflowsResponseCursor$ {
    export const inboundSchema: z.ZodType<V2ListWorkflowsResponseCursor, z.ZodTypeDef, unknown> =
        z.object({
            data: z.array(V2Workflow$.inboundSchema),
            hasMore: z.boolean(),
            next: z.string().optional(),
            pageSize: z.number().int(),
            previous: z.string().optional(),
        });

    export type Outbound = {
        data: Array<V2Workflow$.Outbound>;
        hasMore: boolean;
        next?: string | undefined;
        pageSize: number;
        previous?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2ListWorkflowsResponseCursor> =
        z.object({
            data: z.array(V2Workflow$.outboundSchema),
            hasMore: z.boolean(),
            next: z.string().optional(),
            pageSize: z.number().int(),
            previous: z.string().optional(),
        });
}

/** @internal */
export namespace V2ListWorkflowsResponse$ {
    export const inboundSchema: z.ZodType<V2ListWorkflowsResponse, z.ZodTypeDef, unknown> =
        z.object({
            cursor: z.lazy(() => V2ListWorkflowsResponseCursor$.inboundSchema),
        });

    export type Outbound = {
        cursor: V2ListWorkflowsResponseCursor$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2ListWorkflowsResponse> =
        z.object({
            cursor: z.lazy(() => V2ListWorkflowsResponseCursor$.outboundSchema),
        });
}
