/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    TransactionData,
    TransactionData$inboundSchema,
    TransactionData$Outbound,
    TransactionData$outboundSchema,
} from "./transactiondata.js";
import * as z from "zod";

export type Transactions = {
    transactions: Array<TransactionData>;
};

/** @internal */
export const Transactions$inboundSchema: z.ZodType<Transactions, z.ZodTypeDef, unknown> = z.object({
    transactions: z.array(TransactionData$inboundSchema),
});

/** @internal */
export type Transactions$Outbound = {
    transactions: Array<TransactionData$Outbound>;
};

/** @internal */
export const Transactions$outboundSchema: z.ZodType<
    Transactions$Outbound,
    z.ZodTypeDef,
    Transactions
> = z.object({
    transactions: z.array(TransactionData$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Transactions$ {
    /** @deprecated use `Transactions$inboundSchema` instead. */
    export const inboundSchema = Transactions$inboundSchema;
    /** @deprecated use `Transactions$outboundSchema` instead. */
    export const outboundSchema = Transactions$outboundSchema;
    /** @deprecated use `Transactions$Outbound` instead. */
    export type Outbound = Transactions$Outbound;
}
