/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type V2StageDelay = {
    duration?: string | undefined;
    until?: Date | undefined;
};

/** @internal */
export namespace V2StageDelay$ {
    export const inboundSchema: z.ZodType<V2StageDelay, z.ZodTypeDef, unknown> = z.object({
        duration: z.string().optional(),
        until: z
            .string()
            .datetime({ offset: true })
            .transform((v) => new Date(v))
            .optional(),
    });

    export type Outbound = {
        duration?: string | undefined;
        until?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2StageDelay> = z.object({
        duration: z.string().optional(),
        until: z
            .date()
            .transform((v) => v.toISOString())
            .optional(),
    });
}
