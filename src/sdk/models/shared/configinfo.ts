/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Config, Config$inboundSchema, Config$Outbound, Config$outboundSchema } from "./config.js";
import * as z from "zod";

export type ConfigInfo = {
    config: Config;
    server: string;
    version: string;
};

/** @internal */
export const ConfigInfo$inboundSchema: z.ZodType<ConfigInfo, z.ZodTypeDef, unknown> = z.object({
    config: Config$inboundSchema,
    server: z.string(),
    version: z.string(),
});

/** @internal */
export type ConfigInfo$Outbound = {
    config: Config$Outbound;
    server: string;
    version: string;
};

/** @internal */
export const ConfigInfo$outboundSchema: z.ZodType<ConfigInfo$Outbound, z.ZodTypeDef, ConfigInfo> =
    z.object({
        config: Config$outboundSchema,
        server: z.string(),
        version: z.string(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConfigInfo$ {
    /** @deprecated use `ConfigInfo$inboundSchema` instead. */
    export const inboundSchema = ConfigInfo$inboundSchema;
    /** @deprecated use `ConfigInfo$outboundSchema` instead. */
    export const outboundSchema = ConfigInfo$outboundSchema;
    /** @deprecated use `ConfigInfo$Outbound` instead. */
    export type Outbound = ConfigInfo$Outbound;
}
