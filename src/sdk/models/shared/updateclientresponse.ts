/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  Client,
  Client$inboundSchema,
  Client$Outbound,
  Client$outboundSchema,
} from "./client.js";

export type UpdateClientResponse = {
  data?: Client | undefined;
};

/** @internal */
export const UpdateClientResponse$inboundSchema: z.ZodType<
  UpdateClientResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: Client$inboundSchema.optional(),
});

/** @internal */
export type UpdateClientResponse$Outbound = {
  data?: Client$Outbound | undefined;
};

/** @internal */
export const UpdateClientResponse$outboundSchema: z.ZodType<
  UpdateClientResponse$Outbound,
  z.ZodTypeDef,
  UpdateClientResponse
> = z.object({
  data: Client$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateClientResponse$ {
  /** @deprecated use `UpdateClientResponse$inboundSchema` instead. */
  export const inboundSchema = UpdateClientResponse$inboundSchema;
  /** @deprecated use `UpdateClientResponse$outboundSchema` instead. */
  export const outboundSchema = UpdateClientResponse$outboundSchema;
  /** @deprecated use `UpdateClientResponse$Outbound` instead. */
  export type Outbound = UpdateClientResponse$Outbound;
}
