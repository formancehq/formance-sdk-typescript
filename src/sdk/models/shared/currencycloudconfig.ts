/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type CurrencyCloudConfig = {
    apiKey: string;
    /**
     * The endpoint to use for the API. Defaults to https://devapi.currencycloud.com
     */
    endpoint?: string | undefined;
    /**
     * Username of the API Key holder
     */
    loginID: string;
    name: string;
    /**
     * The frequency at which the connector will fetch transactions
     */
    pollingPeriod?: string | undefined;
};

/** @internal */
export namespace CurrencyCloudConfig$ {
    export const inboundSchema: z.ZodType<CurrencyCloudConfig, z.ZodTypeDef, unknown> = z.object({
        apiKey: z.string(),
        endpoint: z.string().optional(),
        loginID: z.string(),
        name: z.string(),
        pollingPeriod: z.string().default("120s"),
    });

    export type Outbound = {
        apiKey: string;
        endpoint?: string | undefined;
        loginID: string;
        name: string;
        pollingPeriod: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CurrencyCloudConfig> = z.object({
        apiKey: z.string(),
        endpoint: z.string().optional(),
        loginID: z.string(),
        name: z.string(),
        pollingPeriod: z.string().default("120s"),
    });
}
