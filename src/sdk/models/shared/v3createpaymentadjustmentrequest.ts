/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  V3PaymentStatusEnum,
  V3PaymentStatusEnum$inboundSchema,
  V3PaymentStatusEnum$outboundSchema,
} from "./v3paymentstatusenum.js";

export type V3CreatePaymentAdjustmentRequest = {
  amount?: bigint | undefined;
  asset?: string | undefined;
  createdAt: Date;
  metadata?: { [k: string]: string } | null | undefined;
  reference: string;
  status: V3PaymentStatusEnum;
};

/** @internal */
export const V3CreatePaymentAdjustmentRequest$inboundSchema: z.ZodType<
  V3CreatePaymentAdjustmentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  amount: z.number().transform(v => BigInt(v)).optional(),
  asset: z.string().optional(),
  createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  metadata: z.nullable(z.record(z.string())).optional(),
  reference: z.string(),
  status: V3PaymentStatusEnum$inboundSchema,
});

/** @internal */
export type V3CreatePaymentAdjustmentRequest$Outbound = {
  amount?: number | undefined;
  asset?: string | undefined;
  createdAt: string;
  metadata?: { [k: string]: string } | null | undefined;
  reference: string;
  status: string;
};

/** @internal */
export const V3CreatePaymentAdjustmentRequest$outboundSchema: z.ZodType<
  V3CreatePaymentAdjustmentRequest$Outbound,
  z.ZodTypeDef,
  V3CreatePaymentAdjustmentRequest
> = z.object({
  amount: z.bigint().transform(v => Number(v)).optional(),
  asset: z.string().optional(),
  createdAt: z.date().transform(v => v.toISOString()),
  metadata: z.nullable(z.record(z.string())).optional(),
  reference: z.string(),
  status: V3PaymentStatusEnum$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V3CreatePaymentAdjustmentRequest$ {
  /** @deprecated use `V3CreatePaymentAdjustmentRequest$inboundSchema` instead. */
  export const inboundSchema = V3CreatePaymentAdjustmentRequest$inboundSchema;
  /** @deprecated use `V3CreatePaymentAdjustmentRequest$outboundSchema` instead. */
  export const outboundSchema = V3CreatePaymentAdjustmentRequest$outboundSchema;
  /** @deprecated use `V3CreatePaymentAdjustmentRequest$Outbound` instead. */
  export type Outbound = V3CreatePaymentAdjustmentRequest$Outbound;
}

export function v3CreatePaymentAdjustmentRequestToJSON(
  v3CreatePaymentAdjustmentRequest: V3CreatePaymentAdjustmentRequest,
): string {
  return JSON.stringify(
    V3CreatePaymentAdjustmentRequest$outboundSchema.parse(
      v3CreatePaymentAdjustmentRequest,
    ),
  );
}

export function v3CreatePaymentAdjustmentRequestFromJSON(
  jsonString: string,
): SafeParseResult<V3CreatePaymentAdjustmentRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V3CreatePaymentAdjustmentRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V3CreatePaymentAdjustmentRequest' from JSON`,
  );
}
