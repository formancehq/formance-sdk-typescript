/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export enum V2ErrorsEnum {
    Internal = "INTERNAL",
    InsufficientFund = "INSUFFICIENT_FUND",
    Validation = "VALIDATION",
    Conflict = "CONFLICT",
    CompilationFailed = "COMPILATION_FAILED",
    MetadataOverride = "METADATA_OVERRIDE",
    NotFound = "NOT_FOUND",
    RevertOccurring = "REVERT_OCCURRING",
    AlreadyRevert = "ALREADY_REVERT",
    NoPostings = "NO_POSTINGS",
    LedgerNotFound = "LEDGER_NOT_FOUND",
}

/** @internal */
export const V2ErrorsEnum$inboundSchema: z.ZodNativeEnum<typeof V2ErrorsEnum> =
    z.nativeEnum(V2ErrorsEnum);

/** @internal */
export const V2ErrorsEnum$outboundSchema: z.ZodNativeEnum<typeof V2ErrorsEnum> =
    V2ErrorsEnum$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V2ErrorsEnum$ {
    /** @deprecated use `V2ErrorsEnum$inboundSchema` instead. */
    export const inboundSchema = V2ErrorsEnum$inboundSchema;
    /** @deprecated use `V2ErrorsEnum$outboundSchema` instead. */
    export const outboundSchema = V2ErrorsEnum$outboundSchema;
}
