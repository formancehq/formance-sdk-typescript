/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type WalletsVolume = {
    balance: bigint;
    input: bigint;
    output: bigint;
};

/** @internal */
export namespace WalletsVolume$ {
    export const inboundSchema: z.ZodType<WalletsVolume, z.ZodTypeDef, unknown> = z.object({
        balance: z.number().transform((v) => BigInt(v)),
        input: z.number().transform((v) => BigInt(v)),
        output: z.number().transform((v) => BigInt(v)),
    });

    export type Outbound = {
        balance: number;
        input: number;
        output: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WalletsVolume> = z.object({
        balance: z.bigint().transform((v) => Number(v)),
        input: z.bigint().transform((v) => Number(v)),
        output: z.bigint().transform((v) => Number(v)),
    });
}
