/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V2Stats = {
  accounts: number;
  transactions: bigint;
};

/** @internal */
export const V2Stats$inboundSchema: z.ZodType<V2Stats, z.ZodTypeDef, unknown> =
  z.object({
    accounts: z.number().int(),
    transactions: z.number().transform(v => BigInt(v)),
  });

/** @internal */
export type V2Stats$Outbound = {
  accounts: number;
  transactions: number;
};

/** @internal */
export const V2Stats$outboundSchema: z.ZodType<
  V2Stats$Outbound,
  z.ZodTypeDef,
  V2Stats
> = z.object({
  accounts: z.number().int(),
  transactions: z.bigint().transform(v => Number(v)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V2Stats$ {
  /** @deprecated use `V2Stats$inboundSchema` instead. */
  export const inboundSchema = V2Stats$inboundSchema;
  /** @deprecated use `V2Stats$outboundSchema` instead. */
  export const outboundSchema = V2Stats$outboundSchema;
  /** @deprecated use `V2Stats$Outbound` instead. */
  export type Outbound = V2Stats$Outbound;
}

export function v2StatsToJSON(v2Stats: V2Stats): string {
  return JSON.stringify(V2Stats$outboundSchema.parse(v2Stats));
}

export function v2StatsFromJSON(
  jsonString: string,
): SafeParseResult<V2Stats, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V2Stats$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V2Stats' from JSON`,
  );
}
