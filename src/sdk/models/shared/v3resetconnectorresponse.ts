/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V3ResetConnectorResponse = {
  /**
   * Since this call is asynchronous, the response will contain the ID of the task that was created to reset the connector. You can use the task API to check the status of the task and get the results.
   *
   * @remarks
   */
  data: string;
};

/** @internal */
export const V3ResetConnectorResponse$inboundSchema: z.ZodType<
  V3ResetConnectorResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.string(),
});

/** @internal */
export type V3ResetConnectorResponse$Outbound = {
  data: string;
};

/** @internal */
export const V3ResetConnectorResponse$outboundSchema: z.ZodType<
  V3ResetConnectorResponse$Outbound,
  z.ZodTypeDef,
  V3ResetConnectorResponse
> = z.object({
  data: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V3ResetConnectorResponse$ {
  /** @deprecated use `V3ResetConnectorResponse$inboundSchema` instead. */
  export const inboundSchema = V3ResetConnectorResponse$inboundSchema;
  /** @deprecated use `V3ResetConnectorResponse$outboundSchema` instead. */
  export const outboundSchema = V3ResetConnectorResponse$outboundSchema;
  /** @deprecated use `V3ResetConnectorResponse$Outbound` instead. */
  export type Outbound = V3ResetConnectorResponse$Outbound;
}

export function v3ResetConnectorResponseToJSON(
  v3ResetConnectorResponse: V3ResetConnectorResponse,
): string {
  return JSON.stringify(
    V3ResetConnectorResponse$outboundSchema.parse(v3ResetConnectorResponse),
  );
}

export function v3ResetConnectorResponseFromJSON(
  jsonString: string,
): SafeParseResult<V3ResetConnectorResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V3ResetConnectorResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V3ResetConnectorResponse' from JSON`,
  );
}
