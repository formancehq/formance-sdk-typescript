/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  Trigger,
  Trigger$inboundSchema,
  Trigger$Outbound,
  Trigger$outboundSchema,
} from "./trigger.js";

export type ReadTriggerResponse = {
  data: Trigger;
};

/** @internal */
export const ReadTriggerResponse$inboundSchema: z.ZodType<
  ReadTriggerResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: Trigger$inboundSchema,
});

/** @internal */
export type ReadTriggerResponse$Outbound = {
  data: Trigger$Outbound;
};

/** @internal */
export const ReadTriggerResponse$outboundSchema: z.ZodType<
  ReadTriggerResponse$Outbound,
  z.ZodTypeDef,
  ReadTriggerResponse
> = z.object({
  data: Trigger$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ReadTriggerResponse$ {
  /** @deprecated use `ReadTriggerResponse$inboundSchema` instead. */
  export const inboundSchema = ReadTriggerResponse$inboundSchema;
  /** @deprecated use `ReadTriggerResponse$outboundSchema` instead. */
  export const outboundSchema = ReadTriggerResponse$outboundSchema;
  /** @deprecated use `ReadTriggerResponse$Outbound` instead. */
  export type Outbound = ReadTriggerResponse$Outbound;
}
