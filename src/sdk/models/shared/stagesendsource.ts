/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { StageSendSourceAccount, StageSendSourceAccount$ } from "./stagesendsourceaccount";
import { StageSendSourcePayment, StageSendSourcePayment$ } from "./stagesendsourcepayment";
import { StageSendSourceWallet, StageSendSourceWallet$ } from "./stagesendsourcewallet";
import * as z from "zod";

export type StageSendSource = {
    account?: StageSendSourceAccount | undefined;
    payment?: StageSendSourcePayment | undefined;
    wallet?: StageSendSourceWallet | undefined;
};

/** @internal */
export namespace StageSendSource$ {
    export const inboundSchema: z.ZodType<StageSendSource, z.ZodTypeDef, unknown> = z.object({
        account: StageSendSourceAccount$.inboundSchema.optional(),
        payment: StageSendSourcePayment$.inboundSchema.optional(),
        wallet: StageSendSourceWallet$.inboundSchema.optional(),
    });

    export type Outbound = {
        account?: StageSendSourceAccount$.Outbound | undefined;
        payment?: StageSendSourcePayment$.Outbound | undefined;
        wallet?: StageSendSourceWallet$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, StageSendSource> = z.object({
        account: StageSendSourceAccount$.outboundSchema.optional(),
        payment: StageSendSourcePayment$.outboundSchema.optional(),
        wallet: StageSendSourceWallet$.outboundSchema.optional(),
    });
}
