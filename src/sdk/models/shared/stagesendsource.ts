/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  StageSendDestinationAccount,
  StageSendDestinationAccount$inboundSchema,
  StageSendDestinationAccount$Outbound,
  StageSendDestinationAccount$outboundSchema,
} from "./stagesenddestinationaccount.js";
import {
  StageSendDestinationWallet,
  StageSendDestinationWallet$inboundSchema,
  StageSendDestinationWallet$Outbound,
  StageSendDestinationWallet$outboundSchema,
} from "./stagesenddestinationwallet.js";
import {
  StageSendSourcePayment,
  StageSendSourcePayment$inboundSchema,
  StageSendSourcePayment$Outbound,
  StageSendSourcePayment$outboundSchema,
} from "./stagesendsourcepayment.js";

export type StageSendSource = {
  account?: StageSendDestinationAccount | undefined;
  payment?: StageSendSourcePayment | undefined;
  wallet?: StageSendDestinationWallet | undefined;
};

/** @internal */
export const StageSendSource$inboundSchema: z.ZodType<
  StageSendSource,
  z.ZodTypeDef,
  unknown
> = z.object({
  account: StageSendDestinationAccount$inboundSchema.optional(),
  payment: StageSendSourcePayment$inboundSchema.optional(),
  wallet: StageSendDestinationWallet$inboundSchema.optional(),
});

/** @internal */
export type StageSendSource$Outbound = {
  account?: StageSendDestinationAccount$Outbound | undefined;
  payment?: StageSendSourcePayment$Outbound | undefined;
  wallet?: StageSendDestinationWallet$Outbound | undefined;
};

/** @internal */
export const StageSendSource$outboundSchema: z.ZodType<
  StageSendSource$Outbound,
  z.ZodTypeDef,
  StageSendSource
> = z.object({
  account: StageSendDestinationAccount$outboundSchema.optional(),
  payment: StageSendSourcePayment$outboundSchema.optional(),
  wallet: StageSendDestinationWallet$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StageSendSource$ {
  /** @deprecated use `StageSendSource$inboundSchema` instead. */
  export const inboundSchema = StageSendSource$inboundSchema;
  /** @deprecated use `StageSendSource$outboundSchema` instead. */
  export const outboundSchema = StageSendSource$outboundSchema;
  /** @deprecated use `StageSendSource$Outbound` instead. */
  export type Outbound = StageSendSource$Outbound;
}

export function stageSendSourceToJSON(
  stageSendSource: StageSendSource,
): string {
  return JSON.stringify(StageSendSource$outboundSchema.parse(stageSendSource));
}

export function stageSendSourceFromJSON(
  jsonString: string,
): SafeParseResult<StageSendSource, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => StageSendSource$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'StageSendSource' from JSON`,
  );
}
