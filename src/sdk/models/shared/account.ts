/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type Account = {
    address: string;
    metadata?: { [k: string]: any } | undefined;
    type?: string | undefined;
};

/** @internal */
export namespace Account$ {
    export const inboundSchema: z.ZodType<Account, z.ZodTypeDef, unknown> = z.object({
        address: z.string(),
        metadata: z.record(z.any()).optional(),
        type: z.string().optional(),
    });

    export type Outbound = {
        address: string;
        metadata?: { [k: string]: any } | undefined;
        type?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Account> = z.object({
        address: z.string(),
        metadata: z.record(z.any()).optional(),
        type: z.string().optional(),
    });
}
