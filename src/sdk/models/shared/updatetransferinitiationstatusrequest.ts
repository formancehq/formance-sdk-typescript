/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export enum Status {
    WaitingForValidation = "WAITING_FOR_VALIDATION",
    Processing = "PROCESSING",
    Processed = "PROCESSED",
    Failed = "FAILED",
    Rejected = "REJECTED",
    Validated = "VALIDATED",
}

export type UpdateTransferInitiationStatusRequest = {
    status: Status;
};

/** @internal */
export const Status$ = z.nativeEnum(Status);

/** @internal */
export namespace UpdateTransferInitiationStatusRequest$ {
    export type Inbound = {
        status: Status;
    };

    export const inboundSchema: z.ZodType<
        UpdateTransferInitiationStatusRequest,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            status: Status$,
        })
        .transform((v) => {
            return {
                status: v.status,
            };
        });

    export type Outbound = {
        status: Status;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        UpdateTransferInitiationStatusRequest
    > = z
        .object({
            status: Status$,
        })
        .transform((v) => {
            return {
                status: v.status,
            };
        });
}
