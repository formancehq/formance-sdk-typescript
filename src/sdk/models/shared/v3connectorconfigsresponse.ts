/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V3ConnectorConfigsResponseKey = {
  dataType: string;
  required: boolean;
};

export type V3ConnectorConfigsResponseConnector = {
  key: V3ConnectorConfigsResponseKey;
};

export type V3ConnectorConfigsResponseData = {
  connector: V3ConnectorConfigsResponseConnector;
};

export type V3ConnectorConfigsResponse = {
  data: V3ConnectorConfigsResponseData;
};

/** @internal */
export const V3ConnectorConfigsResponseKey$inboundSchema: z.ZodType<
  V3ConnectorConfigsResponseKey,
  z.ZodTypeDef,
  unknown
> = z.object({
  dataType: z.string(),
  required: z.boolean(),
});

/** @internal */
export type V3ConnectorConfigsResponseKey$Outbound = {
  dataType: string;
  required: boolean;
};

/** @internal */
export const V3ConnectorConfigsResponseKey$outboundSchema: z.ZodType<
  V3ConnectorConfigsResponseKey$Outbound,
  z.ZodTypeDef,
  V3ConnectorConfigsResponseKey
> = z.object({
  dataType: z.string(),
  required: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V3ConnectorConfigsResponseKey$ {
  /** @deprecated use `V3ConnectorConfigsResponseKey$inboundSchema` instead. */
  export const inboundSchema = V3ConnectorConfigsResponseKey$inboundSchema;
  /** @deprecated use `V3ConnectorConfigsResponseKey$outboundSchema` instead. */
  export const outboundSchema = V3ConnectorConfigsResponseKey$outboundSchema;
  /** @deprecated use `V3ConnectorConfigsResponseKey$Outbound` instead. */
  export type Outbound = V3ConnectorConfigsResponseKey$Outbound;
}

export function v3ConnectorConfigsResponseKeyToJSON(
  v3ConnectorConfigsResponseKey: V3ConnectorConfigsResponseKey,
): string {
  return JSON.stringify(
    V3ConnectorConfigsResponseKey$outboundSchema.parse(
      v3ConnectorConfigsResponseKey,
    ),
  );
}

export function v3ConnectorConfigsResponseKeyFromJSON(
  jsonString: string,
): SafeParseResult<V3ConnectorConfigsResponseKey, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V3ConnectorConfigsResponseKey$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V3ConnectorConfigsResponseKey' from JSON`,
  );
}

/** @internal */
export const V3ConnectorConfigsResponseConnector$inboundSchema: z.ZodType<
  V3ConnectorConfigsResponseConnector,
  z.ZodTypeDef,
  unknown
> = z.object({
  key: z.lazy(() => V3ConnectorConfigsResponseKey$inboundSchema),
});

/** @internal */
export type V3ConnectorConfigsResponseConnector$Outbound = {
  key: V3ConnectorConfigsResponseKey$Outbound;
};

/** @internal */
export const V3ConnectorConfigsResponseConnector$outboundSchema: z.ZodType<
  V3ConnectorConfigsResponseConnector$Outbound,
  z.ZodTypeDef,
  V3ConnectorConfigsResponseConnector
> = z.object({
  key: z.lazy(() => V3ConnectorConfigsResponseKey$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V3ConnectorConfigsResponseConnector$ {
  /** @deprecated use `V3ConnectorConfigsResponseConnector$inboundSchema` instead. */
  export const inboundSchema =
    V3ConnectorConfigsResponseConnector$inboundSchema;
  /** @deprecated use `V3ConnectorConfigsResponseConnector$outboundSchema` instead. */
  export const outboundSchema =
    V3ConnectorConfigsResponseConnector$outboundSchema;
  /** @deprecated use `V3ConnectorConfigsResponseConnector$Outbound` instead. */
  export type Outbound = V3ConnectorConfigsResponseConnector$Outbound;
}

export function v3ConnectorConfigsResponseConnectorToJSON(
  v3ConnectorConfigsResponseConnector: V3ConnectorConfigsResponseConnector,
): string {
  return JSON.stringify(
    V3ConnectorConfigsResponseConnector$outboundSchema.parse(
      v3ConnectorConfigsResponseConnector,
    ),
  );
}

export function v3ConnectorConfigsResponseConnectorFromJSON(
  jsonString: string,
): SafeParseResult<V3ConnectorConfigsResponseConnector, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      V3ConnectorConfigsResponseConnector$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V3ConnectorConfigsResponseConnector' from JSON`,
  );
}

/** @internal */
export const V3ConnectorConfigsResponseData$inboundSchema: z.ZodType<
  V3ConnectorConfigsResponseData,
  z.ZodTypeDef,
  unknown
> = z.object({
  connector: z.lazy(() => V3ConnectorConfigsResponseConnector$inboundSchema),
});

/** @internal */
export type V3ConnectorConfigsResponseData$Outbound = {
  connector: V3ConnectorConfigsResponseConnector$Outbound;
};

/** @internal */
export const V3ConnectorConfigsResponseData$outboundSchema: z.ZodType<
  V3ConnectorConfigsResponseData$Outbound,
  z.ZodTypeDef,
  V3ConnectorConfigsResponseData
> = z.object({
  connector: z.lazy(() => V3ConnectorConfigsResponseConnector$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V3ConnectorConfigsResponseData$ {
  /** @deprecated use `V3ConnectorConfigsResponseData$inboundSchema` instead. */
  export const inboundSchema = V3ConnectorConfigsResponseData$inboundSchema;
  /** @deprecated use `V3ConnectorConfigsResponseData$outboundSchema` instead. */
  export const outboundSchema = V3ConnectorConfigsResponseData$outboundSchema;
  /** @deprecated use `V3ConnectorConfigsResponseData$Outbound` instead. */
  export type Outbound = V3ConnectorConfigsResponseData$Outbound;
}

export function v3ConnectorConfigsResponseDataToJSON(
  v3ConnectorConfigsResponseData: V3ConnectorConfigsResponseData,
): string {
  return JSON.stringify(
    V3ConnectorConfigsResponseData$outboundSchema.parse(
      v3ConnectorConfigsResponseData,
    ),
  );
}

export function v3ConnectorConfigsResponseDataFromJSON(
  jsonString: string,
): SafeParseResult<V3ConnectorConfigsResponseData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V3ConnectorConfigsResponseData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V3ConnectorConfigsResponseData' from JSON`,
  );
}

/** @internal */
export const V3ConnectorConfigsResponse$inboundSchema: z.ZodType<
  V3ConnectorConfigsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => V3ConnectorConfigsResponseData$inboundSchema),
});

/** @internal */
export type V3ConnectorConfigsResponse$Outbound = {
  data: V3ConnectorConfigsResponseData$Outbound;
};

/** @internal */
export const V3ConnectorConfigsResponse$outboundSchema: z.ZodType<
  V3ConnectorConfigsResponse$Outbound,
  z.ZodTypeDef,
  V3ConnectorConfigsResponse
> = z.object({
  data: z.lazy(() => V3ConnectorConfigsResponseData$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V3ConnectorConfigsResponse$ {
  /** @deprecated use `V3ConnectorConfigsResponse$inboundSchema` instead. */
  export const inboundSchema = V3ConnectorConfigsResponse$inboundSchema;
  /** @deprecated use `V3ConnectorConfigsResponse$outboundSchema` instead. */
  export const outboundSchema = V3ConnectorConfigsResponse$outboundSchema;
  /** @deprecated use `V3ConnectorConfigsResponse$Outbound` instead. */
  export type Outbound = V3ConnectorConfigsResponse$Outbound;
}

export function v3ConnectorConfigsResponseToJSON(
  v3ConnectorConfigsResponse: V3ConnectorConfigsResponse,
): string {
  return JSON.stringify(
    V3ConnectorConfigsResponse$outboundSchema.parse(v3ConnectorConfigsResponse),
  );
}

export function v3ConnectorConfigsResponseFromJSON(
  jsonString: string,
): SafeParseResult<V3ConnectorConfigsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V3ConnectorConfigsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V3ConnectorConfigsResponse' from JSON`,
  );
}
