/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  V3Schedule,
  V3Schedule$inboundSchema,
  V3Schedule$Outbound,
  V3Schedule$outboundSchema,
} from "./v3schedule.js";

export type V3ConnectorScheduleResponse = {
  data: V3Schedule;
};

/** @internal */
export const V3ConnectorScheduleResponse$inboundSchema: z.ZodType<
  V3ConnectorScheduleResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: V3Schedule$inboundSchema,
});

/** @internal */
export type V3ConnectorScheduleResponse$Outbound = {
  data: V3Schedule$Outbound;
};

/** @internal */
export const V3ConnectorScheduleResponse$outboundSchema: z.ZodType<
  V3ConnectorScheduleResponse$Outbound,
  z.ZodTypeDef,
  V3ConnectorScheduleResponse
> = z.object({
  data: V3Schedule$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V3ConnectorScheduleResponse$ {
  /** @deprecated use `V3ConnectorScheduleResponse$inboundSchema` instead. */
  export const inboundSchema = V3ConnectorScheduleResponse$inboundSchema;
  /** @deprecated use `V3ConnectorScheduleResponse$outboundSchema` instead. */
  export const outboundSchema = V3ConnectorScheduleResponse$outboundSchema;
  /** @deprecated use `V3ConnectorScheduleResponse$Outbound` instead. */
  export type Outbound = V3ConnectorScheduleResponse$Outbound;
}

export function v3ConnectorScheduleResponseToJSON(
  v3ConnectorScheduleResponse: V3ConnectorScheduleResponse,
): string {
  return JSON.stringify(
    V3ConnectorScheduleResponse$outboundSchema.parse(
      v3ConnectorScheduleResponse,
    ),
  );
}

export function v3ConnectorScheduleResponseFromJSON(
  jsonString: string,
): SafeParseResult<V3ConnectorScheduleResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V3ConnectorScheduleResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V3ConnectorScheduleResponse' from JSON`,
  );
}
