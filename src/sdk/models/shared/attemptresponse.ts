/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    Attempt,
    Attempt$inboundSchema,
    Attempt$Outbound,
    Attempt$outboundSchema,
} from "./attempt.js";
import * as z from "zod";

export type AttemptResponse = {
    data: Attempt;
};

/** @internal */
export const AttemptResponse$inboundSchema: z.ZodType<AttemptResponse, z.ZodTypeDef, unknown> =
    z.object({
        data: Attempt$inboundSchema,
    });

/** @internal */
export type AttemptResponse$Outbound = {
    data: Attempt$Outbound;
};

/** @internal */
export const AttemptResponse$outboundSchema: z.ZodType<
    AttemptResponse$Outbound,
    z.ZodTypeDef,
    AttemptResponse
> = z.object({
    data: Attempt$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AttemptResponse$ {
    /** @deprecated use `AttemptResponse$inboundSchema` instead. */
    export const inboundSchema = AttemptResponse$inboundSchema;
    /** @deprecated use `AttemptResponse$outboundSchema` instead. */
    export const outboundSchema = AttemptResponse$outboundSchema;
    /** @deprecated use `AttemptResponse$Outbound` instead. */
    export type Outbound = AttemptResponse$Outbound;
}
