/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type V2VolumesWithBalance = {
    account: string;
    asset: string;
    balance: bigint;
    input: bigint;
    output: bigint;
};

/** @internal */
export namespace V2VolumesWithBalance$ {
    export const inboundSchema: z.ZodType<V2VolumesWithBalance, z.ZodTypeDef, unknown> = z.object({
        account: z.string(),
        asset: z.string(),
        balance: z.number().transform((v) => BigInt(v)),
        input: z.number().transform((v) => BigInt(v)),
        output: z.number().transform((v) => BigInt(v)),
    });

    export type Outbound = {
        account: string;
        asset: string;
        balance: number;
        input: number;
        output: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2VolumesWithBalance> = z.object(
        {
            account: z.string(),
            asset: z.string(),
            balance: z.bigint().transform((v) => Number(v)),
            input: z.bigint().transform((v) => Number(v)),
            output: z.bigint().transform((v) => Number(v)),
        }
    );
}
