/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    V2Monetary,
    V2Monetary$inboundSchema,
    V2Monetary$Outbound,
    V2Monetary$outboundSchema,
} from "./v2monetary.js";
import {
    V2Subject,
    V2Subject$inboundSchema,
    V2Subject$Outbound,
    V2Subject$outboundSchema,
} from "./v2subject.js";
import * as z from "zod";

export type V2DebitWalletRequest = {
    amount: V2Monetary;
    balances?: Array<string> | undefined;
    description?: string | undefined;
    destination?: V2Subject | undefined;
    /**
     * Metadata associated with the wallet.
     */
    metadata: { [k: string]: string };
    /**
     * Set to true to create a pending hold. If false, the wallet will be debited immediately.
     */
    pending?: boolean | undefined;
    /**
     * cannot be used in conjunction with `pending` property
     */
    timestamp?: Date | undefined;
};

/** @internal */
export const V2DebitWalletRequest$inboundSchema: z.ZodType<
    V2DebitWalletRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    amount: V2Monetary$inboundSchema,
    balances: z.array(z.string()).optional(),
    description: z.string().optional(),
    destination: V2Subject$inboundSchema.optional(),
    metadata: z.record(z.string()),
    pending: z.boolean().optional(),
    timestamp: z
        .string()
        .datetime({ offset: true })
        .transform((v) => new Date(v))
        .optional(),
});

/** @internal */
export type V2DebitWalletRequest$Outbound = {
    amount: V2Monetary$Outbound;
    balances?: Array<string> | undefined;
    description?: string | undefined;
    destination?: V2Subject$Outbound | undefined;
    metadata: { [k: string]: string };
    pending?: boolean | undefined;
    timestamp?: string | undefined;
};

/** @internal */
export const V2DebitWalletRequest$outboundSchema: z.ZodType<
    V2DebitWalletRequest$Outbound,
    z.ZodTypeDef,
    V2DebitWalletRequest
> = z.object({
    amount: V2Monetary$outboundSchema,
    balances: z.array(z.string()).optional(),
    description: z.string().optional(),
    destination: V2Subject$outboundSchema.optional(),
    metadata: z.record(z.string()),
    pending: z.boolean().optional(),
    timestamp: z
        .date()
        .transform((v) => v.toISOString())
        .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V2DebitWalletRequest$ {
    /** @deprecated use `V2DebitWalletRequest$inboundSchema` instead. */
    export const inboundSchema = V2DebitWalletRequest$inboundSchema;
    /** @deprecated use `V2DebitWalletRequest$outboundSchema` instead. */
    export const outboundSchema = V2DebitWalletRequest$outboundSchema;
    /** @deprecated use `V2DebitWalletRequest$Outbound` instead. */
    export type Outbound = V2DebitWalletRequest$Outbound;
}
