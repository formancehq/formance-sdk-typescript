/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Version, Version$ } from "./version";
import * as z from "zod";

export type GetVersionsResponse = {
    env: string;
    region: string;
    versions: Array<Version>;
};

/** @internal */
export namespace GetVersionsResponse$ {
    export const inboundSchema: z.ZodType<GetVersionsResponse, z.ZodTypeDef, unknown> = z.object({
        env: z.string(),
        region: z.string(),
        versions: z.array(Version$.inboundSchema),
    });

    export type Outbound = {
        env: string;
        region: string;
        versions: Array<Version$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetVersionsResponse> = z.object({
        env: z.string(),
        region: z.string(),
        versions: z.array(Version$.outboundSchema),
    });
}
