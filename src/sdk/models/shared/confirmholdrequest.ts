/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type ConfirmHoldRequest = {
    /**
     * Define the amount to transfer.
     */
    amount?: bigint | undefined;
    /**
     * Define a final confirmation. Remaining funds will be returned to the wallet.
     */
    final?: boolean | undefined;
};

/** @internal */
export namespace ConfirmHoldRequest$ {
    export const inboundSchema: z.ZodType<ConfirmHoldRequest, z.ZodTypeDef, unknown> = z.object({
        amount: z
            .number()
            .transform((v) => BigInt(v))
            .optional(),
        final: z.boolean().optional(),
    });

    export type Outbound = {
        amount?: number | undefined;
        final?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ConfirmHoldRequest> = z.object({
        amount: z
            .bigint()
            .transform((v) => Number(v))
            .optional(),
        final: z.boolean().optional(),
    });
}
