/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type ReverseTransferInitiationRequest = {
    amount: bigint;
    asset: string;
    description: string;
    metadata: Record<string, string> | null;
    reference: string;
};

/** @internal */
export namespace ReverseTransferInitiationRequest$ {
    export type Inbound = {
        amount: number;
        asset: string;
        description: string;
        metadata: Record<string, string> | null;
        reference: string;
    };

    export const inboundSchema: z.ZodType<ReverseTransferInitiationRequest, z.ZodTypeDef, Inbound> =
        z
            .object({
                amount: z.number().transform((v) => BigInt(v)),
                asset: z.string(),
                description: z.string(),
                metadata: z.nullable(z.record(z.string())),
                reference: z.string(),
            })
            .transform((v) => {
                return {
                    amount: v.amount,
                    asset: v.asset,
                    description: v.description,
                    metadata: v.metadata,
                    reference: v.reference,
                };
            });

    export type Outbound = {
        amount: number;
        asset: string;
        description: string;
        metadata: Record<string, string> | null;
        reference: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ReverseTransferInitiationRequest
    > = z
        .object({
            amount: z.bigint().transform((v) => Number(v)),
            asset: z.string(),
            description: z.string(),
            metadata: z.nullable(z.record(z.string())),
            reference: z.string(),
        })
        .transform((v) => {
            return {
                amount: v.amount,
                asset: v.asset,
                description: v.description,
                metadata: v.metadata,
                reference: v.reference,
            };
        });
}
