/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type ReverseTransferInitiationRequest = {
    amount: bigint;
    asset: string;
    description: string;
    metadata: { [k: string]: string } | null;
    reference: string;
};

/** @internal */
export namespace ReverseTransferInitiationRequest$ {
    export const inboundSchema: z.ZodType<ReverseTransferInitiationRequest, z.ZodTypeDef, unknown> =
        z.object({
            amount: z.number().transform((v) => BigInt(v)),
            asset: z.string(),
            description: z.string(),
            metadata: z.nullable(z.record(z.string())),
            reference: z.string(),
        });

    export type Outbound = {
        amount: number;
        asset: string;
        description: string;
        metadata: { [k: string]: string } | null;
        reference: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ReverseTransferInitiationRequest
    > = z.object({
        amount: z.bigint().transform((v) => Number(v)),
        asset: z.string(),
        description: z.string(),
        metadata: z.nullable(z.record(z.string())),
        reference: z.string(),
    });
}
