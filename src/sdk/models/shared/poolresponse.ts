/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Pool, Pool$inboundSchema, Pool$Outbound, Pool$outboundSchema } from "./pool.js";
import * as z from "zod";

export type PoolResponse = {
    data: Pool;
};

/** @internal */
export const PoolResponse$inboundSchema: z.ZodType<PoolResponse, z.ZodTypeDef, unknown> = z.object({
    data: Pool$inboundSchema,
});

/** @internal */
export type PoolResponse$Outbound = {
    data: Pool$Outbound;
};

/** @internal */
export const PoolResponse$outboundSchema: z.ZodType<
    PoolResponse$Outbound,
    z.ZodTypeDef,
    PoolResponse
> = z.object({
    data: Pool$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PoolResponse$ {
    /** @deprecated use `PoolResponse$inboundSchema` instead. */
    export const inboundSchema = PoolResponse$inboundSchema;
    /** @deprecated use `PoolResponse$outboundSchema` instead. */
    export const outboundSchema = PoolResponse$outboundSchema;
    /** @deprecated use `PoolResponse$Outbound` instead. */
    export type Outbound = PoolResponse$Outbound;
}
