/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type DummyPayConfig = {
    directory: string;
    /**
     * The frequency at which the connector will try to fetch new payment objects from the directory
     */
    filePollingPeriod?: string | undefined;
    name: string;
    numberOfAccountsPreGenerated?: number | undefined;
    numberOfPaymentsPreGenerated?: number | undefined;
    prefixFileToIngest?: string | undefined;
};

/** @internal */
export namespace DummyPayConfig$ {
    export const inboundSchema: z.ZodType<DummyPayConfig, z.ZodTypeDef, unknown> = z.object({
        directory: z.string(),
        filePollingPeriod: z.string().default("10s"),
        name: z.string(),
        numberOfAccountsPreGenerated: z.number().int().optional(),
        numberOfPaymentsPreGenerated: z.number().int().optional(),
        prefixFileToIngest: z.string().optional(),
    });

    export type Outbound = {
        directory: string;
        filePollingPeriod: string;
        name: string;
        numberOfAccountsPreGenerated?: number | undefined;
        numberOfPaymentsPreGenerated?: number | undefined;
        prefixFileToIngest?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DummyPayConfig> = z.object({
        directory: z.string(),
        filePollingPeriod: z.string().default("10s"),
        name: z.string(),
        numberOfAccountsPreGenerated: z.number().int().optional(),
        numberOfPaymentsPreGenerated: z.number().int().optional(),
        prefixFileToIngest: z.string().optional(),
    });
}
