/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V3CreatePoolRequest = {
  accountIDs: Array<string>;
  name: string;
};

/** @internal */
export const V3CreatePoolRequest$inboundSchema: z.ZodType<
  V3CreatePoolRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  accountIDs: z.array(z.string()),
  name: z.string(),
});

/** @internal */
export type V3CreatePoolRequest$Outbound = {
  accountIDs: Array<string>;
  name: string;
};

/** @internal */
export const V3CreatePoolRequest$outboundSchema: z.ZodType<
  V3CreatePoolRequest$Outbound,
  z.ZodTypeDef,
  V3CreatePoolRequest
> = z.object({
  accountIDs: z.array(z.string()),
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V3CreatePoolRequest$ {
  /** @deprecated use `V3CreatePoolRequest$inboundSchema` instead. */
  export const inboundSchema = V3CreatePoolRequest$inboundSchema;
  /** @deprecated use `V3CreatePoolRequest$outboundSchema` instead. */
  export const outboundSchema = V3CreatePoolRequest$outboundSchema;
  /** @deprecated use `V3CreatePoolRequest$Outbound` instead. */
  export type Outbound = V3CreatePoolRequest$Outbound;
}

export function v3CreatePoolRequestToJSON(
  v3CreatePoolRequest: V3CreatePoolRequest,
): string {
  return JSON.stringify(
    V3CreatePoolRequest$outboundSchema.parse(v3CreatePoolRequest),
  );
}

export function v3CreatePoolRequestFromJSON(
  jsonString: string,
): SafeParseResult<V3CreatePoolRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V3CreatePoolRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V3CreatePoolRequest' from JSON`,
  );
}
