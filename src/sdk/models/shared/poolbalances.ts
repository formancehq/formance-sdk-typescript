/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { PoolBalance, PoolBalance$ } from "./poolbalance";
import { z } from "zod";

export type PoolBalances = {
    balances: Array<PoolBalance>;
};

/** @internal */
export namespace PoolBalances$ {
    export type Inbound = {
        balances: Array<PoolBalance$.Inbound>;
    };

    export const inboundSchema: z.ZodType<PoolBalances, z.ZodTypeDef, Inbound> = z
        .object({
            balances: z.array(PoolBalance$.inboundSchema),
        })
        .transform((v) => {
            return {
                balances: v.balances,
            };
        });

    export type Outbound = {
        balances: Array<PoolBalance$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PoolBalances> = z
        .object({
            balances: z.array(PoolBalance$.outboundSchema),
        })
        .transform((v) => {
            return {
                balances: v.balances,
            };
        });
}
