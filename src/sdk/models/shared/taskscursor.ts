/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  TaskBankingCircle,
  TaskBankingCircle$inboundSchema,
  TaskBankingCircle$Outbound,
  TaskBankingCircle$outboundSchema,
} from "./taskbankingcircle.js";
import {
  TaskCurrencyCloud,
  TaskCurrencyCloud$inboundSchema,
  TaskCurrencyCloud$Outbound,
  TaskCurrencyCloud$outboundSchema,
} from "./taskcurrencycloud.js";
import {
  TaskDummyPay,
  TaskDummyPay$inboundSchema,
  TaskDummyPay$Outbound,
  TaskDummyPay$outboundSchema,
} from "./taskdummypay.js";
import {
  TaskMangoPay,
  TaskMangoPay$inboundSchema,
  TaskMangoPay$Outbound,
  TaskMangoPay$outboundSchema,
} from "./taskmangopay.js";
import {
  TaskModulr,
  TaskModulr$inboundSchema,
  TaskModulr$Outbound,
  TaskModulr$outboundSchema,
} from "./taskmodulr.js";
import {
  TaskMoneycorp,
  TaskMoneycorp$inboundSchema,
  TaskMoneycorp$Outbound,
  TaskMoneycorp$outboundSchema,
} from "./taskmoneycorp.js";
import {
  TaskStripe,
  TaskStripe$inboundSchema,
  TaskStripe$Outbound,
  TaskStripe$outboundSchema,
} from "./taskstripe.js";
import {
  TaskWise,
  TaskWise$inboundSchema,
  TaskWise$Outbound,
  TaskWise$outboundSchema,
} from "./taskwise.js";

export type TasksCursorData =
  | TaskStripe
  | TaskWise
  | TaskCurrencyCloud
  | TaskDummyPay
  | TaskModulr
  | TaskBankingCircle
  | TaskMangoPay
  | TaskMoneycorp;

export type TasksCursorCursor = {
  data: Array<
    | TaskStripe
    | TaskWise
    | TaskCurrencyCloud
    | TaskDummyPay
    | TaskModulr
    | TaskBankingCircle
    | TaskMangoPay
    | TaskMoneycorp
  >;
  hasMore: boolean;
  next?: string | undefined;
  pageSize: number;
  previous?: string | undefined;
};

export type TasksCursor = {
  cursor: TasksCursorCursor;
};

/** @internal */
export const TasksCursorData$inboundSchema: z.ZodType<
  TasksCursorData,
  z.ZodTypeDef,
  unknown
> = z.union([
  TaskStripe$inboundSchema,
  TaskWise$inboundSchema,
  TaskCurrencyCloud$inboundSchema,
  TaskDummyPay$inboundSchema,
  TaskModulr$inboundSchema,
  TaskBankingCircle$inboundSchema,
  TaskMangoPay$inboundSchema,
  TaskMoneycorp$inboundSchema,
]);

/** @internal */
export type TasksCursorData$Outbound =
  | TaskStripe$Outbound
  | TaskWise$Outbound
  | TaskCurrencyCloud$Outbound
  | TaskDummyPay$Outbound
  | TaskModulr$Outbound
  | TaskBankingCircle$Outbound
  | TaskMangoPay$Outbound
  | TaskMoneycorp$Outbound;

/** @internal */
export const TasksCursorData$outboundSchema: z.ZodType<
  TasksCursorData$Outbound,
  z.ZodTypeDef,
  TasksCursorData
> = z.union([
  TaskStripe$outboundSchema,
  TaskWise$outboundSchema,
  TaskCurrencyCloud$outboundSchema,
  TaskDummyPay$outboundSchema,
  TaskModulr$outboundSchema,
  TaskBankingCircle$outboundSchema,
  TaskMangoPay$outboundSchema,
  TaskMoneycorp$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TasksCursorData$ {
  /** @deprecated use `TasksCursorData$inboundSchema` instead. */
  export const inboundSchema = TasksCursorData$inboundSchema;
  /** @deprecated use `TasksCursorData$outboundSchema` instead. */
  export const outboundSchema = TasksCursorData$outboundSchema;
  /** @deprecated use `TasksCursorData$Outbound` instead. */
  export type Outbound = TasksCursorData$Outbound;
}

/** @internal */
export const TasksCursorCursor$inboundSchema: z.ZodType<
  TasksCursorCursor,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.array(
    z.union([
      TaskStripe$inboundSchema,
      TaskWise$inboundSchema,
      TaskCurrencyCloud$inboundSchema,
      TaskDummyPay$inboundSchema,
      TaskModulr$inboundSchema,
      TaskBankingCircle$inboundSchema,
      TaskMangoPay$inboundSchema,
      TaskMoneycorp$inboundSchema,
    ]),
  ),
  hasMore: z.boolean(),
  next: z.string().optional(),
  pageSize: z.number().int(),
  previous: z.string().optional(),
});

/** @internal */
export type TasksCursorCursor$Outbound = {
  data: Array<
    | TaskStripe$Outbound
    | TaskWise$Outbound
    | TaskCurrencyCloud$Outbound
    | TaskDummyPay$Outbound
    | TaskModulr$Outbound
    | TaskBankingCircle$Outbound
    | TaskMangoPay$Outbound
    | TaskMoneycorp$Outbound
  >;
  hasMore: boolean;
  next?: string | undefined;
  pageSize: number;
  previous?: string | undefined;
};

/** @internal */
export const TasksCursorCursor$outboundSchema: z.ZodType<
  TasksCursorCursor$Outbound,
  z.ZodTypeDef,
  TasksCursorCursor
> = z.object({
  data: z.array(
    z.union([
      TaskStripe$outboundSchema,
      TaskWise$outboundSchema,
      TaskCurrencyCloud$outboundSchema,
      TaskDummyPay$outboundSchema,
      TaskModulr$outboundSchema,
      TaskBankingCircle$outboundSchema,
      TaskMangoPay$outboundSchema,
      TaskMoneycorp$outboundSchema,
    ]),
  ),
  hasMore: z.boolean(),
  next: z.string().optional(),
  pageSize: z.number().int(),
  previous: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TasksCursorCursor$ {
  /** @deprecated use `TasksCursorCursor$inboundSchema` instead. */
  export const inboundSchema = TasksCursorCursor$inboundSchema;
  /** @deprecated use `TasksCursorCursor$outboundSchema` instead. */
  export const outboundSchema = TasksCursorCursor$outboundSchema;
  /** @deprecated use `TasksCursorCursor$Outbound` instead. */
  export type Outbound = TasksCursorCursor$Outbound;
}

/** @internal */
export const TasksCursor$inboundSchema: z.ZodType<
  TasksCursor,
  z.ZodTypeDef,
  unknown
> = z.object({
  cursor: z.lazy(() => TasksCursorCursor$inboundSchema),
});

/** @internal */
export type TasksCursor$Outbound = {
  cursor: TasksCursorCursor$Outbound;
};

/** @internal */
export const TasksCursor$outboundSchema: z.ZodType<
  TasksCursor$Outbound,
  z.ZodTypeDef,
  TasksCursor
> = z.object({
  cursor: z.lazy(() => TasksCursorCursor$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TasksCursor$ {
  /** @deprecated use `TasksCursor$inboundSchema` instead. */
  export const inboundSchema = TasksCursor$inboundSchema;
  /** @deprecated use `TasksCursor$outboundSchema` instead. */
  export const outboundSchema = TasksCursor$outboundSchema;
  /** @deprecated use `TasksCursor$Outbound` instead. */
  export type Outbound = TasksCursor$Outbound;
}
