/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { TriggerOccurrence, TriggerOccurrence$ } from "./triggeroccurrence";
import * as z from "zod";

export type ListTriggersOccurrencesResponse = {
    data: Array<TriggerOccurrence>;
};

/** @internal */
export namespace ListTriggersOccurrencesResponse$ {
    export const inboundSchema: z.ZodType<ListTriggersOccurrencesResponse, z.ZodTypeDef, unknown> =
        z.object({
            data: z.array(TriggerOccurrence$.inboundSchema),
        });

    export type Outbound = {
        data: Array<TriggerOccurrence$.Outbound>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ListTriggersOccurrencesResponse
    > = z.object({
        data: z.array(TriggerOccurrence$.outboundSchema),
    });
}
