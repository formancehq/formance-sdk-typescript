/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  TriggerOccurrence,
  TriggerOccurrence$inboundSchema,
  TriggerOccurrence$Outbound,
  TriggerOccurrence$outboundSchema,
} from "./triggeroccurrence.js";

export type ListTriggersOccurrencesResponse = {
  data: Array<TriggerOccurrence>;
};

/** @internal */
export const ListTriggersOccurrencesResponse$inboundSchema: z.ZodType<
  ListTriggersOccurrencesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.array(TriggerOccurrence$inboundSchema),
});

/** @internal */
export type ListTriggersOccurrencesResponse$Outbound = {
  data: Array<TriggerOccurrence$Outbound>;
};

/** @internal */
export const ListTriggersOccurrencesResponse$outboundSchema: z.ZodType<
  ListTriggersOccurrencesResponse$Outbound,
  z.ZodTypeDef,
  ListTriggersOccurrencesResponse
> = z.object({
  data: z.array(TriggerOccurrence$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListTriggersOccurrencesResponse$ {
  /** @deprecated use `ListTriggersOccurrencesResponse$inboundSchema` instead. */
  export const inboundSchema = ListTriggersOccurrencesResponse$inboundSchema;
  /** @deprecated use `ListTriggersOccurrencesResponse$outboundSchema` instead. */
  export const outboundSchema = ListTriggersOccurrencesResponse$outboundSchema;
  /** @deprecated use `ListTriggersOccurrencesResponse$Outbound` instead. */
  export type Outbound = ListTriggersOccurrencesResponse$Outbound;
}

export function listTriggersOccurrencesResponseToJSON(
  listTriggersOccurrencesResponse: ListTriggersOccurrencesResponse,
): string {
  return JSON.stringify(
    ListTriggersOccurrencesResponse$outboundSchema.parse(
      listTriggersOccurrencesResponse,
    ),
  );
}

export function listTriggersOccurrencesResponseFromJSON(
  jsonString: string,
): SafeParseResult<ListTriggersOccurrencesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListTriggersOccurrencesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListTriggersOccurrencesResponse' from JSON`,
  );
}
