/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Hold,
  Hold$inboundSchema,
  Hold$Outbound,
  Hold$outboundSchema,
} from "./hold.js";

export type DebitWalletResponse = {
  data: Hold;
};

/** @internal */
export const DebitWalletResponse$inboundSchema: z.ZodType<
  DebitWalletResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: Hold$inboundSchema,
});

/** @internal */
export type DebitWalletResponse$Outbound = {
  data: Hold$Outbound;
};

/** @internal */
export const DebitWalletResponse$outboundSchema: z.ZodType<
  DebitWalletResponse$Outbound,
  z.ZodTypeDef,
  DebitWalletResponse
> = z.object({
  data: Hold$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DebitWalletResponse$ {
  /** @deprecated use `DebitWalletResponse$inboundSchema` instead. */
  export const inboundSchema = DebitWalletResponse$inboundSchema;
  /** @deprecated use `DebitWalletResponse$outboundSchema` instead. */
  export const outboundSchema = DebitWalletResponse$outboundSchema;
  /** @deprecated use `DebitWalletResponse$Outbound` instead. */
  export type Outbound = DebitWalletResponse$Outbound;
}

export function debitWalletResponseToJSON(
  debitWalletResponse: DebitWalletResponse,
): string {
  return JSON.stringify(
    DebitWalletResponse$outboundSchema.parse(debitWalletResponse),
  );
}

export function debitWalletResponseFromJSON(
  jsonString: string,
): SafeParseResult<DebitWalletResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DebitWalletResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DebitWalletResponse' from JSON`,
  );
}
