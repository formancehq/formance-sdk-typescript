/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type StageSendSourceWallet = {
  balance?: string | undefined;
  id: string;
};

/** @internal */
export const StageSendSourceWallet$inboundSchema: z.ZodType<
  StageSendSourceWallet,
  z.ZodTypeDef,
  unknown
> = z.object({
  balance: z.string().optional(),
  id: z.string(),
});

/** @internal */
export type StageSendSourceWallet$Outbound = {
  balance?: string | undefined;
  id: string;
};

/** @internal */
export const StageSendSourceWallet$outboundSchema: z.ZodType<
  StageSendSourceWallet$Outbound,
  z.ZodTypeDef,
  StageSendSourceWallet
> = z.object({
  balance: z.string().optional(),
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StageSendSourceWallet$ {
  /** @deprecated use `StageSendSourceWallet$inboundSchema` instead. */
  export const inboundSchema = StageSendSourceWallet$inboundSchema;
  /** @deprecated use `StageSendSourceWallet$outboundSchema` instead. */
  export const outboundSchema = StageSendSourceWallet$outboundSchema;
  /** @deprecated use `StageSendSourceWallet$Outbound` instead. */
  export type Outbound = StageSendSourceWallet$Outbound;
}

export function stageSendSourceWalletToJSON(
  stageSendSourceWallet: StageSendSourceWallet,
): string {
  return JSON.stringify(
    StageSendSourceWallet$outboundSchema.parse(stageSendSourceWallet),
  );
}

export function stageSendSourceWalletFromJSON(
  jsonString: string,
): SafeParseResult<StageSendSourceWallet, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => StageSendSourceWallet$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'StageSendSourceWallet' from JSON`,
  );
}
