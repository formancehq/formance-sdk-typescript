/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Trigger, Trigger$ } from "./trigger";
import * as z from "zod";

export type ListTriggersResponse = {
    data: Array<Trigger>;
};

/** @internal */
export namespace ListTriggersResponse$ {
    export const inboundSchema: z.ZodType<ListTriggersResponse, z.ZodTypeDef, unknown> = z.object({
        data: z.array(Trigger$.inboundSchema),
    });

    export type Outbound = {
        data: Array<Trigger$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListTriggersResponse> = z.object(
        {
            data: z.array(Trigger$.outboundSchema),
        }
    );
}
