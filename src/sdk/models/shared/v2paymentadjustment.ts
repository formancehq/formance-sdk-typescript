/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    V2PaymentStatus,
    V2PaymentStatus$inboundSchema,
    V2PaymentStatus$outboundSchema,
} from "./v2paymentstatus.js";
import * as z from "zod";

export type V2PaymentAdjustmentRaw = {};

export type V2PaymentAdjustment = {
    absolute: boolean;
    amount: bigint;
    date: Date;
    raw: V2PaymentAdjustmentRaw;
    status: V2PaymentStatus;
};

/** @internal */
export const V2PaymentAdjustmentRaw$inboundSchema: z.ZodType<
    V2PaymentAdjustmentRaw,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type V2PaymentAdjustmentRaw$Outbound = {};

/** @internal */
export const V2PaymentAdjustmentRaw$outboundSchema: z.ZodType<
    V2PaymentAdjustmentRaw$Outbound,
    z.ZodTypeDef,
    V2PaymentAdjustmentRaw
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V2PaymentAdjustmentRaw$ {
    /** @deprecated use `V2PaymentAdjustmentRaw$inboundSchema` instead. */
    export const inboundSchema = V2PaymentAdjustmentRaw$inboundSchema;
    /** @deprecated use `V2PaymentAdjustmentRaw$outboundSchema` instead. */
    export const outboundSchema = V2PaymentAdjustmentRaw$outboundSchema;
    /** @deprecated use `V2PaymentAdjustmentRaw$Outbound` instead. */
    export type Outbound = V2PaymentAdjustmentRaw$Outbound;
}

/** @internal */
export const V2PaymentAdjustment$inboundSchema: z.ZodType<
    V2PaymentAdjustment,
    z.ZodTypeDef,
    unknown
> = z.object({
    absolute: z.boolean(),
    amount: z.number().transform((v) => BigInt(v)),
    date: z
        .string()
        .datetime({ offset: true })
        .transform((v) => new Date(v)),
    raw: z.lazy(() => V2PaymentAdjustmentRaw$inboundSchema),
    status: V2PaymentStatus$inboundSchema,
});

/** @internal */
export type V2PaymentAdjustment$Outbound = {
    absolute: boolean;
    amount: number;
    date: string;
    raw: V2PaymentAdjustmentRaw$Outbound;
    status: string;
};

/** @internal */
export const V2PaymentAdjustment$outboundSchema: z.ZodType<
    V2PaymentAdjustment$Outbound,
    z.ZodTypeDef,
    V2PaymentAdjustment
> = z.object({
    absolute: z.boolean(),
    amount: z.bigint().transform((v) => Number(v)),
    date: z.date().transform((v) => v.toISOString()),
    raw: z.lazy(() => V2PaymentAdjustmentRaw$outboundSchema),
    status: V2PaymentStatus$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V2PaymentAdjustment$ {
    /** @deprecated use `V2PaymentAdjustment$inboundSchema` instead. */
    export const inboundSchema = V2PaymentAdjustment$inboundSchema;
    /** @deprecated use `V2PaymentAdjustment$outboundSchema` instead. */
    export const outboundSchema = V2PaymentAdjustment$outboundSchema;
    /** @deprecated use `V2PaymentAdjustment$Outbound` instead. */
    export type Outbound = V2PaymentAdjustment$Outbound;
}
