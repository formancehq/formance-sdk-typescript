/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type CreateWorkflowRequest = {
    name?: string | undefined;
    stages: Array<{ [k: string]: any }>;
};

/** @internal */
export namespace CreateWorkflowRequest$ {
    export const inboundSchema: z.ZodType<CreateWorkflowRequest, z.ZodTypeDef, unknown> = z.object({
        name: z.string().optional(),
        stages: z.array(z.record(z.any())),
    });

    export type Outbound = {
        name?: string | undefined;
        stages: Array<{ [k: string]: any }>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateWorkflowRequest> =
        z.object({
            name: z.string().optional(),
            stages: z.array(z.record(z.any())),
        });
}
