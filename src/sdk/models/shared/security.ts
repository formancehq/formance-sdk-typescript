/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives";
import * as z from "zod";

export type Security = {
    authorization: string;
};

/** @internal */
export namespace Security$ {
    export const inboundSchema: z.ZodType<Security, z.ZodTypeDef, unknown> = z
        .object({
            Authorization: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                Authorization: "authorization",
            });
        });

    export type Outbound = {
        Authorization: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Security> = z
        .object({
            authorization: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                authorization: "Authorization",
            });
        });
}
