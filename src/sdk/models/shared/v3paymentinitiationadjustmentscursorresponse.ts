/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  V3PaymentInitiationAdjustment,
  V3PaymentInitiationAdjustment$inboundSchema,
  V3PaymentInitiationAdjustment$Outbound,
  V3PaymentInitiationAdjustment$outboundSchema,
} from "./v3paymentinitiationadjustment.js";

export type V3PaymentInitiationAdjustmentsCursorResponseCursor = {
  data: Array<V3PaymentInitiationAdjustment>;
  hasMore: boolean;
  next?: string | undefined;
  pageSize: number;
  previous?: string | undefined;
};

export type V3PaymentInitiationAdjustmentsCursorResponse = {
  cursor: V3PaymentInitiationAdjustmentsCursorResponseCursor;
};

/** @internal */
export const V3PaymentInitiationAdjustmentsCursorResponseCursor$inboundSchema:
  z.ZodType<
    V3PaymentInitiationAdjustmentsCursorResponseCursor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    data: z.array(V3PaymentInitiationAdjustment$inboundSchema),
    hasMore: z.boolean(),
    next: z.string().optional(),
    pageSize: z.number().int(),
    previous: z.string().optional(),
  });

/** @internal */
export type V3PaymentInitiationAdjustmentsCursorResponseCursor$Outbound = {
  data: Array<V3PaymentInitiationAdjustment$Outbound>;
  hasMore: boolean;
  next?: string | undefined;
  pageSize: number;
  previous?: string | undefined;
};

/** @internal */
export const V3PaymentInitiationAdjustmentsCursorResponseCursor$outboundSchema:
  z.ZodType<
    V3PaymentInitiationAdjustmentsCursorResponseCursor$Outbound,
    z.ZodTypeDef,
    V3PaymentInitiationAdjustmentsCursorResponseCursor
  > = z.object({
    data: z.array(V3PaymentInitiationAdjustment$outboundSchema),
    hasMore: z.boolean(),
    next: z.string().optional(),
    pageSize: z.number().int(),
    previous: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V3PaymentInitiationAdjustmentsCursorResponseCursor$ {
  /** @deprecated use `V3PaymentInitiationAdjustmentsCursorResponseCursor$inboundSchema` instead. */
  export const inboundSchema =
    V3PaymentInitiationAdjustmentsCursorResponseCursor$inboundSchema;
  /** @deprecated use `V3PaymentInitiationAdjustmentsCursorResponseCursor$outboundSchema` instead. */
  export const outboundSchema =
    V3PaymentInitiationAdjustmentsCursorResponseCursor$outboundSchema;
  /** @deprecated use `V3PaymentInitiationAdjustmentsCursorResponseCursor$Outbound` instead. */
  export type Outbound =
    V3PaymentInitiationAdjustmentsCursorResponseCursor$Outbound;
}

export function v3PaymentInitiationAdjustmentsCursorResponseCursorToJSON(
  v3PaymentInitiationAdjustmentsCursorResponseCursor:
    V3PaymentInitiationAdjustmentsCursorResponseCursor,
): string {
  return JSON.stringify(
    V3PaymentInitiationAdjustmentsCursorResponseCursor$outboundSchema.parse(
      v3PaymentInitiationAdjustmentsCursorResponseCursor,
    ),
  );
}

export function v3PaymentInitiationAdjustmentsCursorResponseCursorFromJSON(
  jsonString: string,
): SafeParseResult<
  V3PaymentInitiationAdjustmentsCursorResponseCursor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      V3PaymentInitiationAdjustmentsCursorResponseCursor$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'V3PaymentInitiationAdjustmentsCursorResponseCursor' from JSON`,
  );
}

/** @internal */
export const V3PaymentInitiationAdjustmentsCursorResponse$inboundSchema:
  z.ZodType<
    V3PaymentInitiationAdjustmentsCursorResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    cursor: z.lazy(() =>
      V3PaymentInitiationAdjustmentsCursorResponseCursor$inboundSchema
    ),
  });

/** @internal */
export type V3PaymentInitiationAdjustmentsCursorResponse$Outbound = {
  cursor: V3PaymentInitiationAdjustmentsCursorResponseCursor$Outbound;
};

/** @internal */
export const V3PaymentInitiationAdjustmentsCursorResponse$outboundSchema:
  z.ZodType<
    V3PaymentInitiationAdjustmentsCursorResponse$Outbound,
    z.ZodTypeDef,
    V3PaymentInitiationAdjustmentsCursorResponse
  > = z.object({
    cursor: z.lazy(() =>
      V3PaymentInitiationAdjustmentsCursorResponseCursor$outboundSchema
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V3PaymentInitiationAdjustmentsCursorResponse$ {
  /** @deprecated use `V3PaymentInitiationAdjustmentsCursorResponse$inboundSchema` instead. */
  export const inboundSchema =
    V3PaymentInitiationAdjustmentsCursorResponse$inboundSchema;
  /** @deprecated use `V3PaymentInitiationAdjustmentsCursorResponse$outboundSchema` instead. */
  export const outboundSchema =
    V3PaymentInitiationAdjustmentsCursorResponse$outboundSchema;
  /** @deprecated use `V3PaymentInitiationAdjustmentsCursorResponse$Outbound` instead. */
  export type Outbound = V3PaymentInitiationAdjustmentsCursorResponse$Outbound;
}

export function v3PaymentInitiationAdjustmentsCursorResponseToJSON(
  v3PaymentInitiationAdjustmentsCursorResponse:
    V3PaymentInitiationAdjustmentsCursorResponse,
): string {
  return JSON.stringify(
    V3PaymentInitiationAdjustmentsCursorResponse$outboundSchema.parse(
      v3PaymentInitiationAdjustmentsCursorResponse,
    ),
  );
}

export function v3PaymentInitiationAdjustmentsCursorResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  V3PaymentInitiationAdjustmentsCursorResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      V3PaymentInitiationAdjustmentsCursorResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'V3PaymentInitiationAdjustmentsCursorResponse' from JSON`,
  );
}
