/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  V3Payment,
  V3Payment$inboundSchema,
  V3Payment$Outbound,
  V3Payment$outboundSchema,
} from "./v3payment.js";

export type V3PaymentInitiationRelatedPaymentsCursorResponseCursor = {
  data: Array<V3Payment>;
  hasMore: boolean;
  next?: string | undefined;
  pageSize: number;
  previous?: string | undefined;
};

export type V3PaymentInitiationRelatedPaymentsCursorResponse = {
  cursor: V3PaymentInitiationRelatedPaymentsCursorResponseCursor;
};

/** @internal */
export const V3PaymentInitiationRelatedPaymentsCursorResponseCursor$inboundSchema:
  z.ZodType<
    V3PaymentInitiationRelatedPaymentsCursorResponseCursor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    data: z.array(V3Payment$inboundSchema),
    hasMore: z.boolean(),
    next: z.string().optional(),
    pageSize: z.number().int(),
    previous: z.string().optional(),
  });

/** @internal */
export type V3PaymentInitiationRelatedPaymentsCursorResponseCursor$Outbound = {
  data: Array<V3Payment$Outbound>;
  hasMore: boolean;
  next?: string | undefined;
  pageSize: number;
  previous?: string | undefined;
};

/** @internal */
export const V3PaymentInitiationRelatedPaymentsCursorResponseCursor$outboundSchema:
  z.ZodType<
    V3PaymentInitiationRelatedPaymentsCursorResponseCursor$Outbound,
    z.ZodTypeDef,
    V3PaymentInitiationRelatedPaymentsCursorResponseCursor
  > = z.object({
    data: z.array(V3Payment$outboundSchema),
    hasMore: z.boolean(),
    next: z.string().optional(),
    pageSize: z.number().int(),
    previous: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V3PaymentInitiationRelatedPaymentsCursorResponseCursor$ {
  /** @deprecated use `V3PaymentInitiationRelatedPaymentsCursorResponseCursor$inboundSchema` instead. */
  export const inboundSchema =
    V3PaymentInitiationRelatedPaymentsCursorResponseCursor$inboundSchema;
  /** @deprecated use `V3PaymentInitiationRelatedPaymentsCursorResponseCursor$outboundSchema` instead. */
  export const outboundSchema =
    V3PaymentInitiationRelatedPaymentsCursorResponseCursor$outboundSchema;
  /** @deprecated use `V3PaymentInitiationRelatedPaymentsCursorResponseCursor$Outbound` instead. */
  export type Outbound =
    V3PaymentInitiationRelatedPaymentsCursorResponseCursor$Outbound;
}

export function v3PaymentInitiationRelatedPaymentsCursorResponseCursorToJSON(
  v3PaymentInitiationRelatedPaymentsCursorResponseCursor:
    V3PaymentInitiationRelatedPaymentsCursorResponseCursor,
): string {
  return JSON.stringify(
    V3PaymentInitiationRelatedPaymentsCursorResponseCursor$outboundSchema.parse(
      v3PaymentInitiationRelatedPaymentsCursorResponseCursor,
    ),
  );
}

export function v3PaymentInitiationRelatedPaymentsCursorResponseCursorFromJSON(
  jsonString: string,
): SafeParseResult<
  V3PaymentInitiationRelatedPaymentsCursorResponseCursor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      V3PaymentInitiationRelatedPaymentsCursorResponseCursor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'V3PaymentInitiationRelatedPaymentsCursorResponseCursor' from JSON`,
  );
}

/** @internal */
export const V3PaymentInitiationRelatedPaymentsCursorResponse$inboundSchema:
  z.ZodType<
    V3PaymentInitiationRelatedPaymentsCursorResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    cursor: z.lazy(() =>
      V3PaymentInitiationRelatedPaymentsCursorResponseCursor$inboundSchema
    ),
  });

/** @internal */
export type V3PaymentInitiationRelatedPaymentsCursorResponse$Outbound = {
  cursor: V3PaymentInitiationRelatedPaymentsCursorResponseCursor$Outbound;
};

/** @internal */
export const V3PaymentInitiationRelatedPaymentsCursorResponse$outboundSchema:
  z.ZodType<
    V3PaymentInitiationRelatedPaymentsCursorResponse$Outbound,
    z.ZodTypeDef,
    V3PaymentInitiationRelatedPaymentsCursorResponse
  > = z.object({
    cursor: z.lazy(() =>
      V3PaymentInitiationRelatedPaymentsCursorResponseCursor$outboundSchema
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V3PaymentInitiationRelatedPaymentsCursorResponse$ {
  /** @deprecated use `V3PaymentInitiationRelatedPaymentsCursorResponse$inboundSchema` instead. */
  export const inboundSchema =
    V3PaymentInitiationRelatedPaymentsCursorResponse$inboundSchema;
  /** @deprecated use `V3PaymentInitiationRelatedPaymentsCursorResponse$outboundSchema` instead. */
  export const outboundSchema =
    V3PaymentInitiationRelatedPaymentsCursorResponse$outboundSchema;
  /** @deprecated use `V3PaymentInitiationRelatedPaymentsCursorResponse$Outbound` instead. */
  export type Outbound =
    V3PaymentInitiationRelatedPaymentsCursorResponse$Outbound;
}

export function v3PaymentInitiationRelatedPaymentsCursorResponseToJSON(
  v3PaymentInitiationRelatedPaymentsCursorResponse:
    V3PaymentInitiationRelatedPaymentsCursorResponse,
): string {
  return JSON.stringify(
    V3PaymentInitiationRelatedPaymentsCursorResponse$outboundSchema.parse(
      v3PaymentInitiationRelatedPaymentsCursorResponse,
    ),
  );
}

export function v3PaymentInitiationRelatedPaymentsCursorResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  V3PaymentInitiationRelatedPaymentsCursorResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      V3PaymentInitiationRelatedPaymentsCursorResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'V3PaymentInitiationRelatedPaymentsCursorResponse' from JSON`,
  );
}
