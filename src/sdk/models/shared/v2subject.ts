/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  V2LedgerAccountSubject,
  V2LedgerAccountSubject$inboundSchema,
  V2LedgerAccountSubject$Outbound,
  V2LedgerAccountSubject$outboundSchema,
} from "./v2ledgeraccountsubject.js";
import {
  V2WalletSubject,
  V2WalletSubject$inboundSchema,
  V2WalletSubject$Outbound,
  V2WalletSubject$outboundSchema,
} from "./v2walletsubject.js";

export type V2Subject =
  | (V2LedgerAccountSubject & { type: "ACCOUNT" })
  | (V2WalletSubject & { type: "WALLET" });

/** @internal */
export const V2Subject$inboundSchema: z.ZodType<
  V2Subject,
  z.ZodTypeDef,
  unknown
> = z.union([
  V2LedgerAccountSubject$inboundSchema.and(
    z.object({ type: z.literal("ACCOUNT") }).transform((v) => ({
      type: v.type,
    })),
  ),
  V2WalletSubject$inboundSchema.and(
    z.object({ type: z.literal("WALLET") }).transform((v) => ({
      type: v.type,
    })),
  ),
]);

/** @internal */
export type V2Subject$Outbound =
  | (V2LedgerAccountSubject$Outbound & { type: "ACCOUNT" })
  | (V2WalletSubject$Outbound & { type: "WALLET" });

/** @internal */
export const V2Subject$outboundSchema: z.ZodType<
  V2Subject$Outbound,
  z.ZodTypeDef,
  V2Subject
> = z.union([
  V2LedgerAccountSubject$outboundSchema.and(
    z.object({ type: z.literal("ACCOUNT") }).transform((v) => ({
      type: v.type,
    })),
  ),
  V2WalletSubject$outboundSchema.and(
    z.object({ type: z.literal("WALLET") }).transform((v) => ({
      type: v.type,
    })),
  ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V2Subject$ {
  /** @deprecated use `V2Subject$inboundSchema` instead. */
  export const inboundSchema = V2Subject$inboundSchema;
  /** @deprecated use `V2Subject$outboundSchema` instead. */
  export const outboundSchema = V2Subject$outboundSchema;
  /** @deprecated use `V2Subject$Outbound` instead. */
  export type Outbound = V2Subject$Outbound;
}
