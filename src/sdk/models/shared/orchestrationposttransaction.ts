/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Posting, Posting$ } from "./posting";
import * as z from "zod";

export type OrchestrationPostTransactionScript = {
    plain: string;
    vars?: { [k: string]: any } | undefined;
};

export type OrchestrationPostTransaction = {
    metadata: { [k: string]: string };
    postings?: Array<Posting> | undefined;
    reference?: string | undefined;
    script?: OrchestrationPostTransactionScript | undefined;
    timestamp?: Date | undefined;
};

/** @internal */
export namespace OrchestrationPostTransactionScript$ {
    export const inboundSchema: z.ZodType<
        OrchestrationPostTransactionScript,
        z.ZodTypeDef,
        unknown
    > = z.object({
        plain: z.string(),
        vars: z.record(z.any()).optional(),
    });

    export type Outbound = {
        plain: string;
        vars?: { [k: string]: any } | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        OrchestrationPostTransactionScript
    > = z.object({
        plain: z.string(),
        vars: z.record(z.any()).optional(),
    });
}

/** @internal */
export namespace OrchestrationPostTransaction$ {
    export const inboundSchema: z.ZodType<OrchestrationPostTransaction, z.ZodTypeDef, unknown> =
        z.object({
            metadata: z.record(z.string()),
            postings: z.array(Posting$.inboundSchema).optional(),
            reference: z.string().optional(),
            script: z.lazy(() => OrchestrationPostTransactionScript$.inboundSchema).optional(),
            timestamp: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
        });

    export type Outbound = {
        metadata: { [k: string]: string };
        postings?: Array<Posting$.Outbound> | undefined;
        reference?: string | undefined;
        script?: OrchestrationPostTransactionScript$.Outbound | undefined;
        timestamp?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, OrchestrationPostTransaction> =
        z.object({
            metadata: z.record(z.string()),
            postings: z.array(Posting$.outboundSchema).optional(),
            reference: z.string().optional(),
            script: z.lazy(() => OrchestrationPostTransactionScript$.outboundSchema).optional(),
            timestamp: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
        });
}
