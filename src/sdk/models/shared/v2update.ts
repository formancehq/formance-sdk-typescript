/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  V2UpdateAccount,
  V2UpdateAccount$inboundSchema,
  V2UpdateAccount$Outbound,
  V2UpdateAccount$outboundSchema,
} from "./v2updateaccount.js";

export type V2Update = {
  account?: V2UpdateAccount | undefined;
};

/** @internal */
export const V2Update$inboundSchema: z.ZodType<
  V2Update,
  z.ZodTypeDef,
  unknown
> = z.object({
  account: V2UpdateAccount$inboundSchema.optional(),
});

/** @internal */
export type V2Update$Outbound = {
  account?: V2UpdateAccount$Outbound | undefined;
};

/** @internal */
export const V2Update$outboundSchema: z.ZodType<
  V2Update$Outbound,
  z.ZodTypeDef,
  V2Update
> = z.object({
  account: V2UpdateAccount$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V2Update$ {
  /** @deprecated use `V2Update$inboundSchema` instead. */
  export const inboundSchema = V2Update$inboundSchema;
  /** @deprecated use `V2Update$outboundSchema` instead. */
  export const outboundSchema = V2Update$outboundSchema;
  /** @deprecated use `V2Update$Outbound` instead. */
  export type Outbound = V2Update$Outbound;
}

export function v2UpdateToJSON(v2Update: V2Update): string {
  return JSON.stringify(V2Update$outboundSchema.parse(v2Update));
}

export function v2UpdateFromJSON(
  jsonString: string,
): SafeParseResult<V2Update, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V2Update$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V2Update' from JSON`,
  );
}
