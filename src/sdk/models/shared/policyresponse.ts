/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Policy, Policy$ } from "./policy";
import { z } from "zod";

export type PolicyResponse = {
    data: Policy;
};

/** @internal */
export namespace PolicyResponse$ {
    export type Inbound = {
        data: Policy$.Inbound;
    };

    export const inboundSchema: z.ZodType<PolicyResponse, z.ZodTypeDef, Inbound> = z
        .object({
            data: Policy$.inboundSchema,
        })
        .transform((v) => {
            return {
                data: v.data,
            };
        });

    export type Outbound = {
        data: Policy$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PolicyResponse> = z
        .object({
            data: Policy$.outboundSchema,
        })
        .transform((v) => {
            return {
                data: v.data,
            };
        });
}
