/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type BankAccountRequest = {
    accountNumber?: string | undefined;
    connectorID: string;
    country: string;
    iban?: string | undefined;
    metadata?: { [k: string]: string } | null | undefined;
    name: string;
    swiftBicCode?: string | undefined;
};

/** @internal */
export namespace BankAccountRequest$ {
    export const inboundSchema: z.ZodType<BankAccountRequest, z.ZodTypeDef, unknown> = z.object({
        accountNumber: z.string().optional(),
        connectorID: z.string(),
        country: z.string(),
        iban: z.string().optional(),
        metadata: z.nullable(z.record(z.string())).optional(),
        name: z.string(),
        swiftBicCode: z.string().optional(),
    });

    export type Outbound = {
        accountNumber?: string | undefined;
        connectorID: string;
        country: string;
        iban?: string | undefined;
        metadata?: { [k: string]: string } | null | undefined;
        name: string;
        swiftBicCode?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, BankAccountRequest> = z.object({
        accountNumber: z.string().optional(),
        connectorID: z.string(),
        country: z.string(),
        iban: z.string().optional(),
        metadata: z.nullable(z.record(z.string())).optional(),
        name: z.string(),
        swiftBicCode: z.string().optional(),
    });
}
