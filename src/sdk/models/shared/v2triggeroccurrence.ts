/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    V2WorkflowInstance,
    V2WorkflowInstance$inboundSchema,
    V2WorkflowInstance$Outbound,
    V2WorkflowInstance$outboundSchema,
} from "./v2workflowinstance.js";
import * as z from "zod";

export type V2TriggerOccurrence = {
    date: Date;
    error?: string | undefined;
    event: { [k: string]: any };
    triggerID: string;
    workflowInstance?: V2WorkflowInstance | undefined;
    workflowInstanceID?: string | undefined;
};

/** @internal */
export const V2TriggerOccurrence$inboundSchema: z.ZodType<
    V2TriggerOccurrence,
    z.ZodTypeDef,
    unknown
> = z.object({
    date: z
        .string()
        .datetime({ offset: true })
        .transform((v) => new Date(v)),
    error: z.string().optional(),
    event: z.record(z.any()),
    triggerID: z.string(),
    workflowInstance: V2WorkflowInstance$inboundSchema.optional(),
    workflowInstanceID: z.string().optional(),
});

/** @internal */
export type V2TriggerOccurrence$Outbound = {
    date: string;
    error?: string | undefined;
    event: { [k: string]: any };
    triggerID: string;
    workflowInstance?: V2WorkflowInstance$Outbound | undefined;
    workflowInstanceID?: string | undefined;
};

/** @internal */
export const V2TriggerOccurrence$outboundSchema: z.ZodType<
    V2TriggerOccurrence$Outbound,
    z.ZodTypeDef,
    V2TriggerOccurrence
> = z.object({
    date: z.date().transform((v) => v.toISOString()),
    error: z.string().optional(),
    event: z.record(z.any()),
    triggerID: z.string(),
    workflowInstance: V2WorkflowInstance$outboundSchema.optional(),
    workflowInstanceID: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V2TriggerOccurrence$ {
    /** @deprecated use `V2TriggerOccurrence$inboundSchema` instead. */
    export const inboundSchema = V2TriggerOccurrence$inboundSchema;
    /** @deprecated use `V2TriggerOccurrence$outboundSchema` instead. */
    export const outboundSchema = V2TriggerOccurrence$outboundSchema;
    /** @deprecated use `V2TriggerOccurrence$Outbound` instead. */
    export type Outbound = V2TriggerOccurrence$Outbound;
}
