/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type CreateSecretRequest = {
    metadata?: { [k: string]: any } | undefined;
    name: string;
};

/** @internal */
export namespace CreateSecretRequest$ {
    export const inboundSchema: z.ZodType<CreateSecretRequest, z.ZodTypeDef, unknown> = z.object({
        metadata: z.record(z.any()).optional(),
        name: z.string(),
    });

    export type Outbound = {
        metadata?: { [k: string]: any } | undefined;
        name: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateSecretRequest> = z.object({
        metadata: z.record(z.any()).optional(),
        name: z.string(),
    });
}
