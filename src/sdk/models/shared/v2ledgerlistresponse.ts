/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    V2Ledger,
    V2Ledger$inboundSchema,
    V2Ledger$Outbound,
    V2Ledger$outboundSchema,
} from "./v2ledger.js";
import * as z from "zod";

export type V2LedgerListResponseCursor = {
    data: Array<V2Ledger>;
    hasMore: boolean;
    next?: string | undefined;
    pageSize: number;
    previous?: string | undefined;
};

export type V2LedgerListResponse = {
    cursor: V2LedgerListResponseCursor;
};

/** @internal */
export const V2LedgerListResponseCursor$inboundSchema: z.ZodType<
    V2LedgerListResponseCursor,
    z.ZodTypeDef,
    unknown
> = z.object({
    data: z.array(V2Ledger$inboundSchema),
    hasMore: z.boolean(),
    next: z.string().optional(),
    pageSize: z.number().int(),
    previous: z.string().optional(),
});

/** @internal */
export type V2LedgerListResponseCursor$Outbound = {
    data: Array<V2Ledger$Outbound>;
    hasMore: boolean;
    next?: string | undefined;
    pageSize: number;
    previous?: string | undefined;
};

/** @internal */
export const V2LedgerListResponseCursor$outboundSchema: z.ZodType<
    V2LedgerListResponseCursor$Outbound,
    z.ZodTypeDef,
    V2LedgerListResponseCursor
> = z.object({
    data: z.array(V2Ledger$outboundSchema),
    hasMore: z.boolean(),
    next: z.string().optional(),
    pageSize: z.number().int(),
    previous: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V2LedgerListResponseCursor$ {
    /** @deprecated use `V2LedgerListResponseCursor$inboundSchema` instead. */
    export const inboundSchema = V2LedgerListResponseCursor$inboundSchema;
    /** @deprecated use `V2LedgerListResponseCursor$outboundSchema` instead. */
    export const outboundSchema = V2LedgerListResponseCursor$outboundSchema;
    /** @deprecated use `V2LedgerListResponseCursor$Outbound` instead. */
    export type Outbound = V2LedgerListResponseCursor$Outbound;
}

/** @internal */
export const V2LedgerListResponse$inboundSchema: z.ZodType<
    V2LedgerListResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    cursor: z.lazy(() => V2LedgerListResponseCursor$inboundSchema),
});

/** @internal */
export type V2LedgerListResponse$Outbound = {
    cursor: V2LedgerListResponseCursor$Outbound;
};

/** @internal */
export const V2LedgerListResponse$outboundSchema: z.ZodType<
    V2LedgerListResponse$Outbound,
    z.ZodTypeDef,
    V2LedgerListResponse
> = z.object({
    cursor: z.lazy(() => V2LedgerListResponseCursor$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V2LedgerListResponse$ {
    /** @deprecated use `V2LedgerListResponse$inboundSchema` instead. */
    export const inboundSchema = V2LedgerListResponse$inboundSchema;
    /** @deprecated use `V2LedgerListResponse$outboundSchema` instead. */
    export const outboundSchema = V2LedgerListResponse$outboundSchema;
    /** @deprecated use `V2LedgerListResponse$Outbound` instead. */
    export type Outbound = V2LedgerListResponse$Outbound;
}
