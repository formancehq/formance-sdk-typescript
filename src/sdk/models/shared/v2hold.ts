/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { V2Subject, V2Subject$ } from "./v2subject";
import * as z from "zod";

export type V2Hold = {
    description: string;
    destination?: V2Subject | undefined;
    /**
     * The unique ID of the hold.
     */
    id: string;
    /**
     * Metadata associated with the hold.
     */
    metadata: Record<string, string>;
    /**
     * The ID of the wallet the hold is associated with.
     */
    walletID: string;
};

/** @internal */
export namespace V2Hold$ {
    export type Inbound = {
        description: string;
        destination?: V2Subject$.Inbound | undefined;
        id: string;
        metadata: Record<string, string>;
        walletID: string;
    };

    export const inboundSchema: z.ZodType<V2Hold, z.ZodTypeDef, Inbound> = z
        .object({
            description: z.string(),
            destination: V2Subject$.inboundSchema.optional(),
            id: z.string(),
            metadata: z.record(z.string()),
            walletID: z.string(),
        })
        .transform((v) => {
            return {
                description: v.description,
                ...(v.destination === undefined ? null : { destination: v.destination }),
                id: v.id,
                metadata: v.metadata,
                walletID: v.walletID,
            };
        });

    export type Outbound = {
        description: string;
        destination?: V2Subject$.Outbound | undefined;
        id: string;
        metadata: Record<string, string>;
        walletID: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2Hold> = z
        .object({
            description: z.string(),
            destination: V2Subject$.outboundSchema.optional(),
            id: z.string(),
            metadata: z.record(z.string()),
            walletID: z.string(),
        })
        .transform((v) => {
            return {
                description: v.description,
                ...(v.destination === undefined ? null : { destination: v.destination }),
                id: v.id,
                metadata: v.metadata,
                walletID: v.walletID,
            };
        });
}
