/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  WebhooksConfig,
  WebhooksConfig$inboundSchema,
  WebhooksConfig$Outbound,
  WebhooksConfig$outboundSchema,
} from "./webhooksconfig.js";

export type ConfigResponse = {
  data: WebhooksConfig;
};

/** @internal */
export const ConfigResponse$inboundSchema: z.ZodType<
  ConfigResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: WebhooksConfig$inboundSchema,
});

/** @internal */
export type ConfigResponse$Outbound = {
  data: WebhooksConfig$Outbound;
};

/** @internal */
export const ConfigResponse$outboundSchema: z.ZodType<
  ConfigResponse$Outbound,
  z.ZodTypeDef,
  ConfigResponse
> = z.object({
  data: WebhooksConfig$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConfigResponse$ {
  /** @deprecated use `ConfigResponse$inboundSchema` instead. */
  export const inboundSchema = ConfigResponse$inboundSchema;
  /** @deprecated use `ConfigResponse$outboundSchema` instead. */
  export const outboundSchema = ConfigResponse$outboundSchema;
  /** @deprecated use `ConfigResponse$Outbound` instead. */
  export type Outbound = ConfigResponse$Outbound;
}
