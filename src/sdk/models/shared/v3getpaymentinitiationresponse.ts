/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  V3PaymentInitiation,
  V3PaymentInitiation$inboundSchema,
  V3PaymentInitiation$Outbound,
  V3PaymentInitiation$outboundSchema,
} from "./v3paymentinitiation.js";

export type V3GetPaymentInitiationResponse = {
  data: V3PaymentInitiation;
};

/** @internal */
export const V3GetPaymentInitiationResponse$inboundSchema: z.ZodType<
  V3GetPaymentInitiationResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: V3PaymentInitiation$inboundSchema,
});

/** @internal */
export type V3GetPaymentInitiationResponse$Outbound = {
  data: V3PaymentInitiation$Outbound;
};

/** @internal */
export const V3GetPaymentInitiationResponse$outboundSchema: z.ZodType<
  V3GetPaymentInitiationResponse$Outbound,
  z.ZodTypeDef,
  V3GetPaymentInitiationResponse
> = z.object({
  data: V3PaymentInitiation$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V3GetPaymentInitiationResponse$ {
  /** @deprecated use `V3GetPaymentInitiationResponse$inboundSchema` instead. */
  export const inboundSchema = V3GetPaymentInitiationResponse$inboundSchema;
  /** @deprecated use `V3GetPaymentInitiationResponse$outboundSchema` instead. */
  export const outboundSchema = V3GetPaymentInitiationResponse$outboundSchema;
  /** @deprecated use `V3GetPaymentInitiationResponse$Outbound` instead. */
  export type Outbound = V3GetPaymentInitiationResponse$Outbound;
}

export function v3GetPaymentInitiationResponseToJSON(
  v3GetPaymentInitiationResponse: V3GetPaymentInitiationResponse,
): string {
  return JSON.stringify(
    V3GetPaymentInitiationResponse$outboundSchema.parse(
      v3GetPaymentInitiationResponse,
    ),
  );
}

export function v3GetPaymentInitiationResponseFromJSON(
  jsonString: string,
): SafeParseResult<V3GetPaymentInitiationResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V3GetPaymentInitiationResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V3GetPaymentInitiationResponse' from JSON`,
  );
}
