/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives";
import {
    V2ActivityAddAccountMetadata,
    V2ActivityAddAccountMetadata$,
} from "./v2activityaddaccountmetadata";
import { V2ActivityConfirmHold, V2ActivityConfirmHold$ } from "./v2activityconfirmhold";
import {
    V2ActivityCreateTransaction,
    V2ActivityCreateTransaction$,
} from "./v2activitycreatetransaction";
import { V2ActivityCreditWallet, V2ActivityCreditWallet$ } from "./v2activitycreditwallet";
import { V2ActivityDebitWallet, V2ActivityDebitWallet$ } from "./v2activitydebitwallet";
import { V2ActivityGetAccount, V2ActivityGetAccount$ } from "./v2activitygetaccount";
import { V2ActivityGetPayment, V2ActivityGetPayment$ } from "./v2activitygetpayment";
import { V2ActivityGetWallet, V2ActivityGetWallet$ } from "./v2activitygetwallet";
import { V2ActivityListWallets, V2ActivityListWallets$ } from "./v2activitylistwallets";
import { V2ActivityStripeTransfer, V2ActivityStripeTransfer$ } from "./v2activitystripetransfer";
import { V2ActivityVoidHold, V2ActivityVoidHold$ } from "./v2activityvoidhold";
import * as z from "zod";

export type V2WorkflowInstanceHistoryStageInput = {
    addAccountMetadata?: V2ActivityAddAccountMetadata | undefined;
    confirmHold?: V2ActivityConfirmHold | undefined;
    createTransaction?: V2ActivityCreateTransaction | undefined;
    creditWallet?: V2ActivityCreditWallet | undefined;
    debitWallet?: V2ActivityDebitWallet | undefined;
    getAccount?: V2ActivityGetAccount | undefined;
    getPayment?: V2ActivityGetPayment | undefined;
    getWallet?: V2ActivityGetWallet | undefined;
    listWallets?: V2ActivityListWallets | undefined;
    stripeTransfer?: V2ActivityStripeTransfer | undefined;
    voidHold?: V2ActivityVoidHold | undefined;
};

/** @internal */
export namespace V2WorkflowInstanceHistoryStageInput$ {
    export const inboundSchema: z.ZodType<
        V2WorkflowInstanceHistoryStageInput,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            AddAccountMetadata: V2ActivityAddAccountMetadata$.inboundSchema.optional(),
            ConfirmHold: V2ActivityConfirmHold$.inboundSchema.optional(),
            CreateTransaction: V2ActivityCreateTransaction$.inboundSchema.optional(),
            CreditWallet: V2ActivityCreditWallet$.inboundSchema.optional(),
            DebitWallet: V2ActivityDebitWallet$.inboundSchema.optional(),
            GetAccount: V2ActivityGetAccount$.inboundSchema.optional(),
            GetPayment: V2ActivityGetPayment$.inboundSchema.optional(),
            GetWallet: V2ActivityGetWallet$.inboundSchema.optional(),
            ListWallets: V2ActivityListWallets$.inboundSchema.optional(),
            StripeTransfer: V2ActivityStripeTransfer$.inboundSchema.optional(),
            VoidHold: V2ActivityVoidHold$.inboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                AddAccountMetadata: "addAccountMetadata",
                ConfirmHold: "confirmHold",
                CreateTransaction: "createTransaction",
                CreditWallet: "creditWallet",
                DebitWallet: "debitWallet",
                GetAccount: "getAccount",
                GetPayment: "getPayment",
                GetWallet: "getWallet",
                ListWallets: "listWallets",
                StripeTransfer: "stripeTransfer",
                VoidHold: "voidHold",
            });
        });

    export type Outbound = {
        AddAccountMetadata?: V2ActivityAddAccountMetadata$.Outbound | undefined;
        ConfirmHold?: V2ActivityConfirmHold$.Outbound | undefined;
        CreateTransaction?: V2ActivityCreateTransaction$.Outbound | undefined;
        CreditWallet?: V2ActivityCreditWallet$.Outbound | undefined;
        DebitWallet?: V2ActivityDebitWallet$.Outbound | undefined;
        GetAccount?: V2ActivityGetAccount$.Outbound | undefined;
        GetPayment?: V2ActivityGetPayment$.Outbound | undefined;
        GetWallet?: V2ActivityGetWallet$.Outbound | undefined;
        ListWallets?: V2ActivityListWallets$.Outbound | undefined;
        StripeTransfer?: V2ActivityStripeTransfer$.Outbound | undefined;
        VoidHold?: V2ActivityVoidHold$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        V2WorkflowInstanceHistoryStageInput
    > = z
        .object({
            addAccountMetadata: V2ActivityAddAccountMetadata$.outboundSchema.optional(),
            confirmHold: V2ActivityConfirmHold$.outboundSchema.optional(),
            createTransaction: V2ActivityCreateTransaction$.outboundSchema.optional(),
            creditWallet: V2ActivityCreditWallet$.outboundSchema.optional(),
            debitWallet: V2ActivityDebitWallet$.outboundSchema.optional(),
            getAccount: V2ActivityGetAccount$.outboundSchema.optional(),
            getPayment: V2ActivityGetPayment$.outboundSchema.optional(),
            getWallet: V2ActivityGetWallet$.outboundSchema.optional(),
            listWallets: V2ActivityListWallets$.outboundSchema.optional(),
            stripeTransfer: V2ActivityStripeTransfer$.outboundSchema.optional(),
            voidHold: V2ActivityVoidHold$.outboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                addAccountMetadata: "AddAccountMetadata",
                confirmHold: "ConfirmHold",
                createTransaction: "CreateTransaction",
                creditWallet: "CreditWallet",
                debitWallet: "DebitWallet",
                getAccount: "GetAccount",
                getPayment: "GetPayment",
                getWallet: "GetWallet",
                listWallets: "ListWallets",
                stripeTransfer: "StripeTransfer",
                voidHold: "VoidHold",
            });
        });
}
