/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  V3BankAccount,
  V3BankAccount$inboundSchema,
  V3BankAccount$Outbound,
  V3BankAccount$outboundSchema,
} from "./v3bankaccount.js";

export type V3BankAccountsCursorResponseCursor = {
  data: Array<V3BankAccount>;
  hasMore: boolean;
  next?: string | undefined;
  pageSize: number;
  previous?: string | undefined;
};

export type V3BankAccountsCursorResponse = {
  cursor: V3BankAccountsCursorResponseCursor;
};

/** @internal */
export const V3BankAccountsCursorResponseCursor$inboundSchema: z.ZodType<
  V3BankAccountsCursorResponseCursor,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.array(V3BankAccount$inboundSchema),
  hasMore: z.boolean(),
  next: z.string().optional(),
  pageSize: z.number().int(),
  previous: z.string().optional(),
});

/** @internal */
export type V3BankAccountsCursorResponseCursor$Outbound = {
  data: Array<V3BankAccount$Outbound>;
  hasMore: boolean;
  next?: string | undefined;
  pageSize: number;
  previous?: string | undefined;
};

/** @internal */
export const V3BankAccountsCursorResponseCursor$outboundSchema: z.ZodType<
  V3BankAccountsCursorResponseCursor$Outbound,
  z.ZodTypeDef,
  V3BankAccountsCursorResponseCursor
> = z.object({
  data: z.array(V3BankAccount$outboundSchema),
  hasMore: z.boolean(),
  next: z.string().optional(),
  pageSize: z.number().int(),
  previous: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V3BankAccountsCursorResponseCursor$ {
  /** @deprecated use `V3BankAccountsCursorResponseCursor$inboundSchema` instead. */
  export const inboundSchema = V3BankAccountsCursorResponseCursor$inboundSchema;
  /** @deprecated use `V3BankAccountsCursorResponseCursor$outboundSchema` instead. */
  export const outboundSchema =
    V3BankAccountsCursorResponseCursor$outboundSchema;
  /** @deprecated use `V3BankAccountsCursorResponseCursor$Outbound` instead. */
  export type Outbound = V3BankAccountsCursorResponseCursor$Outbound;
}

export function v3BankAccountsCursorResponseCursorToJSON(
  v3BankAccountsCursorResponseCursor: V3BankAccountsCursorResponseCursor,
): string {
  return JSON.stringify(
    V3BankAccountsCursorResponseCursor$outboundSchema.parse(
      v3BankAccountsCursorResponseCursor,
    ),
  );
}

export function v3BankAccountsCursorResponseCursorFromJSON(
  jsonString: string,
): SafeParseResult<V3BankAccountsCursorResponseCursor, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      V3BankAccountsCursorResponseCursor$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V3BankAccountsCursorResponseCursor' from JSON`,
  );
}

/** @internal */
export const V3BankAccountsCursorResponse$inboundSchema: z.ZodType<
  V3BankAccountsCursorResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  cursor: z.lazy(() => V3BankAccountsCursorResponseCursor$inboundSchema),
});

/** @internal */
export type V3BankAccountsCursorResponse$Outbound = {
  cursor: V3BankAccountsCursorResponseCursor$Outbound;
};

/** @internal */
export const V3BankAccountsCursorResponse$outboundSchema: z.ZodType<
  V3BankAccountsCursorResponse$Outbound,
  z.ZodTypeDef,
  V3BankAccountsCursorResponse
> = z.object({
  cursor: z.lazy(() => V3BankAccountsCursorResponseCursor$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V3BankAccountsCursorResponse$ {
  /** @deprecated use `V3BankAccountsCursorResponse$inboundSchema` instead. */
  export const inboundSchema = V3BankAccountsCursorResponse$inboundSchema;
  /** @deprecated use `V3BankAccountsCursorResponse$outboundSchema` instead. */
  export const outboundSchema = V3BankAccountsCursorResponse$outboundSchema;
  /** @deprecated use `V3BankAccountsCursorResponse$Outbound` instead. */
  export type Outbound = V3BankAccountsCursorResponse$Outbound;
}

export function v3BankAccountsCursorResponseToJSON(
  v3BankAccountsCursorResponse: V3BankAccountsCursorResponse,
): string {
  return JSON.stringify(
    V3BankAccountsCursorResponse$outboundSchema.parse(
      v3BankAccountsCursorResponse,
    ),
  );
}

export function v3BankAccountsCursorResponseFromJSON(
  jsonString: string,
): SafeParseResult<V3BankAccountsCursorResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V3BankAccountsCursorResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V3BankAccountsCursorResponse' from JSON`,
  );
}
