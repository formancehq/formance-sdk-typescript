/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  V3PaymentServiceUser,
  V3PaymentServiceUser$inboundSchema,
  V3PaymentServiceUser$Outbound,
  V3PaymentServiceUser$outboundSchema,
} from "./v3paymentserviceuser.js";

export type V3PaymentServiceUsersCursorResponseCursor = {
  data: Array<V3PaymentServiceUser>;
  hasMore: boolean;
  next?: string | undefined;
  pageSize: number;
  previous?: string | undefined;
};

export type V3PaymentServiceUsersCursorResponse = {
  cursor: V3PaymentServiceUsersCursorResponseCursor;
};

/** @internal */
export const V3PaymentServiceUsersCursorResponseCursor$inboundSchema: z.ZodType<
  V3PaymentServiceUsersCursorResponseCursor,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.array(V3PaymentServiceUser$inboundSchema),
  hasMore: z.boolean(),
  next: z.string().optional(),
  pageSize: z.number().int(),
  previous: z.string().optional(),
});

/** @internal */
export type V3PaymentServiceUsersCursorResponseCursor$Outbound = {
  data: Array<V3PaymentServiceUser$Outbound>;
  hasMore: boolean;
  next?: string | undefined;
  pageSize: number;
  previous?: string | undefined;
};

/** @internal */
export const V3PaymentServiceUsersCursorResponseCursor$outboundSchema:
  z.ZodType<
    V3PaymentServiceUsersCursorResponseCursor$Outbound,
    z.ZodTypeDef,
    V3PaymentServiceUsersCursorResponseCursor
  > = z.object({
    data: z.array(V3PaymentServiceUser$outboundSchema),
    hasMore: z.boolean(),
    next: z.string().optional(),
    pageSize: z.number().int(),
    previous: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V3PaymentServiceUsersCursorResponseCursor$ {
  /** @deprecated use `V3PaymentServiceUsersCursorResponseCursor$inboundSchema` instead. */
  export const inboundSchema =
    V3PaymentServiceUsersCursorResponseCursor$inboundSchema;
  /** @deprecated use `V3PaymentServiceUsersCursorResponseCursor$outboundSchema` instead. */
  export const outboundSchema =
    V3PaymentServiceUsersCursorResponseCursor$outboundSchema;
  /** @deprecated use `V3PaymentServiceUsersCursorResponseCursor$Outbound` instead. */
  export type Outbound = V3PaymentServiceUsersCursorResponseCursor$Outbound;
}

export function v3PaymentServiceUsersCursorResponseCursorToJSON(
  v3PaymentServiceUsersCursorResponseCursor:
    V3PaymentServiceUsersCursorResponseCursor,
): string {
  return JSON.stringify(
    V3PaymentServiceUsersCursorResponseCursor$outboundSchema.parse(
      v3PaymentServiceUsersCursorResponseCursor,
    ),
  );
}

export function v3PaymentServiceUsersCursorResponseCursorFromJSON(
  jsonString: string,
): SafeParseResult<
  V3PaymentServiceUsersCursorResponseCursor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      V3PaymentServiceUsersCursorResponseCursor$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'V3PaymentServiceUsersCursorResponseCursor' from JSON`,
  );
}

/** @internal */
export const V3PaymentServiceUsersCursorResponse$inboundSchema: z.ZodType<
  V3PaymentServiceUsersCursorResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  cursor: z.lazy(() => V3PaymentServiceUsersCursorResponseCursor$inboundSchema),
});

/** @internal */
export type V3PaymentServiceUsersCursorResponse$Outbound = {
  cursor: V3PaymentServiceUsersCursorResponseCursor$Outbound;
};

/** @internal */
export const V3PaymentServiceUsersCursorResponse$outboundSchema: z.ZodType<
  V3PaymentServiceUsersCursorResponse$Outbound,
  z.ZodTypeDef,
  V3PaymentServiceUsersCursorResponse
> = z.object({
  cursor: z.lazy(() =>
    V3PaymentServiceUsersCursorResponseCursor$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V3PaymentServiceUsersCursorResponse$ {
  /** @deprecated use `V3PaymentServiceUsersCursorResponse$inboundSchema` instead. */
  export const inboundSchema =
    V3PaymentServiceUsersCursorResponse$inboundSchema;
  /** @deprecated use `V3PaymentServiceUsersCursorResponse$outboundSchema` instead. */
  export const outboundSchema =
    V3PaymentServiceUsersCursorResponse$outboundSchema;
  /** @deprecated use `V3PaymentServiceUsersCursorResponse$Outbound` instead. */
  export type Outbound = V3PaymentServiceUsersCursorResponse$Outbound;
}

export function v3PaymentServiceUsersCursorResponseToJSON(
  v3PaymentServiceUsersCursorResponse: V3PaymentServiceUsersCursorResponse,
): string {
  return JSON.stringify(
    V3PaymentServiceUsersCursorResponse$outboundSchema.parse(
      v3PaymentServiceUsersCursorResponse,
    ),
  );
}

export function v3PaymentServiceUsersCursorResponseFromJSON(
  jsonString: string,
): SafeParseResult<V3PaymentServiceUsersCursorResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      V3PaymentServiceUsersCursorResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V3PaymentServiceUsersCursorResponse' from JSON`,
  );
}
