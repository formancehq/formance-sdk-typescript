/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  BankAccount,
  BankAccount$inboundSchema,
  BankAccount$Outbound,
  BankAccount$outboundSchema,
} from "./bankaccount.js";

/**
 * OK
 */
export type BankAccountResponse = {
  data: BankAccount;
};

/** @internal */
export const BankAccountResponse$inboundSchema: z.ZodType<
  BankAccountResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: BankAccount$inboundSchema,
});

/** @internal */
export type BankAccountResponse$Outbound = {
  data: BankAccount$Outbound;
};

/** @internal */
export const BankAccountResponse$outboundSchema: z.ZodType<
  BankAccountResponse$Outbound,
  z.ZodTypeDef,
  BankAccountResponse
> = z.object({
  data: BankAccount$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BankAccountResponse$ {
  /** @deprecated use `BankAccountResponse$inboundSchema` instead. */
  export const inboundSchema = BankAccountResponse$inboundSchema;
  /** @deprecated use `BankAccountResponse$outboundSchema` instead. */
  export const outboundSchema = BankAccountResponse$outboundSchema;
  /** @deprecated use `BankAccountResponse$Outbound` instead. */
  export type Outbound = BankAccountResponse$Outbound;
}

export function bankAccountResponseToJSON(
  bankAccountResponse: BankAccountResponse,
): string {
  return JSON.stringify(
    BankAccountResponse$outboundSchema.parse(bankAccountResponse),
  );
}

export function bankAccountResponseFromJSON(
  jsonString: string,
): SafeParseResult<BankAccountResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BankAccountResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BankAccountResponse' from JSON`,
  );
}
