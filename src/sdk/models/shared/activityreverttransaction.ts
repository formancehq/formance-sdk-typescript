/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ActivityRevertTransaction = {
  id: string;
  ledger: string;
};

/** @internal */
export const ActivityRevertTransaction$inboundSchema: z.ZodType<
  ActivityRevertTransaction,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  ledger: z.string(),
});

/** @internal */
export type ActivityRevertTransaction$Outbound = {
  id: string;
  ledger: string;
};

/** @internal */
export const ActivityRevertTransaction$outboundSchema: z.ZodType<
  ActivityRevertTransaction$Outbound,
  z.ZodTypeDef,
  ActivityRevertTransaction
> = z.object({
  id: z.string(),
  ledger: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ActivityRevertTransaction$ {
  /** @deprecated use `ActivityRevertTransaction$inboundSchema` instead. */
  export const inboundSchema = ActivityRevertTransaction$inboundSchema;
  /** @deprecated use `ActivityRevertTransaction$outboundSchema` instead. */
  export const outboundSchema = ActivityRevertTransaction$outboundSchema;
  /** @deprecated use `ActivityRevertTransaction$Outbound` instead. */
  export type Outbound = ActivityRevertTransaction$Outbound;
}

export function activityRevertTransactionToJSON(
  activityRevertTransaction: ActivityRevertTransaction,
): string {
  return JSON.stringify(
    ActivityRevertTransaction$outboundSchema.parse(activityRevertTransaction),
  );
}

export function activityRevertTransactionFromJSON(
  jsonString: string,
): SafeParseResult<ActivityRevertTransaction, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ActivityRevertTransaction$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ActivityRevertTransaction' from JSON`,
  );
}
