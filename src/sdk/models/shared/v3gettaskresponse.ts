/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  V3Task,
  V3Task$inboundSchema,
  V3Task$Outbound,
  V3Task$outboundSchema,
} from "./v3task.js";

export type V3GetTaskResponse = {
  data: V3Task;
};

/** @internal */
export const V3GetTaskResponse$inboundSchema: z.ZodType<
  V3GetTaskResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: V3Task$inboundSchema,
});

/** @internal */
export type V3GetTaskResponse$Outbound = {
  data: V3Task$Outbound;
};

/** @internal */
export const V3GetTaskResponse$outboundSchema: z.ZodType<
  V3GetTaskResponse$Outbound,
  z.ZodTypeDef,
  V3GetTaskResponse
> = z.object({
  data: V3Task$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V3GetTaskResponse$ {
  /** @deprecated use `V3GetTaskResponse$inboundSchema` instead. */
  export const inboundSchema = V3GetTaskResponse$inboundSchema;
  /** @deprecated use `V3GetTaskResponse$outboundSchema` instead. */
  export const outboundSchema = V3GetTaskResponse$outboundSchema;
  /** @deprecated use `V3GetTaskResponse$Outbound` instead. */
  export type Outbound = V3GetTaskResponse$Outbound;
}

export function v3GetTaskResponseToJSON(
  v3GetTaskResponse: V3GetTaskResponse,
): string {
  return JSON.stringify(
    V3GetTaskResponse$outboundSchema.parse(v3GetTaskResponse),
  );
}

export function v3GetTaskResponseFromJSON(
  jsonString: string,
): SafeParseResult<V3GetTaskResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V3GetTaskResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V3GetTaskResponse' from JSON`,
  );
}
