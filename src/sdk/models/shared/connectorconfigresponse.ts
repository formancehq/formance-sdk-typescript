/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type ConnectorConfigResponse = {
    data?: any | undefined;
};

/** @internal */
export namespace ConnectorConfigResponse$ {
    export type Inbound = {
        data?: any | undefined;
    };

    export const inboundSchema: z.ZodType<ConnectorConfigResponse, z.ZodTypeDef, Inbound> = z
        .object({
            data: z.any().optional(),
        })
        .transform((v) => {
            return {
                ...(v.data === undefined ? null : { data: v.data }),
            };
        });

    export type Outbound = {
        data?: any | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ConnectorConfigResponse> = z
        .object({
            data: z.any().optional(),
        })
        .transform((v) => {
            return {
                ...(v.data === undefined ? null : { data: v.data }),
            };
        });
}
