/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { V2Wallet, V2Wallet$ } from "./v2wallet";
import * as z from "zod";

export type V2ListWalletsResponseCursor = {
    data: Array<V2Wallet>;
    hasMore?: boolean | undefined;
    next?: string | undefined;
    pageSize: number;
    previous?: string | undefined;
};

export type V2ListWalletsResponse = {
    cursor: V2ListWalletsResponseCursor;
};

/** @internal */
export namespace V2ListWalletsResponseCursor$ {
    export const inboundSchema: z.ZodType<V2ListWalletsResponseCursor, z.ZodTypeDef, unknown> =
        z.object({
            data: z.array(V2Wallet$.inboundSchema),
            hasMore: z.boolean().optional(),
            next: z.string().optional(),
            pageSize: z.number().int(),
            previous: z.string().optional(),
        });

    export type Outbound = {
        data: Array<V2Wallet$.Outbound>;
        hasMore?: boolean | undefined;
        next?: string | undefined;
        pageSize: number;
        previous?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2ListWalletsResponseCursor> =
        z.object({
            data: z.array(V2Wallet$.outboundSchema),
            hasMore: z.boolean().optional(),
            next: z.string().optional(),
            pageSize: z.number().int(),
            previous: z.string().optional(),
        });
}

/** @internal */
export namespace V2ListWalletsResponse$ {
    export const inboundSchema: z.ZodType<V2ListWalletsResponse, z.ZodTypeDef, unknown> = z.object({
        cursor: z.lazy(() => V2ListWalletsResponseCursor$.inboundSchema),
    });

    export type Outbound = {
        cursor: V2ListWalletsResponseCursor$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2ListWalletsResponse> =
        z.object({
            cursor: z.lazy(() => V2ListWalletsResponseCursor$.outboundSchema),
        });
}
