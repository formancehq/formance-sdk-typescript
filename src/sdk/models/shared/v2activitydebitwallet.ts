/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  V2DebitWalletRequest,
  V2DebitWalletRequest$inboundSchema,
  V2DebitWalletRequest$Outbound,
  V2DebitWalletRequest$outboundSchema,
} from "./v2debitwalletrequest.js";

export type V2ActivityDebitWallet = {
  data?: V2DebitWalletRequest | undefined;
  id?: string | undefined;
};

/** @internal */
export const V2ActivityDebitWallet$inboundSchema: z.ZodType<
  V2ActivityDebitWallet,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: V2DebitWalletRequest$inboundSchema.optional(),
  id: z.string().optional(),
});

/** @internal */
export type V2ActivityDebitWallet$Outbound = {
  data?: V2DebitWalletRequest$Outbound | undefined;
  id?: string | undefined;
};

/** @internal */
export const V2ActivityDebitWallet$outboundSchema: z.ZodType<
  V2ActivityDebitWallet$Outbound,
  z.ZodTypeDef,
  V2ActivityDebitWallet
> = z.object({
  data: V2DebitWalletRequest$outboundSchema.optional(),
  id: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V2ActivityDebitWallet$ {
  /** @deprecated use `V2ActivityDebitWallet$inboundSchema` instead. */
  export const inboundSchema = V2ActivityDebitWallet$inboundSchema;
  /** @deprecated use `V2ActivityDebitWallet$outboundSchema` instead. */
  export const outboundSchema = V2ActivityDebitWallet$outboundSchema;
  /** @deprecated use `V2ActivityDebitWallet$Outbound` instead. */
  export type Outbound = V2ActivityDebitWallet$Outbound;
}

export function v2ActivityDebitWalletToJSON(
  v2ActivityDebitWallet: V2ActivityDebitWallet,
): string {
  return JSON.stringify(
    V2ActivityDebitWallet$outboundSchema.parse(v2ActivityDebitWallet),
  );
}

export function v2ActivityDebitWalletFromJSON(
  jsonString: string,
): SafeParseResult<V2ActivityDebitWallet, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V2ActivityDebitWallet$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V2ActivityDebitWallet' from JSON`,
  );
}
