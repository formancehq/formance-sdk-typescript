/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    WorkflowInstance,
    WorkflowInstance$inboundSchema,
    WorkflowInstance$Outbound,
    WorkflowInstance$outboundSchema,
} from "./workflowinstance.js";
import * as z from "zod";

export type RunWorkflowResponse = {
    data: WorkflowInstance;
};

/** @internal */
export const RunWorkflowResponse$inboundSchema: z.ZodType<
    RunWorkflowResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    data: WorkflowInstance$inboundSchema,
});

/** @internal */
export type RunWorkflowResponse$Outbound = {
    data: WorkflowInstance$Outbound;
};

/** @internal */
export const RunWorkflowResponse$outboundSchema: z.ZodType<
    RunWorkflowResponse$Outbound,
    z.ZodTypeDef,
    RunWorkflowResponse
> = z.object({
    data: WorkflowInstance$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RunWorkflowResponse$ {
    /** @deprecated use `RunWorkflowResponse$inboundSchema` instead. */
    export const inboundSchema = RunWorkflowResponse$inboundSchema;
    /** @deprecated use `RunWorkflowResponse$outboundSchema` instead. */
    export const outboundSchema = RunWorkflowResponse$outboundSchema;
    /** @deprecated use `RunWorkflowResponse$Outbound` instead. */
    export type Outbound = RunWorkflowResponse$Outbound;
}
