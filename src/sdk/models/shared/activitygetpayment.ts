/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ActivityGetPayment = {
  id: string;
};

/** @internal */
export const ActivityGetPayment$inboundSchema: z.ZodType<
  ActivityGetPayment,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type ActivityGetPayment$Outbound = {
  id: string;
};

/** @internal */
export const ActivityGetPayment$outboundSchema: z.ZodType<
  ActivityGetPayment$Outbound,
  z.ZodTypeDef,
  ActivityGetPayment
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ActivityGetPayment$ {
  /** @deprecated use `ActivityGetPayment$inboundSchema` instead. */
  export const inboundSchema = ActivityGetPayment$inboundSchema;
  /** @deprecated use `ActivityGetPayment$outboundSchema` instead. */
  export const outboundSchema = ActivityGetPayment$outboundSchema;
  /** @deprecated use `ActivityGetPayment$Outbound` instead. */
  export type Outbound = ActivityGetPayment$Outbound;
}

export function activityGetPaymentToJSON(
  activityGetPayment: ActivityGetPayment,
): string {
  return JSON.stringify(
    ActivityGetPayment$outboundSchema.parse(activityGetPayment),
  );
}

export function activityGetPaymentFromJSON(
  jsonString: string,
): SafeParseResult<ActivityGetPayment, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ActivityGetPayment$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ActivityGetPayment' from JSON`,
  );
}
