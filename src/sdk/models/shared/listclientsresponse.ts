/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  Client,
  Client$inboundSchema,
  Client$Outbound,
  Client$outboundSchema,
} from "./client.js";

export type ListClientsResponse = {
  data?: Array<Client> | undefined;
};

/** @internal */
export const ListClientsResponse$inboundSchema: z.ZodType<
  ListClientsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.array(Client$inboundSchema).optional(),
});

/** @internal */
export type ListClientsResponse$Outbound = {
  data?: Array<Client$Outbound> | undefined;
};

/** @internal */
export const ListClientsResponse$outboundSchema: z.ZodType<
  ListClientsResponse$Outbound,
  z.ZodTypeDef,
  ListClientsResponse
> = z.object({
  data: z.array(Client$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListClientsResponse$ {
  /** @deprecated use `ListClientsResponse$inboundSchema` instead. */
  export const inboundSchema = ListClientsResponse$inboundSchema;
  /** @deprecated use `ListClientsResponse$outboundSchema` instead. */
  export const outboundSchema = ListClientsResponse$outboundSchema;
  /** @deprecated use `ListClientsResponse$Outbound` instead. */
  export type Outbound = ListClientsResponse$Outbound;
}
