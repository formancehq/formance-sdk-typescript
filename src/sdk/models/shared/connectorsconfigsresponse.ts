/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class Key extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "dataType" })
    dataType: string;

    @SpeakeasyMetadata()
    @Expose({ name: "required" })
    required: boolean;
}

export class ConnectorsConfigsResponseConnector extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "key" })
    @Type(() => Key)
    key: Key;
}

export class ConnectorsConfigsResponseData extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "connector" })
    @Type(() => ConnectorsConfigsResponseConnector)
    connector: ConnectorsConfigsResponseConnector;
}

export class ConnectorsConfigsResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "data" })
    @Type(() => ConnectorsConfigsResponseData)
    data: ConnectorsConfigsResponseData;
}
