/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { V2TriggerOccurrence, V2TriggerOccurrence$ } from "./v2triggeroccurrence";
import * as z from "zod";

export type V2ListTriggersOccurrencesResponseCursor = {
    data: Array<V2TriggerOccurrence>;
    hasMore: boolean;
    next?: string | undefined;
    pageSize: number;
    previous?: string | undefined;
};

export type V2ListTriggersOccurrencesResponse = {
    cursor: V2ListTriggersOccurrencesResponseCursor;
};

/** @internal */
export namespace V2ListTriggersOccurrencesResponseCursor$ {
    export const inboundSchema: z.ZodType<
        V2ListTriggersOccurrencesResponseCursor,
        z.ZodTypeDef,
        unknown
    > = z.object({
        data: z.array(V2TriggerOccurrence$.inboundSchema),
        hasMore: z.boolean(),
        next: z.string().optional(),
        pageSize: z.number().int(),
        previous: z.string().optional(),
    });

    export type Outbound = {
        data: Array<V2TriggerOccurrence$.Outbound>;
        hasMore: boolean;
        next?: string | undefined;
        pageSize: number;
        previous?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        V2ListTriggersOccurrencesResponseCursor
    > = z.object({
        data: z.array(V2TriggerOccurrence$.outboundSchema),
        hasMore: z.boolean(),
        next: z.string().optional(),
        pageSize: z.number().int(),
        previous: z.string().optional(),
    });
}

/** @internal */
export namespace V2ListTriggersOccurrencesResponse$ {
    export const inboundSchema: z.ZodType<
        V2ListTriggersOccurrencesResponse,
        z.ZodTypeDef,
        unknown
    > = z.object({
        cursor: z.lazy(() => V2ListTriggersOccurrencesResponseCursor$.inboundSchema),
    });

    export type Outbound = {
        cursor: V2ListTriggersOccurrencesResponseCursor$.Outbound;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        V2ListTriggersOccurrencesResponse
    > = z.object({
        cursor: z.lazy(() => V2ListTriggersOccurrencesResponseCursor$.outboundSchema),
    });
}
