/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type LedgerAccountSubject = {
  identifier: string;
  type: string;
};

/** @internal */
export const LedgerAccountSubject$inboundSchema: z.ZodType<
  LedgerAccountSubject,
  z.ZodTypeDef,
  unknown
> = z.object({
  identifier: z.string(),
  type: z.string(),
});

/** @internal */
export type LedgerAccountSubject$Outbound = {
  identifier: string;
  type: string;
};

/** @internal */
export const LedgerAccountSubject$outboundSchema: z.ZodType<
  LedgerAccountSubject$Outbound,
  z.ZodTypeDef,
  LedgerAccountSubject
> = z.object({
  identifier: z.string(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LedgerAccountSubject$ {
  /** @deprecated use `LedgerAccountSubject$inboundSchema` instead. */
  export const inboundSchema = LedgerAccountSubject$inboundSchema;
  /** @deprecated use `LedgerAccountSubject$outboundSchema` instead. */
  export const outboundSchema = LedgerAccountSubject$outboundSchema;
  /** @deprecated use `LedgerAccountSubject$Outbound` instead. */
  export type Outbound = LedgerAccountSubject$Outbound;
}
