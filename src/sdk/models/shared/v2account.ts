/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    V2Volume,
    V2Volume$inboundSchema,
    V2Volume$Outbound,
    V2Volume$outboundSchema,
} from "./v2volume.js";
import * as z from "zod";

export type V2Account = {
    address: string;
    effectiveVolumes?: { [k: string]: V2Volume } | undefined;
    metadata: { [k: string]: string };
    volumes?: { [k: string]: V2Volume } | undefined;
};

/** @internal */
export const V2Account$inboundSchema: z.ZodType<V2Account, z.ZodTypeDef, unknown> = z.object({
    address: z.string(),
    effectiveVolumes: z.record(V2Volume$inboundSchema).optional(),
    metadata: z.record(z.string()),
    volumes: z.record(V2Volume$inboundSchema).optional(),
});

/** @internal */
export type V2Account$Outbound = {
    address: string;
    effectiveVolumes?: { [k: string]: V2Volume$Outbound } | undefined;
    metadata: { [k: string]: string };
    volumes?: { [k: string]: V2Volume$Outbound } | undefined;
};

/** @internal */
export const V2Account$outboundSchema: z.ZodType<V2Account$Outbound, z.ZodTypeDef, V2Account> =
    z.object({
        address: z.string(),
        effectiveVolumes: z.record(V2Volume$outboundSchema).optional(),
        metadata: z.record(z.string()),
        volumes: z.record(V2Volume$outboundSchema).optional(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V2Account$ {
    /** @deprecated use `V2Account$inboundSchema` instead. */
    export const inboundSchema = V2Account$inboundSchema;
    /** @deprecated use `V2Account$outboundSchema` instead. */
    export const outboundSchema = V2Account$outboundSchema;
    /** @deprecated use `V2Account$Outbound` instead. */
    export type Outbound = V2Account$Outbound;
}
