/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type AssetHolder = {
    assets: Record<string, number>;
};

/** @internal */
export namespace AssetHolder$ {
    export type Inbound = {
        assets: Record<string, number>;
    };

    export const inboundSchema: z.ZodType<AssetHolder, z.ZodTypeDef, Inbound> = z
        .object({
            assets: z.record(z.number().int()),
        })
        .transform((v) => {
            return {
                assets: v.assets,
            };
        });

    export type Outbound = {
        assets: Record<string, number>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AssetHolder> = z
        .object({
            assets: z.record(z.number().int()),
        })
        .transform((v) => {
            return {
                assets: v.assets,
            };
        });
}
