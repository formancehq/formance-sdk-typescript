/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    WorkflowInstance,
    WorkflowInstance$inboundSchema,
    WorkflowInstance$Outbound,
    WorkflowInstance$outboundSchema,
} from "./workflowinstance.js";
import * as z from "zod";

export type ListRunsResponse = {
    data: Array<WorkflowInstance>;
};

/** @internal */
export const ListRunsResponse$inboundSchema: z.ZodType<ListRunsResponse, z.ZodTypeDef, unknown> =
    z.object({
        data: z.array(WorkflowInstance$inboundSchema),
    });

/** @internal */
export type ListRunsResponse$Outbound = {
    data: Array<WorkflowInstance$Outbound>;
};

/** @internal */
export const ListRunsResponse$outboundSchema: z.ZodType<
    ListRunsResponse$Outbound,
    z.ZodTypeDef,
    ListRunsResponse
> = z.object({
    data: z.array(WorkflowInstance$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListRunsResponse$ {
    /** @deprecated use `ListRunsResponse$inboundSchema` instead. */
    export const inboundSchema = ListRunsResponse$inboundSchema;
    /** @deprecated use `ListRunsResponse$outboundSchema` instead. */
    export const outboundSchema = ListRunsResponse$outboundSchema;
    /** @deprecated use `ListRunsResponse$Outbound` instead. */
    export type Outbound = ListRunsResponse$Outbound;
}
