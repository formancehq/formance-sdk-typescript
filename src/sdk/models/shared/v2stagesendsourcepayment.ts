/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V2StageSendSourcePayment = {
  id: string;
};

/** @internal */
export const V2StageSendSourcePayment$inboundSchema: z.ZodType<
  V2StageSendSourcePayment,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type V2StageSendSourcePayment$Outbound = {
  id: string;
};

/** @internal */
export const V2StageSendSourcePayment$outboundSchema: z.ZodType<
  V2StageSendSourcePayment$Outbound,
  z.ZodTypeDef,
  V2StageSendSourcePayment
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V2StageSendSourcePayment$ {
  /** @deprecated use `V2StageSendSourcePayment$inboundSchema` instead. */
  export const inboundSchema = V2StageSendSourcePayment$inboundSchema;
  /** @deprecated use `V2StageSendSourcePayment$outboundSchema` instead. */
  export const outboundSchema = V2StageSendSourcePayment$outboundSchema;
  /** @deprecated use `V2StageSendSourcePayment$Outbound` instead. */
  export type Outbound = V2StageSendSourcePayment$Outbound;
}

export function v2StageSendSourcePaymentToJSON(
  v2StageSendSourcePayment: V2StageSendSourcePayment,
): string {
  return JSON.stringify(
    V2StageSendSourcePayment$outboundSchema.parse(v2StageSendSourcePayment),
  );
}

export function v2StageSendSourcePaymentFromJSON(
  jsonString: string,
): SafeParseResult<V2StageSendSourcePayment, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V2StageSendSourcePayment$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V2StageSendSourcePayment' from JSON`,
  );
}
