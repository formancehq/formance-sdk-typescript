/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    LedgerInfo,
    LedgerInfo$inboundSchema,
    LedgerInfo$Outbound,
    LedgerInfo$outboundSchema,
} from "./ledgerinfo.js";
import * as z from "zod";

export type LedgerInfoResponse = {
    data?: LedgerInfo | undefined;
};

/** @internal */
export const LedgerInfoResponse$inboundSchema: z.ZodType<
    LedgerInfoResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    data: LedgerInfo$inboundSchema.optional(),
});

/** @internal */
export type LedgerInfoResponse$Outbound = {
    data?: LedgerInfo$Outbound | undefined;
};

/** @internal */
export const LedgerInfoResponse$outboundSchema: z.ZodType<
    LedgerInfoResponse$Outbound,
    z.ZodTypeDef,
    LedgerInfoResponse
> = z.object({
    data: LedgerInfo$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LedgerInfoResponse$ {
    /** @deprecated use `LedgerInfoResponse$inboundSchema` instead. */
    export const inboundSchema = LedgerInfoResponse$inboundSchema;
    /** @deprecated use `LedgerInfoResponse$outboundSchema` instead. */
    export const outboundSchema = LedgerInfoResponse$outboundSchema;
    /** @deprecated use `LedgerInfoResponse$Outbound` instead. */
    export type Outbound = LedgerInfoResponse$Outbound;
}
