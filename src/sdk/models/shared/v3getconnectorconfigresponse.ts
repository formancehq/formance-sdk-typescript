/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  V3InstallConnectorRequest,
  V3InstallConnectorRequest$inboundSchema,
  V3InstallConnectorRequest$Outbound,
  V3InstallConnectorRequest$outboundSchema,
} from "./v3installconnectorrequest.js";

export type V3GetConnectorConfigResponse = {
  data: V3InstallConnectorRequest;
};

/** @internal */
export const V3GetConnectorConfigResponse$inboundSchema: z.ZodType<
  V3GetConnectorConfigResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: V3InstallConnectorRequest$inboundSchema,
});

/** @internal */
export type V3GetConnectorConfigResponse$Outbound = {
  data: V3InstallConnectorRequest$Outbound;
};

/** @internal */
export const V3GetConnectorConfigResponse$outboundSchema: z.ZodType<
  V3GetConnectorConfigResponse$Outbound,
  z.ZodTypeDef,
  V3GetConnectorConfigResponse
> = z.object({
  data: V3InstallConnectorRequest$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V3GetConnectorConfigResponse$ {
  /** @deprecated use `V3GetConnectorConfigResponse$inboundSchema` instead. */
  export const inboundSchema = V3GetConnectorConfigResponse$inboundSchema;
  /** @deprecated use `V3GetConnectorConfigResponse$outboundSchema` instead. */
  export const outboundSchema = V3GetConnectorConfigResponse$outboundSchema;
  /** @deprecated use `V3GetConnectorConfigResponse$Outbound` instead. */
  export type Outbound = V3GetConnectorConfigResponse$Outbound;
}

export function v3GetConnectorConfigResponseToJSON(
  v3GetConnectorConfigResponse: V3GetConnectorConfigResponse,
): string {
  return JSON.stringify(
    V3GetConnectorConfigResponse$outboundSchema.parse(
      v3GetConnectorConfigResponse,
    ),
  );
}

export function v3GetConnectorConfigResponseFromJSON(
  jsonString: string,
): SafeParseResult<V3GetConnectorConfigResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V3GetConnectorConfigResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V3GetConnectorConfigResponse' from JSON`,
  );
}
