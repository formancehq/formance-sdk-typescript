/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  WorkflowInstance,
  WorkflowInstance$inboundSchema,
  WorkflowInstance$Outbound,
  WorkflowInstance$outboundSchema,
} from "./workflowinstance.js";

export type GetWorkflowInstanceResponse = {
  data: WorkflowInstance;
};

/** @internal */
export const GetWorkflowInstanceResponse$inboundSchema: z.ZodType<
  GetWorkflowInstanceResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: WorkflowInstance$inboundSchema,
});

/** @internal */
export type GetWorkflowInstanceResponse$Outbound = {
  data: WorkflowInstance$Outbound;
};

/** @internal */
export const GetWorkflowInstanceResponse$outboundSchema: z.ZodType<
  GetWorkflowInstanceResponse$Outbound,
  z.ZodTypeDef,
  GetWorkflowInstanceResponse
> = z.object({
  data: WorkflowInstance$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetWorkflowInstanceResponse$ {
  /** @deprecated use `GetWorkflowInstanceResponse$inboundSchema` instead. */
  export const inboundSchema = GetWorkflowInstanceResponse$inboundSchema;
  /** @deprecated use `GetWorkflowInstanceResponse$outboundSchema` instead. */
  export const outboundSchema = GetWorkflowInstanceResponse$outboundSchema;
  /** @deprecated use `GetWorkflowInstanceResponse$Outbound` instead. */
  export type Outbound = GetWorkflowInstanceResponse$Outbound;
}
