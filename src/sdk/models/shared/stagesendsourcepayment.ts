/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type StageSendSourcePayment = {
  id: string;
};

/** @internal */
export const StageSendSourcePayment$inboundSchema: z.ZodType<
  StageSendSourcePayment,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type StageSendSourcePayment$Outbound = {
  id: string;
};

/** @internal */
export const StageSendSourcePayment$outboundSchema: z.ZodType<
  StageSendSourcePayment$Outbound,
  z.ZodTypeDef,
  StageSendSourcePayment
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StageSendSourcePayment$ {
  /** @deprecated use `StageSendSourcePayment$inboundSchema` instead. */
  export const inboundSchema = StageSendSourcePayment$inboundSchema;
  /** @deprecated use `StageSendSourcePayment$outboundSchema` instead. */
  export const outboundSchema = StageSendSourcePayment$outboundSchema;
  /** @deprecated use `StageSendSourcePayment$Outbound` instead. */
  export type Outbound = StageSendSourcePayment$Outbound;
}

export function stageSendSourcePaymentToJSON(
  stageSendSourcePayment: StageSendSourcePayment,
): string {
  return JSON.stringify(
    StageSendSourcePayment$outboundSchema.parse(stageSendSourcePayment),
  );
}

export function stageSendSourcePaymentFromJSON(
  jsonString: string,
): SafeParseResult<StageSendSourcePayment, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => StageSendSourcePayment$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'StageSendSourcePayment' from JSON`,
  );
}
