/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { OrchestrationTransaction, OrchestrationTransaction$ } from "./orchestrationtransaction";
import { z } from "zod";

export type ActivityCreateTransactionOutput = {
    data: OrchestrationTransaction;
};

/** @internal */
export namespace ActivityCreateTransactionOutput$ {
    export type Inbound = {
        data: OrchestrationTransaction$.Inbound;
    };

    export const inboundSchema: z.ZodType<ActivityCreateTransactionOutput, z.ZodTypeDef, Inbound> =
        z
            .object({
                data: OrchestrationTransaction$.inboundSchema,
            })
            .transform((v) => {
                return {
                    data: v.data,
                };
            });

    export type Outbound = {
        data: OrchestrationTransaction$.Outbound;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ActivityCreateTransactionOutput
    > = z
        .object({
            data: OrchestrationTransaction$.outboundSchema,
        })
        .transform((v) => {
            return {
                data: v.data,
            };
        });
}
