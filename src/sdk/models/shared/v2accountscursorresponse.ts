/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { V2Account, V2Account$ } from "./v2account";
import * as z from "zod";

export type V2AccountsCursorResponseCursor = {
    data: Array<V2Account>;
    hasMore: boolean;
    next?: string | undefined;
    pageSize: number;
    previous?: string | undefined;
};

export type V2AccountsCursorResponse = {
    cursor: V2AccountsCursorResponseCursor;
};

/** @internal */
export namespace V2AccountsCursorResponseCursor$ {
    export type Inbound = {
        data: Array<V2Account$.Inbound>;
        hasMore: boolean;
        next?: string | undefined;
        pageSize: number;
        previous?: string | undefined;
    };

    export const inboundSchema: z.ZodType<V2AccountsCursorResponseCursor, z.ZodTypeDef, Inbound> = z
        .object({
            data: z.array(V2Account$.inboundSchema),
            hasMore: z.boolean(),
            next: z.string().optional(),
            pageSize: z.number().int(),
            previous: z.string().optional(),
        })
        .transform((v) => {
            return {
                data: v.data,
                hasMore: v.hasMore,
                ...(v.next === undefined ? null : { next: v.next }),
                pageSize: v.pageSize,
                ...(v.previous === undefined ? null : { previous: v.previous }),
            };
        });

    export type Outbound = {
        data: Array<V2Account$.Outbound>;
        hasMore: boolean;
        next?: string | undefined;
        pageSize: number;
        previous?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2AccountsCursorResponseCursor> =
        z
            .object({
                data: z.array(V2Account$.outboundSchema),
                hasMore: z.boolean(),
                next: z.string().optional(),
                pageSize: z.number().int(),
                previous: z.string().optional(),
            })
            .transform((v) => {
                return {
                    data: v.data,
                    hasMore: v.hasMore,
                    ...(v.next === undefined ? null : { next: v.next }),
                    pageSize: v.pageSize,
                    ...(v.previous === undefined ? null : { previous: v.previous }),
                };
            });
}

/** @internal */
export namespace V2AccountsCursorResponse$ {
    export type Inbound = {
        cursor: V2AccountsCursorResponseCursor$.Inbound;
    };

    export const inboundSchema: z.ZodType<V2AccountsCursorResponse, z.ZodTypeDef, Inbound> = z
        .object({
            cursor: z.lazy(() => V2AccountsCursorResponseCursor$.inboundSchema),
        })
        .transform((v) => {
            return {
                cursor: v.cursor,
            };
        });

    export type Outbound = {
        cursor: V2AccountsCursorResponseCursor$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2AccountsCursorResponse> = z
        .object({
            cursor: z.lazy(() => V2AccountsCursorResponseCursor$.outboundSchema),
        })
        .transform((v) => {
            return {
                cursor: v.cursor,
            };
        });
}
