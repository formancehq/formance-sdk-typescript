/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type PolicyRequest = {
    ledgerName: string;
    ledgerQuery: { [k: string]: any };
    name: string;
    paymentsPoolID: string;
};

/** @internal */
export namespace PolicyRequest$ {
    export const inboundSchema: z.ZodType<PolicyRequest, z.ZodTypeDef, unknown> = z.object({
        ledgerName: z.string(),
        ledgerQuery: z.record(z.any()),
        name: z.string(),
        paymentsPoolID: z.string(),
    });

    export type Outbound = {
        ledgerName: string;
        ledgerQuery: { [k: string]: any };
        name: string;
        paymentsPoolID: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PolicyRequest> = z.object({
        ledgerName: z.string(),
        ledgerQuery: z.record(z.any()),
        name: z.string(),
        paymentsPoolID: z.string(),
    });
}
