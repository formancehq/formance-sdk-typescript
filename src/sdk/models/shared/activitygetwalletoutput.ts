/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { WalletWithBalances, WalletWithBalances$ } from "./walletwithbalances";
import { z } from "zod";

export type ActivityGetWalletOutput = {
    data: WalletWithBalances;
};

/** @internal */
export namespace ActivityGetWalletOutput$ {
    export type Inbound = {
        data: WalletWithBalances$.Inbound;
    };

    export const inboundSchema: z.ZodType<ActivityGetWalletOutput, z.ZodTypeDef, Inbound> = z
        .object({
            data: WalletWithBalances$.inboundSchema,
        })
        .transform((v) => {
            return {
                data: v.data,
            };
        });

    export type Outbound = {
        data: WalletWithBalances$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ActivityGetWalletOutput> = z
        .object({
            data: WalletWithBalances$.outboundSchema,
        })
        .transform((v) => {
            return {
                data: v.data,
            };
        });
}
