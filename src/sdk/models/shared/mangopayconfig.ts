/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type MangoPayConfig = {
  apiKey: string;
  clientID: string;
  endpoint: string;
  name: string;
  /**
   * The frequency at which the connector will try to fetch new BalanceTransaction objects from MangoPay API.
   *
   * @remarks
   */
  pollingPeriod?: string | undefined;
};

/** @internal */
export const MangoPayConfig$inboundSchema: z.ZodType<
  MangoPayConfig,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiKey: z.string(),
  clientID: z.string(),
  endpoint: z.string(),
  name: z.string(),
  pollingPeriod: z.string().default("120s"),
});

/** @internal */
export type MangoPayConfig$Outbound = {
  apiKey: string;
  clientID: string;
  endpoint: string;
  name: string;
  pollingPeriod: string;
};

/** @internal */
export const MangoPayConfig$outboundSchema: z.ZodType<
  MangoPayConfig$Outbound,
  z.ZodTypeDef,
  MangoPayConfig
> = z.object({
  apiKey: z.string(),
  clientID: z.string(),
  endpoint: z.string(),
  name: z.string(),
  pollingPeriod: z.string().default("120s"),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MangoPayConfig$ {
  /** @deprecated use `MangoPayConfig$inboundSchema` instead. */
  export const inboundSchema = MangoPayConfig$inboundSchema;
  /** @deprecated use `MangoPayConfig$outboundSchema` instead. */
  export const outboundSchema = MangoPayConfig$outboundSchema;
  /** @deprecated use `MangoPayConfig$Outbound` instead. */
  export type Outbound = MangoPayConfig$Outbound;
}

export function mangoPayConfigToJSON(mangoPayConfig: MangoPayConfig): string {
  return JSON.stringify(MangoPayConfig$outboundSchema.parse(mangoPayConfig));
}

export function mangoPayConfigFromJSON(
  jsonString: string,
): SafeParseResult<MangoPayConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MangoPayConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MangoPayConfig' from JSON`,
  );
}
