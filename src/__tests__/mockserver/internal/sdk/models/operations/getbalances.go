// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type GetBalancesRequest struct {
	// Filter balances involving given account, either as source or destination.
	Address *string `queryParam:"style=form,explode=true,name=address"`
	// Pagination cursor, will return accounts after given address, in descending order.
	After *string `queryParam:"style=form,explode=true,name=after"`
	// Parameter used in pagination requests. Maximum page size is set to 1000.
	// Set to the value of next for the next page of results.
	// Set to the value of previous for the previous page of results.
	// No other parameters can be set when this parameter is set.
	//
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// Name of the ledger.
	Ledger string `pathParam:"style=simple,explode=false,name=ledger"`
	// The maximum number of results to return per page.
	//
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
}

func (o *GetBalancesRequest) GetAddress() *string {
	if o == nil {
		return nil
	}
	return o.Address
}

func (o *GetBalancesRequest) GetAfter() *string {
	if o == nil {
		return nil
	}
	return o.After
}

func (o *GetBalancesRequest) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *GetBalancesRequest) GetLedger() string {
	if o == nil {
		return ""
	}
	return o.Ledger
}

func (o *GetBalancesRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

type GetBalancesResponse struct {
	// OK
	BalancesCursorResponse *components.BalancesCursorResponse
	HTTPMeta               components.HTTPMetadata `json:"-"`
}

func (o *GetBalancesResponse) GetBalancesCursorResponse() *components.BalancesCursorResponse {
	if o == nil {
		return nil
	}
	return o.BalancesCursorResponse
}

func (o *GetBalancesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
