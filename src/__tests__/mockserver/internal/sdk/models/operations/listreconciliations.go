// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type ListReconciliationsRequest struct {
	// Parameter used in pagination requests. Maximum page size is set to 15.
	// Set to the value of next for the next page of results.
	// Set to the value of previous for the previous page of results.
	// No other parameters can be set when this parameter is set.
	//
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// The maximum number of results to return per page.
	//
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
}

func (o *ListReconciliationsRequest) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *ListReconciliationsRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

type ListReconciliationsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	ReconciliationsCursorResponse *components.ReconciliationsCursorResponse
}

func (o *ListReconciliationsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListReconciliationsResponse) GetReconciliationsCursorResponse() *components.ReconciliationsCursorResponse {
	if o == nil {
		return nil
	}
	return o.ReconciliationsCursorResponse
}
