// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

type PaymentslistAccountsRequest struct {
	// Parameter used in pagination requests. Maximum page size is set to 15.
	// Set to the value of next for the next page of results.
	// Set to the value of previous for the previous page of results.
	// No other parameters can be set when this parameter is set.
	//
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// The maximum number of results to return per page.
	//
	PageSize *int64 `default:"15" queryParam:"style=form,explode=true,name=pageSize"`
	// Filters used to filter resources.
	//
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// Fields used to sort payments (default is date:desc).
	Sort []string `queryParam:"style=form,explode=true,name=sort"`
}

func (p PaymentslistAccountsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PaymentslistAccountsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PaymentslistAccountsRequest) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *PaymentslistAccountsRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *PaymentslistAccountsRequest) GetQuery() *string {
	if o == nil {
		return nil
	}
	return o.Query
}

func (o *PaymentslistAccountsRequest) GetSort() []string {
	if o == nil {
		return nil
	}
	return o.Sort
}

type PaymentslistAccountsResponse struct {
	// OK
	AccountsCursor *components.AccountsCursor
	HTTPMeta       components.HTTPMetadata `json:"-"`
}

func (o *PaymentslistAccountsResponse) GetAccountsCursor() *components.AccountsCursor {
	if o == nil {
		return nil
	}
	return o.AccountsCursor
}

func (o *PaymentslistAccountsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
