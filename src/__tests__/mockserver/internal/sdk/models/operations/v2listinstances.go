// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type V2ListInstancesRequest struct {
	// Parameter used in pagination requests.
	// Set to the value of next for the next page of results.
	// Set to the value of previous for the previous page of results.
	// No other parameters can be set when this parameter is set.
	//
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// The maximum number of results to return per page.
	//
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// Filter running instances
	Running *bool `queryParam:"style=form,explode=true,name=running"`
	// A workflow id
	WorkflowID *string `queryParam:"style=form,explode=true,name=workflowID"`
}

func (o *V2ListInstancesRequest) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *V2ListInstancesRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *V2ListInstancesRequest) GetRunning() *bool {
	if o == nil {
		return nil
	}
	return o.Running
}

func (o *V2ListInstancesRequest) GetWorkflowID() *string {
	if o == nil {
		return nil
	}
	return o.WorkflowID
}

type V2ListInstancesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// List of workflow instances
	V2ListRunsResponse *components.V2ListRunsResponse
}

func (o *V2ListInstancesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *V2ListInstancesResponse) GetV2ListRunsResponse() *components.V2ListRunsResponse {
	if o == nil {
		return nil
	}
	return o.V2ListRunsResponse
}
