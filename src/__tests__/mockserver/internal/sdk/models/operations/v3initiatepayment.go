// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

type V3InitiatePaymentRequest struct {
	V3InitiatePaymentRequest *components.V3InitiatePaymentRequest `request:"mediaType=application/json"`
	// If set to true, the request will not have to be validated. This is useful if we want to directly forward the request to the PSP.
	//
	NoValidation *bool `default:"false" queryParam:"style=form,explode=true,name=noValidation"`
}

func (v V3InitiatePaymentRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3InitiatePaymentRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *V3InitiatePaymentRequest) GetV3InitiatePaymentRequest() *components.V3InitiatePaymentRequest {
	if o == nil {
		return nil
	}
	return o.V3InitiatePaymentRequest
}

func (o *V3InitiatePaymentRequest) GetNoValidation() *bool {
	if o == nil {
		return nil
	}
	return o.NoValidation
}

type V3InitiatePaymentResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Accepted
	V3InitiatePaymentResponse *components.V3InitiatePaymentResponse
}

func (o *V3InitiatePaymentResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *V3InitiatePaymentResponse) GetV3InitiatePaymentResponse() *components.V3InitiatePaymentResponse {
	if o == nil {
		return nil
	}
	return o.V3InitiatePaymentResponse
}
