// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"math/big"
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

type AddMetadataOnTransactionRequest struct {
	// metadata
	RequestBody map[string]any `request:"mediaType=application/json"`
	// Name of the ledger.
	Ledger string `pathParam:"style=simple,explode=false,name=ledger"`
	// Transaction ID.
	Txid *big.Int `pathParam:"style=simple,explode=false,name=txid"`
}

func (a AddMetadataOnTransactionRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AddMetadataOnTransactionRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AddMetadataOnTransactionRequest) GetRequestBody() map[string]any {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

func (o *AddMetadataOnTransactionRequest) GetLedger() string {
	if o == nil {
		return ""
	}
	return o.Ledger
}

func (o *AddMetadataOnTransactionRequest) GetTxid() *big.Int {
	if o == nil {
		return big.NewInt(0)
	}
	return o.Txid
}

type AddMetadataOnTransactionResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
}

func (o *AddMetadataOnTransactionResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
