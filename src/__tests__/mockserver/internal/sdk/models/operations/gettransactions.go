// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

type GetTransactionsRequest struct {
	// Parameter used in pagination requests.
	// Set to the value of next for the next page of results.
	// Set to the value of previous for the previous page of results.
	// No other parameters can be set when the cursor is set.
	//
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// The maximum number of results to return per page
	PageSize *int64 `default:"15" queryParam:"style=form,explode=true,name=pageSize"`
	// A wallet ID to filter on
	WalletID *string `queryParam:"style=form,explode=true,name=walletID"`
}

func (g GetTransactionsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetTransactionsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetTransactionsRequest) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *GetTransactionsRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *GetTransactionsRequest) GetWalletID() *string {
	if o == nil {
		return nil
	}
	return o.WalletID
}

type GetTransactionsResponse struct {
	// OK
	GetTransactionsResponse *components.GetTransactionsResponse
	HTTPMeta                components.HTTPMetadata `json:"-"`
}

func (o *GetTransactionsResponse) GetGetTransactionsResponse() *components.GetTransactionsResponse {
	if o == nil {
		return nil
	}
	return o.GetTransactionsResponse
}

func (o *GetTransactionsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
