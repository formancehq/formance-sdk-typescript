// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

type V3Task struct {
	ConnectorID     *string          `json:"connectorID,omitempty"`
	CreatedAt       time.Time        `json:"createdAt"`
	CreatedObjectID *string          `json:"createdObjectID,omitempty"`
	Error           *string          `json:"error,omitempty"`
	ID              string           `json:"id"`
	Status          V3TaskStatusEnum `json:"status"`
	UpdatedAt       time.Time        `json:"updatedAt"`
}

func (v V3Task) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3Task) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *V3Task) GetConnectorID() *string {
	if o == nil {
		return nil
	}
	return o.ConnectorID
}

func (o *V3Task) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *V3Task) GetCreatedObjectID() *string {
	if o == nil {
		return nil
	}
	return o.CreatedObjectID
}

func (o *V3Task) GetError() *string {
	if o == nil {
		return nil
	}
	return o.Error
}

func (o *V3Task) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *V3Task) GetStatus() V3TaskStatusEnum {
	if o == nil {
		return V3TaskStatusEnum("")
	}
	return o.Status
}

func (o *V3Task) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}
