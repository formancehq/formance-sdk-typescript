// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"math/big"
	"mockserver/internal/sdk/utils"
	"time"
)

type V3CreatePaymentRequest struct {
	Adjustments          []V3CreatePaymentAdjustmentRequest `json:"adjustments,omitempty"`
	Amount               *big.Int                           `json:"amount"`
	Asset                string                             `json:"asset"`
	ConnectorID          string                             `json:"connectorID"`
	CreatedAt            time.Time                          `json:"createdAt"`
	DestinationAccountID *string                            `json:"destinationAccountID,omitempty"`
	InitialAmount        *big.Int                           `json:"initialAmount"`
	Metadata             map[string]string                  `json:"metadata,omitempty"`
	Reference            string                             `json:"reference"`
	Scheme               string                             `json:"scheme"`
	SourceAccountID      *string                            `json:"sourceAccountID,omitempty"`
	Type                 V3PaymentTypeEnum                  `json:"type"`
}

func (v V3CreatePaymentRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3CreatePaymentRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *V3CreatePaymentRequest) GetAdjustments() []V3CreatePaymentAdjustmentRequest {
	if o == nil {
		return nil
	}
	return o.Adjustments
}

func (o *V3CreatePaymentRequest) GetAmount() *big.Int {
	if o == nil {
		return big.NewInt(0)
	}
	return o.Amount
}

func (o *V3CreatePaymentRequest) GetAsset() string {
	if o == nil {
		return ""
	}
	return o.Asset
}

func (o *V3CreatePaymentRequest) GetConnectorID() string {
	if o == nil {
		return ""
	}
	return o.ConnectorID
}

func (o *V3CreatePaymentRequest) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *V3CreatePaymentRequest) GetDestinationAccountID() *string {
	if o == nil {
		return nil
	}
	return o.DestinationAccountID
}

func (o *V3CreatePaymentRequest) GetInitialAmount() *big.Int {
	if o == nil {
		return big.NewInt(0)
	}
	return o.InitialAmount
}

func (o *V3CreatePaymentRequest) GetMetadata() map[string]string {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *V3CreatePaymentRequest) GetReference() string {
	if o == nil {
		return ""
	}
	return o.Reference
}

func (o *V3CreatePaymentRequest) GetScheme() string {
	if o == nil {
		return ""
	}
	return o.Scheme
}

func (o *V3CreatePaymentRequest) GetSourceAccountID() *string {
	if o == nil {
		return nil
	}
	return o.SourceAccountID
}

func (o *V3CreatePaymentRequest) GetType() V3PaymentTypeEnum {
	if o == nil {
		return V3PaymentTypeEnum("")
	}
	return o.Type
}
