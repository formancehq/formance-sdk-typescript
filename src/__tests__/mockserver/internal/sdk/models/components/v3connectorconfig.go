// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"mockserver/internal/sdk/utils"
)

type V3ConnectorConfigType string

const (
	V3ConnectorConfigTypeV3AdyenConfig         V3ConnectorConfigType = "V3AdyenConfig"
	V3ConnectorConfigTypeV3AtlarConfig         V3ConnectorConfigType = "V3AtlarConfig"
	V3ConnectorConfigTypeV3BankingcircleConfig V3ConnectorConfigType = "V3BankingcircleConfig"
	V3ConnectorConfigTypeV3CurrencycloudConfig V3ConnectorConfigType = "V3CurrencycloudConfig"
	V3ConnectorConfigTypeV3DummypayConfig      V3ConnectorConfigType = "V3DummypayConfig"
	V3ConnectorConfigTypeV3GenericConfig       V3ConnectorConfigType = "V3GenericConfig"
	V3ConnectorConfigTypeV3MangopayConfig      V3ConnectorConfigType = "V3MangopayConfig"
	V3ConnectorConfigTypeV3ModulrConfig        V3ConnectorConfigType = "V3ModulrConfig"
	V3ConnectorConfigTypeV3MoneycorpConfig     V3ConnectorConfigType = "V3MoneycorpConfig"
	V3ConnectorConfigTypeV3StripeConfig        V3ConnectorConfigType = "V3StripeConfig"
	V3ConnectorConfigTypeV3WiseConfig          V3ConnectorConfigType = "V3WiseConfig"
)

type V3ConnectorConfig struct {
	V3AdyenConfig         *V3AdyenConfig
	V3AtlarConfig         *V3AtlarConfig
	V3BankingcircleConfig *V3BankingcircleConfig
	V3CurrencycloudConfig *V3CurrencycloudConfig
	V3DummypayConfig      *V3DummypayConfig
	V3GenericConfig       *V3GenericConfig
	V3MangopayConfig      *V3MangopayConfig
	V3ModulrConfig        *V3ModulrConfig
	V3MoneycorpConfig     *V3MoneycorpConfig
	V3StripeConfig        *V3StripeConfig
	V3WiseConfig          *V3WiseConfig

	Type V3ConnectorConfigType
}

func CreateV3ConnectorConfigV3AdyenConfig(v3AdyenConfig V3AdyenConfig) V3ConnectorConfig {
	typ := V3ConnectorConfigTypeV3AdyenConfig

	return V3ConnectorConfig{
		V3AdyenConfig: &v3AdyenConfig,
		Type:          typ,
	}
}

func CreateV3ConnectorConfigV3AtlarConfig(v3AtlarConfig V3AtlarConfig) V3ConnectorConfig {
	typ := V3ConnectorConfigTypeV3AtlarConfig

	return V3ConnectorConfig{
		V3AtlarConfig: &v3AtlarConfig,
		Type:          typ,
	}
}

func CreateV3ConnectorConfigV3BankingcircleConfig(v3BankingcircleConfig V3BankingcircleConfig) V3ConnectorConfig {
	typ := V3ConnectorConfigTypeV3BankingcircleConfig

	return V3ConnectorConfig{
		V3BankingcircleConfig: &v3BankingcircleConfig,
		Type:                  typ,
	}
}

func CreateV3ConnectorConfigV3CurrencycloudConfig(v3CurrencycloudConfig V3CurrencycloudConfig) V3ConnectorConfig {
	typ := V3ConnectorConfigTypeV3CurrencycloudConfig

	return V3ConnectorConfig{
		V3CurrencycloudConfig: &v3CurrencycloudConfig,
		Type:                  typ,
	}
}

func CreateV3ConnectorConfigV3DummypayConfig(v3DummypayConfig V3DummypayConfig) V3ConnectorConfig {
	typ := V3ConnectorConfigTypeV3DummypayConfig

	return V3ConnectorConfig{
		V3DummypayConfig: &v3DummypayConfig,
		Type:             typ,
	}
}

func CreateV3ConnectorConfigV3GenericConfig(v3GenericConfig V3GenericConfig) V3ConnectorConfig {
	typ := V3ConnectorConfigTypeV3GenericConfig

	return V3ConnectorConfig{
		V3GenericConfig: &v3GenericConfig,
		Type:            typ,
	}
}

func CreateV3ConnectorConfigV3MangopayConfig(v3MangopayConfig V3MangopayConfig) V3ConnectorConfig {
	typ := V3ConnectorConfigTypeV3MangopayConfig

	return V3ConnectorConfig{
		V3MangopayConfig: &v3MangopayConfig,
		Type:             typ,
	}
}

func CreateV3ConnectorConfigV3ModulrConfig(v3ModulrConfig V3ModulrConfig) V3ConnectorConfig {
	typ := V3ConnectorConfigTypeV3ModulrConfig

	return V3ConnectorConfig{
		V3ModulrConfig: &v3ModulrConfig,
		Type:           typ,
	}
}

func CreateV3ConnectorConfigV3MoneycorpConfig(v3MoneycorpConfig V3MoneycorpConfig) V3ConnectorConfig {
	typ := V3ConnectorConfigTypeV3MoneycorpConfig

	return V3ConnectorConfig{
		V3MoneycorpConfig: &v3MoneycorpConfig,
		Type:              typ,
	}
}

func CreateV3ConnectorConfigV3StripeConfig(v3StripeConfig V3StripeConfig) V3ConnectorConfig {
	typ := V3ConnectorConfigTypeV3StripeConfig

	return V3ConnectorConfig{
		V3StripeConfig: &v3StripeConfig,
		Type:           typ,
	}
}

func CreateV3ConnectorConfigV3WiseConfig(v3WiseConfig V3WiseConfig) V3ConnectorConfig {
	typ := V3ConnectorConfigTypeV3WiseConfig

	return V3ConnectorConfig{
		V3WiseConfig: &v3WiseConfig,
		Type:         typ,
	}
}

func (u *V3ConnectorConfig) UnmarshalJSON(data []byte) error {

	var v3DummypayConfig V3DummypayConfig = V3DummypayConfig{}
	if err := utils.UnmarshalJSON(data, &v3DummypayConfig, "", true, true); err == nil {
		u.V3DummypayConfig = &v3DummypayConfig
		u.Type = V3ConnectorConfigTypeV3DummypayConfig
		return nil
	}

	var v3StripeConfig V3StripeConfig = V3StripeConfig{}
	if err := utils.UnmarshalJSON(data, &v3StripeConfig, "", true, true); err == nil {
		u.V3StripeConfig = &v3StripeConfig
		u.Type = V3ConnectorConfigTypeV3StripeConfig
		return nil
	}

	var v3GenericConfig V3GenericConfig = V3GenericConfig{}
	if err := utils.UnmarshalJSON(data, &v3GenericConfig, "", true, true); err == nil {
		u.V3GenericConfig = &v3GenericConfig
		u.Type = V3ConnectorConfigTypeV3GenericConfig
		return nil
	}

	var v3WiseConfig V3WiseConfig = V3WiseConfig{}
	if err := utils.UnmarshalJSON(data, &v3WiseConfig, "", true, true); err == nil {
		u.V3WiseConfig = &v3WiseConfig
		u.Type = V3ConnectorConfigTypeV3WiseConfig
		return nil
	}

	var v3AtlarConfig V3AtlarConfig = V3AtlarConfig{}
	if err := utils.UnmarshalJSON(data, &v3AtlarConfig, "", true, true); err == nil {
		u.V3AtlarConfig = &v3AtlarConfig
		u.Type = V3ConnectorConfigTypeV3AtlarConfig
		return nil
	}

	var v3CurrencycloudConfig V3CurrencycloudConfig = V3CurrencycloudConfig{}
	if err := utils.UnmarshalJSON(data, &v3CurrencycloudConfig, "", true, true); err == nil {
		u.V3CurrencycloudConfig = &v3CurrencycloudConfig
		u.Type = V3ConnectorConfigTypeV3CurrencycloudConfig
		return nil
	}

	var v3MangopayConfig V3MangopayConfig = V3MangopayConfig{}
	if err := utils.UnmarshalJSON(data, &v3MangopayConfig, "", true, true); err == nil {
		u.V3MangopayConfig = &v3MangopayConfig
		u.Type = V3ConnectorConfigTypeV3MangopayConfig
		return nil
	}

	var v3ModulrConfig V3ModulrConfig = V3ModulrConfig{}
	if err := utils.UnmarshalJSON(data, &v3ModulrConfig, "", true, true); err == nil {
		u.V3ModulrConfig = &v3ModulrConfig
		u.Type = V3ConnectorConfigTypeV3ModulrConfig
		return nil
	}

	var v3MoneycorpConfig V3MoneycorpConfig = V3MoneycorpConfig{}
	if err := utils.UnmarshalJSON(data, &v3MoneycorpConfig, "", true, true); err == nil {
		u.V3MoneycorpConfig = &v3MoneycorpConfig
		u.Type = V3ConnectorConfigTypeV3MoneycorpConfig
		return nil
	}

	var v3AdyenConfig V3AdyenConfig = V3AdyenConfig{}
	if err := utils.UnmarshalJSON(data, &v3AdyenConfig, "", true, true); err == nil {
		u.V3AdyenConfig = &v3AdyenConfig
		u.Type = V3ConnectorConfigTypeV3AdyenConfig
		return nil
	}

	var v3BankingcircleConfig V3BankingcircleConfig = V3BankingcircleConfig{}
	if err := utils.UnmarshalJSON(data, &v3BankingcircleConfig, "", true, true); err == nil {
		u.V3BankingcircleConfig = &v3BankingcircleConfig
		u.Type = V3ConnectorConfigTypeV3BankingcircleConfig
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for V3ConnectorConfig", string(data))
}

func (u V3ConnectorConfig) MarshalJSON() ([]byte, error) {
	if u.V3AdyenConfig != nil {
		return utils.MarshalJSON(u.V3AdyenConfig, "", true)
	}

	if u.V3AtlarConfig != nil {
		return utils.MarshalJSON(u.V3AtlarConfig, "", true)
	}

	if u.V3BankingcircleConfig != nil {
		return utils.MarshalJSON(u.V3BankingcircleConfig, "", true)
	}

	if u.V3CurrencycloudConfig != nil {
		return utils.MarshalJSON(u.V3CurrencycloudConfig, "", true)
	}

	if u.V3DummypayConfig != nil {
		return utils.MarshalJSON(u.V3DummypayConfig, "", true)
	}

	if u.V3GenericConfig != nil {
		return utils.MarshalJSON(u.V3GenericConfig, "", true)
	}

	if u.V3MangopayConfig != nil {
		return utils.MarshalJSON(u.V3MangopayConfig, "", true)
	}

	if u.V3ModulrConfig != nil {
		return utils.MarshalJSON(u.V3ModulrConfig, "", true)
	}

	if u.V3MoneycorpConfig != nil {
		return utils.MarshalJSON(u.V3MoneycorpConfig, "", true)
	}

	if u.V3StripeConfig != nil {
		return utils.MarshalJSON(u.V3StripeConfig, "", true)
	}

	if u.V3WiseConfig != nil {
		return utils.MarshalJSON(u.V3WiseConfig, "", true)
	}

	return nil, errors.New("could not marshal union type V3ConnectorConfig: all fields are null")
}
