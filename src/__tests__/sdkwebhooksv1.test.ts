/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { SDK } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Sdk Webhooks V1 Activate Config", async () => {
  const testHttpClient = createTestHTTPClient("activateConfig");

  const sdk = new SDK({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    security: {
      clientID: "<YOUR_CLIENT_ID_HERE>",
      clientSecret: "<YOUR_CLIENT_SECRET_HERE>",
    },
  });

  const result = await sdk.webhooks.v1.activateConfig({
    id: "4997257d-dfb6-445b-929c-cbe2ab182818",
  });
  expect(result.statusCode).toBe(200);
  expect(result.configResponse).toBeDefined();
  expect(result.configResponse).toEqual({
    data: {
      active: true,
      createdAt: new Date("2025-04-13T00:54:15.165Z"),
      endpoint: "https://example.com",
      eventTypes: [
        "TYPE1",
      ],
      id: "614a5830-bda0-4680-b1ea-6090dd8532c6",
      secret: "V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3",
      updatedAt: new Date("2023-07-24T14:37:40.680Z"),
    },
  });
});

test("Sdk Webhooks V1 Change Config Secret", async () => {
  const testHttpClient = createTestHTTPClient("changeConfigSecret");

  const sdk = new SDK({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    security: {
      clientID: "<YOUR_CLIENT_ID_HERE>",
      clientSecret: "<YOUR_CLIENT_SECRET_HERE>",
    },
  });

  const result = await sdk.webhooks.v1.changeConfigSecret({
    configChangeSecret: {
      secret: "V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3",
    },
    id: "4997257d-dfb6-445b-929c-cbe2ab182818",
  });
  expect(result.statusCode).toBe(200);
  expect(result.configResponse).toBeDefined();
  expect(result.configResponse).toEqual({
    data: {
      active: true,
      createdAt: new Date("2023-12-07T06:10:53.379Z"),
      endpoint: "https://example.com",
      eventTypes: [
        "TYPE1",
      ],
      id: "8470f220-7a70-4ef7-9be4-3432827b4f03",
      secret: "V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3",
      updatedAt: new Date("2023-11-27T20:14:58.331Z"),
    },
  });
});

test("Sdk Webhooks V1 Deactivate Config", async () => {
  const testHttpClient = createTestHTTPClient("deactivateConfig");

  const sdk = new SDK({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    security: {
      clientID: "<YOUR_CLIENT_ID_HERE>",
      clientSecret: "<YOUR_CLIENT_SECRET_HERE>",
    },
  });

  const result = await sdk.webhooks.v1.deactivateConfig({
    id: "4997257d-dfb6-445b-929c-cbe2ab182818",
  });
  expect(result.statusCode).toBe(200);
  expect(result.configResponse).toBeDefined();
  expect(result.configResponse).toEqual({
    data: {
      active: true,
      createdAt: new Date("2023-11-29T11:20:57.032Z"),
      endpoint: "https://example.com",
      eventTypes: [
        "TYPE1",
      ],
      id: "85e5b25b-022b-4bd7-8c33-fbf5950d0f8f",
      secret: "V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3",
      updatedAt: new Date("2024-05-26T16:43:50.510Z"),
    },
  });
});

test("Sdk Webhooks V1 Delete Config", async () => {
  const testHttpClient = createTestHTTPClient("deleteConfig");

  const sdk = new SDK({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    security: {
      clientID: "<YOUR_CLIENT_ID_HERE>",
      clientSecret: "<YOUR_CLIENT_SECRET_HERE>",
    },
  });

  const result = await sdk.webhooks.v1.deleteConfig({
    id: "4997257d-dfb6-445b-929c-cbe2ab182818",
  });
  expect(result.statusCode).toBe(200);
});

test("Sdk Webhooks V1 Get Many Configs", async () => {
  const testHttpClient = createTestHTTPClient("getManyConfigs");

  const sdk = new SDK({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    security: {
      clientID: "<YOUR_CLIENT_ID_HERE>",
      clientSecret: "<YOUR_CLIENT_SECRET_HERE>",
    },
  });

  const result = await sdk.webhooks.v1.getManyConfigs({
    endpoint: "https://example.com",
    id: "4997257d-dfb6-445b-929c-cbe2ab182818",
  });
  expect(result.statusCode).toBe(200);
  expect(result.configsResponse).toBeDefined();
  expect(result.configsResponse).toEqual({
    cursor: {
      data: [
        {
          active: true,
          createdAt: new Date("2023-10-03T21:24:00.401Z"),
          endpoint: "https://example.com",
          eventTypes: [
            "TYPE1",
          ],
          id: "f1f67d72-d5d3-4e22-8f79-851fcbdc0d83",
          secret: "V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3",
          updatedAt: new Date("2023-02-14T18:49:51.264Z"),
        },
      ],
      hasMore: false,
    },
  });
});

test("Sdk Webhooks V1 Insert Config", async () => {
  const testHttpClient = createTestHTTPClient("insertConfig");

  const sdk = new SDK({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    security: {
      clientID: "<YOUR_CLIENT_ID_HERE>",
      clientSecret: "<YOUR_CLIENT_SECRET_HERE>",
    },
  });

  const result = await sdk.webhooks.v1.insertConfig({
    endpoint: "https://example.com",
    eventTypes: [
      "TYPE1",
    ],
    name: "customer_payment",
    secret: "V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3",
  });
  expect(result.statusCode).toBe(200);
  expect(result.configResponse).toBeDefined();
  expect(result.configResponse).toEqual({
    data: {
      active: true,
      createdAt: new Date("2025-08-30T14:01:19.887Z"),
      endpoint: "https://example.com",
      eventTypes: [
        "TYPE1",
      ],
      id: "0f756b09-5b38-465b-b8f2-983f240d4f5c",
      secret: "V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3",
      updatedAt: new Date("2024-08-09T10:29:51.537Z"),
    },
  });
});

test("Sdk Webhooks V1 Test Config", async () => {
  const testHttpClient = createTestHTTPClient("testConfig");

  const sdk = new SDK({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    security: {
      clientID: "<YOUR_CLIENT_ID_HERE>",
      clientSecret: "<YOUR_CLIENT_SECRET_HERE>",
    },
  });

  const result = await sdk.webhooks.v1.testConfig({
    id: "4997257d-dfb6-445b-929c-cbe2ab182818",
  });
  expect(result.statusCode).toBe(200);
  expect(result.attemptResponse).toBeDefined();
  expect(result.attemptResponse).toEqual({
    data: {
      config: {
        active: true,
        createdAt: new Date("2024-05-29T09:53:58.891Z"),
        endpoint: "https://example.com",
        eventTypes: [
          "TYPE1",
        ],
        id: "86054b6d-7f7e-4fb8-8f2f-b6a855cea0c7",
        secret: "V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3",
        updatedAt: new Date("2023-04-25T07:02:46.380Z"),
      },
      createdAt: new Date("2025-06-16T21:37:32.643Z"),
      id: "c7827ed3-469f-4c48-a7d1-c853b7f1271e",
      payload: "{\"data\":\"test\"}",
      retryAttempt: 1,
      status: "success",
      statusCode: 200,
      updatedAt: new Date("2024-10-18T10:47:20.940Z"),
      webhookID: "05f47970-be91-4384-9266-38e01d5768d6",
    },
  });
});

test("Sdk Webhooks V1 Update Config", async () => {
  const testHttpClient = createTestHTTPClient("updateConfig");

  const sdk = new SDK({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    security: {
      clientID: "<YOUR_CLIENT_ID_HERE>",
      clientSecret: "<YOUR_CLIENT_SECRET_HERE>",
    },
  });

  const result = await sdk.webhooks.v1.updateConfig({
    configUser: {
      endpoint: "https://example.com",
      eventTypes: [
        "TYPE1",
      ],
      name: "customer_payment",
      secret: "V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3",
    },
    id: "4997257d-dfb6-445b-929c-cbe2ab182818",
  });
  expect(result.statusCode).toBe(200);
});
