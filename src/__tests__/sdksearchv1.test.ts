/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { SDK } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Sdk Search V1 Search", async () => {
  const testHttpClient = createTestHTTPClient("search");

  const sdk = new SDK({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    security: {
      clientID: "<YOUR_CLIENT_ID_HERE>",
      clientSecret: "<YOUR_CLIENT_SECRET_HERE>",
    },
  });

  const result = await sdk.search.v1.search({
    after: [
      "users:002",
    ],
    cursor: "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol=",
    ledgers: [
      "quickstart",
    ],
    policy: "OR",
    sort: "id:asc",
    terms: [
      "destination=central_bank1",
    ],
  });
  expect(result.statusCode).toBe(200);
  expect(result.response).toBeDefined();
  expect(result.response).toEqual({
    cursor: {
      next: "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol=",
      previous: "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol=",
      total: {
        relation: "eq",
        value: 1,
      },
    },
  });
});

test("Sdk Search V1 Searchget Server Info", async () => {
  const testHttpClient = createTestHTTPClient("searchgetServerInfo");

  const sdk = new SDK({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    security: {
      clientID: "<YOUR_CLIENT_ID_HERE>",
      clientSecret: "<YOUR_CLIENT_SECRET_HERE>",
    },
  });

  const result = await sdk.search.v1.searchgetServerInfo();
  expect(result.statusCode).toBe(200);
  expect(result.serverInfo).toBeDefined();
  expect(result.serverInfo).toEqual({
    version: "<value>",
  });
});
